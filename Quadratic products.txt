List[RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Plus[Times[b, Power[2, -1]], Times[c, x]], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]], Int[Times[1, Power[Plus[Times[b, Power[2, -1]], Times[c, x]], -1]], x], x], And[FreeQ[List[a, b, c], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[2, c, Plus[Times[2, p], 1]], -1]], x], And[FreeQ[List[a, b, c, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, p], 1]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[1, Power[Power[c, p], -1]], Int[Times[Power[Simp[Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]], Times[c, x]], x], p], Power[Simp[Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]], Times[c, x]], x], p]], x], x]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[p], PerfectSquareQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], x], x], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PositiveIntegerQ[p], Not[PerfectSquareQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[2, c, Plus[Times[2, p], 1]], -1]], x], Times[-1, Dist[Times[p, Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[2, c, Plus[Times[2, p], 1]], -1]], Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], x], x]]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Greater[p, 0], IntegerQ[Times[4, p]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Plus[b, Times[2, c, x]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]], x], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Times[-1, Dist[Times[2, c, Plus[Times[2, p], 3], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], x], x]]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1], Unequal[p, Times[-3, Power[2, -1]]], IntegerQ[Times[4, p]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[c, Power[q, -1]], Int[Times[1, Power[Simp[Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]], Times[c, x]], x], -1]], x], x], Times[-1, Dist[Times[c, Power[q, -1]], Int[Times[1, Power[Simp[Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]], Times[c, x]], x], -1]], x], x]]]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PosQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PerfectSquareQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Plus[1, Times[-1, 4, Simplify[Times[a, c, Power[Power[b, 2], -1]]]]]]], Condition[Dist[Times[-2, Power[b, -1]], Subst[Int[Times[1, Power[Plus[q, Times[-1, Power[x, 2]]], -1]], x], x, Plus[1, Times[2, c, x, Power[b, -1]]]], x], And[RationalQ[q], Or[EqQ[Power[q, 2], 1], Not[RationalQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]]]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Pattern[x, Blank[Symbol]]]], Condition[Dist[-2, Subst[Int[Times[1, Power[Simp[Plus[Power[b, 2], Times[-1, 4, a, c], Times[-1, Power[x, 2]]], x], -1]], x], x, Plus[b, Times[2, c, x]]], x], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Times[2, c, Power[Times[-4, c, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]], p]], -1]], Subst[Int[Power[Simp[Plus[1, Times[-1, Power[x, 2], Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]], x], p], x], x, Plus[b, Times[2, c, x]]], x], And[FreeQ[List[a, b, c, p], x], PositiveQ[Plus[Times[4, a], Times[-1, Power[b, 2], Power[c, -1]]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Subst[Int[Times[1, Power[Plus[1, Times[-1, c, Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[Times[b, x], Times[c, Power[x, 2]]]], -1]]], x], FreeQ[List[b, c], x]]], RuleDelayed[HoldPattern[Int[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Subst[Int[Times[1, Power[Plus[Times[4, c], Times[-1, Power[x, 2]]], -1]], x], x, Times[Plus[b, Times[2, c, x]], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]]], x], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[Times[b, x], Times[c, Power[x, 2]]], p], Power[Power[Times[-1, c, Plus[Times[b, x], Times[c, Power[x, 2]]], Power[Power[b, 2], -1]], p], -1]], Int[Power[Plus[Times[-1, c, x, Power[b, -1]], Times[-1, Power[c, 2], Power[x, 2], Power[Power[b, 2], -1]]], p], x], x], And[FreeQ[List[b, c], x], RationalQ[p], LessEqual[3, Denominator[p], 4]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[d, Denominator[p]]], Condition[Dist[Times[d, Sqrt[Power[Plus[b, Times[2, c, x]], 2]], Power[Plus[b, Times[2, c, x]], -1]], Subst[Int[Times[Power[x, Plus[Times[d, Plus[p, 1]], -1]], Power[Sqrt[Plus[Power[b, 2], Times[-1, 4, a, c], Times[4, c, Power[x, d]]]], -1]], x], x, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Times[1, Power[d, -1]]]], x], LessEqual[3, d, 4]]], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Times[-1, Simp[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[q, Plus[p, 1], Power[Times[Plus[q, Times[-1, b], Times[-1, 2, c, x]], Power[Times[2, q], -1]], Plus[p, 1]]], -1], Hypergeometric2F1[Times[-1, p], Plus[p, 1], Plus[p, 2], Times[Plus[b, q, Times[2, c, x]], Power[Times[2, q], -1]]]], x]]], And[FreeQ[List[a, b, c, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[Times[4, p]]]]]], RuleDelayed[HoldPattern[Int[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Pattern[p, Blank[]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], x], x, u], x], And[FreeQ[List[a, b, c, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[e, m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, Times[Plus[m, 1], Power[2, -1]]]], Power[Times[Power[c, Times[Plus[m, 1], Power[2, -1]]], Plus[m, Times[2, p], 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], IntegerQ[Times[Plus[m, 1], Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Log[RemoveContent[Plus[d, Times[e, x]], x]], Power[e, -1]], x], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[m, Times[2, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, Times[2, p], 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, Times[2, p], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Plus[m, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[m, Times[2, p], 2]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Plus[b, Times[2, c, x]], -1]], Int[Times[Plus[b, Times[2, c, x]], Power[Power[Plus[d, Times[e, x]], 2], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[e, Plus[m, 2]], -1]], x], Times[-1, Dist[Times[Plus[Times[2, c, d], Times[-1, b, e]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[e, Plus[m, 2], Plus[b, Times[2, c, x]]], -1]], Int[Power[Plus[d, Times[e, x]], m], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-4, c, e, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[Power[Plus[Times[2, c, d], Times[-1, b, e]], 2], Plus[d, Times[e, x]]], -1]], x], Dist[Times[2, c, Power[Plus[Times[2, c, d], Times[-1, b, e]], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, x]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, c, e, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[Times[m, p], -1], Power[Plus[Times[2, c, d], Times[-1, b, e]], 2]], -1]], x], Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Plus[m, 2], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[m, Times[2, p], 3]], NonzeroQ[Plus[m, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, Plus[p, 1]], -1]], x], Dist[Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, c], -1]], Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[p, Times[3, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, 1]], -1]], x], Plus[Dist[Times[p, Plus[Times[2, p], -1], Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[Power[e, 2], Plus[m, 1], Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x], Times[-1, Simp[Times[p, Power[Plus[d, Times[e, x]], Plus[m, 2]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Times[Power[e, 2], Plus[m, 1], Plus[m, Times[2, p], 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m, p], Greater[p, 1], Inequality[-2, LessEqual, m, Less, -1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, 1]], -1]], x], Plus[Dist[Times[2, c, p, Plus[Times[2, p], -1], Power[Times[Power[e, 2], Plus[m, 1], Plus[m, 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x], Times[-1, Simp[Times[p, Power[Plus[d, Times[e, x]], Plus[m, 2]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Times[Power[e, 2], Plus[m, 1], Plus[m, 2]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m, p], Greater[p, 1], Less[m, -2], IntegerQ[Times[2, p]], Not[And[NegativeIntegerQ[Plus[m, Times[2, p], 3]], Greater[Plus[m, Times[3, p], 3], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, Times[2, p], 1]], -1]], x], Plus[Dist[Times[p, Plus[Times[2, p], -1], Power[Plus[Times[2, c, d], Times[-1, b, e]], 2], Power[Times[2, c, Power[e, 2], Plus[m, Times[2, p]], Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x], Times[-1, Simp[Times[p, Plus[Times[2, c, d], Times[-1, b, e]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Times[2, c, Power[e, 2], Plus[m, Times[2, p]], Plus[m, Times[2, p], 1]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[m, Times[2, p]]], NonzeroQ[Plus[m, Times[2, p], 1]], Not[And[NegativeIntegerQ[Plus[m, Times[2, p], 3]], Greater[Plus[m, Times[3, p], 3], 0]]], Not[And[RationalQ[m], Less[m, -2]]], Not[And[IntegerQ[m], Less[0, m, Times[2, p]]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Plus[m, Times[2, p], 2], Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Times[2, p], 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x]], Plus[Dist[Times[Power[e, 2], m, Plus[m, Times[2, p], 2], Power[Times[Plus[p, 1], Plus[Times[2, p], 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x], Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Plus[Times[2, p], 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m, p], Less[p, -1], Inequality[0, Less, m, LessEqual, 1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, m, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, Plus[p, 1], Plus[Times[2, p], 1]], -1]], x]], Plus[Dist[Times[Power[e, 2], m, Plus[m, -1], Power[Times[2, c, Plus[p, 1], Plus[Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x], Simp[Times[Power[Plus[d, Times[e, x]], m], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[2, c, Plus[Times[2, p], 1]], -1]], x]]], And[FreeQ[List[a, b, c, d, e], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m, p], Less[p, -1], Greater[m, 1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, c, e, Plus[m, Times[2, p], 2], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Times[2, p], 1], Power[Plus[Times[2, c, d], Times[-1, b, e]], 2]], -1]], x], Plus[Dist[Times[2, c, Power[e, 2], Plus[m, Times[2, p], 2], Plus[m, Times[2, p], 3], Power[Times[Plus[p, 1], Plus[Times[2, p], 1], Power[Plus[Times[2, c, d], Times[-1, b, e]], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x], Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Plus[Times[2, p], 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x]]], And[FreeQ[List[a, b, c, d, e, m], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m, p], Less[p, -1], NonzeroQ[Plus[m, p, 1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], m], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[2, c, Plus[m, Times[2, p], 1]], -1]], x], Dist[Times[m, Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, c, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m], Greater[m, 0], NonzeroQ[Plus[m, Times[2, p], 1]], Or[Not[RationalQ[p]], Inequality[-1, LessEqual, p, Less, 0], And[IntegerQ[m], Less[0, m, Times[2, p]]], And[Equal[m, Times[1, Power[2, -1]]], Less[p, 0]]], Or[IntegerQ[m], IntegerQ[Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Plus[m, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x]], Dist[Times[2, c, Plus[m, Times[2, p], 2], Power[Times[Plus[m, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m], Less[m, -1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[c, IntPart[p]], Power[Plus[Times[b, Power[2, -1]], Times[c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[Times[b, Power[2, -1]], Times[c, x]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], And[FreeQ[List[a, c, d, e, m, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Or[IntegerQ[p], And[PositiveQ[a], PositiveQ[d], IntegerQ[Plus[m, p]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1]], -1]], x], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1]], -1]], x], And[FreeQ[List[a, c, d, e, m, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[e, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, d, Plus[p, 1]], -1]], x], And[FreeQ[List[a, c, d, e, m, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], 2], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Plus[d, Times[e, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[e, 2], Plus[p, 2], Power[Times[c, Plus[p, 1]], -1]], Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Plus[d, Times[e, x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[e, 2], Plus[p, 2], Power[Times[c, Plus[p, 1]], -1]], Int[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], x], x]]], And[FreeQ[List[a, c, d, e, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[m, p]], Power[Power[Plus[Times[a, Power[d, -1]], Times[c, x, Power[e, -1]]], m], -1]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], IntegerQ[m], RationalQ[p], Or[Less[0, Times[-1, m], p], Less[p, Times[-1, m], 0]], Unequal[m, 2], Unequal[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, Times[2, m]], Power[Power[a, m], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[m, p]], Power[Power[Plus[d, Times[-1, e, x]], m], -1]], x], x], And[FreeQ[List[a, c, d, e, m, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], IntegerQ[m], RationalQ[p], Or[Less[0, Times[-1, m], p], Less[p, Times[-1, m], 0]], Unequal[m, 2], Unequal[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], x], Dist[Times[Simplify[Plus[m, p]], Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], PositiveIntegerQ[Simplify[Plus[m, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], x], Dist[Times[2, c, d, Simplify[Plus[m, p]], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, m, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], PositiveIntegerQ[Simplify[Plus[m, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, p, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x]], Dist[Times[c, Simplify[Plus[m, Times[2, p], 2]], Power[Times[Plus[m, p, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], NegativeIntegerQ[Simplify[Plus[m, Times[2, p], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, d, Plus[m, p, 1]], -1]], x]], Dist[Times[Simplify[Plus[m, Times[2, p], 2]], Power[Times[2, d, Plus[m, p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, m, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], NegativeIntegerQ[Simplify[Plus[m, Times[2, p], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, e], Subst[Int[Times[1, Power[Plus[Times[2, c, d], Times[-1, b, e], Times[Power[e, 2], Power[x, 2]]], -1]], x], x, Times[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, x]]], -1]]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, e], Subst[Int[Times[1, Power[Plus[Times[2, c, d], Times[Power[e, 2], Power[x, 2]]], -1]], x], x, Times[Sqrt[Plus[a, Times[c, Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, x]]], -1]]], x], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, p, 1]], -1]], x], Times[-1, Dist[Times[c, p, Power[Times[Power[e, 2], Plus[m, p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m, p], Greater[p, 0], Or[Less[m, -2], ZeroQ[Plus[m, Times[2, p], 1]]], NonzeroQ[Plus[m, p, 1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, p, 1]], -1]], x], Times[-1, Dist[Times[c, p, Power[Times[Power[e, 2], Plus[m, p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Greater[p, 0], Or[Less[m, -2], ZeroQ[Plus[m, Times[2, p], 1]]], NonzeroQ[Plus[m, p, 1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, Times[2, p], 1]], -1]], x], Times[-1, Dist[Times[p, Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[Power[e, 2], Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m, p], Greater[p, 0], Or[Inequality[-2, LessEqual, m, Less, 0], Equal[Plus[m, p, 1], 0]], NonzeroQ[Plus[m, Times[2, p], 1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, Times[2, p], 1]], -1]], x], Times[-1, Dist[Times[2, c, d, p, Power[Times[Power[e, 2], Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Greater[p, 0], Or[Inequality[-2, LessEqual, m, Less, 0], Equal[Plus[m, p, 1], 0]], NonzeroQ[Plus[m, Times[2, p], 1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[e, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Times[-1, Dist[Times[Plus[Times[2, c, d], Times[-1, b, e]], Plus[m, Times[2, p], 2], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Inequality[0, Less, m, LessEqual, 1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[d, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, e, Plus[p, 1]], -1]], x]], Dist[Times[d, Plus[m, Times[2, p], 2], Power[Times[2, a, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Inequality[0, Less, m, LessEqual, 1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[e, 2], Plus[m, p], Power[Times[c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[Power[e, 2], Plus[m, p], Power[Times[c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], x], Dist[Times[Plus[m, p], Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m], GreaterEqual[m, 1], NonzeroQ[Plus[m, Times[2, p], 1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], x], Dist[Times[2, c, d, Plus[m, p], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m], GreaterEqual[m, 1], NonzeroQ[Plus[m, Times[2, p], 1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, p, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x]], Dist[Times[c, Plus[m, Times[2, p], 2], Power[Times[Plus[m, p, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m], Less[m, 0], NonzeroQ[Plus[m, p, 1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, d, Plus[m, p, 1]], -1]], x]], Dist[Times[Plus[m, Times[2, p], 2], Power[Times[2, d, Plus[m, p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m], Less[m, 0], NonzeroQ[Plus[m, p, 1]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[e, x], m], Power[Plus[Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Power[x, Plus[m, p]], Power[Plus[b, Times[c, x]], p]], -1]], Int[Times[Power[x, Plus[m, p]], Power[Plus[b, Times[c, x]], p]], x], x], And[FreeQ[List[b, c, e, m], x], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], And[FreeQ[List[a, c, d, e, m, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], PositiveQ[a], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, x]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, x], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, x]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, x], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], x], And[FreeQ[List[a, c, d, e, m], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[-4, b, c, Power[Times[d, Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[1, Power[Plus[b, Times[2, c, x]], -1]], x], x], Dist[Times[Power[b, 2], Power[Times[Power[d, 2], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Plus[d, Times[e, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[2, c, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[e, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[m, Times[2, p], 3]], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], PositiveIntegerQ[p], Not[And[ZeroQ[Plus[m, -3]], Unequal[p, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[b, p, Power[Times[d, e, Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, Times[2, p], 3]], RationalQ[m, p], Greater[p, 0], Less[m, -1], Not[And[EvenQ[m], Less[Plus[m, Times[2, p], 3], 0]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, Times[2, p], 1]], -1]], x], Times[-1, Dist[Times[d, p, Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[b, e, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, Times[2, p], 3]], RationalQ[p], Greater[p, 0], Not[And[RationalQ[m], Less[m, -1]]], Not[And[PositiveIntegerQ[Times[Plus[m, -1], Power[2, -1]]], Or[Not[IntegerQ[p]], Less[m, Times[2, p]]]]], RationalQ[m], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[d, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[b, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[d, e, Plus[m, -1], Power[Times[b, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, Times[2, p], 3]], RationalQ[m, p], Less[p, -1], Greater[m, 1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, c, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[e, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Times[-1, Dist[Times[2, c, e, Plus[m, Times[2, p], 3], Power[Times[e, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, Times[2, p], 3]], RationalQ[p], Less[p, -1], Not[And[RationalQ[m], Greater[m, 1]]], RationalQ[m], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[4, c], Subst[Int[Times[1, Power[Plus[Times[Power[b, 2], e], Times[-1, 4, a, c, e], Times[4, c, e, Power[x, 2]]], -1]], x], x, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[4, Power[e, -1], Sqrt[Times[-1, c, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]]], Subst[Int[Times[1, Power[Sqrt[Simp[Plus[1, Times[-1, Power[b, 2], Power[x, 4], Power[Times[Power[d, 2], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]]], x]], -1]], x], x, Sqrt[Plus[d, Times[e, x]]]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NegativeQ[Times[c, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[4, Power[e, -1], Sqrt[Times[-1, c, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]]], Subst[Int[Times[Power[x, 2], Power[Sqrt[Simp[Plus[1, Times[-1, Power[b, 2], Power[x, 4], Power[Times[Power[d, 2], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]]], x]], -1]], x], x, Sqrt[Plus[d, Times[e, x]]]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NegativeQ[Times[c, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[Times[-1, c, Plus[a, Times[b, x], Times[c, Power[x, 2]]], Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Sqrt[Plus[Times[-1, a, c, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]], Times[-1, b, c, x, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]], Times[-1, Power[c, 2], Power[x, 2], Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], EqQ[Power[m, 2], Times[1, Power[4, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, d, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[b, Plus[m, Times[2, p], 1]], -1]], x], Dist[Times[Power[d, 2], Plus[m, -1], Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[Power[b, 2], Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, Times[2, p], 3]], RationalQ[m], Greater[m, 1], NonzeroQ[Plus[m, Times[2, p], 1]], Or[IntegerQ[Times[2, p]], And[IntegerQ[m], RationalQ[p]], OddQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[-2, b, d, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Power[d, 2], Plus[m, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Dist[Times[Power[b, 2], Plus[m, Times[2, p], 3], Power[Times[Power[d, 2], Plus[m, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, Times[2, p], 3]], RationalQ[m], Less[m, -1], Or[IntegerQ[Times[2, p]], And[IntegerQ[m], RationalQ[p]], IntegerQ[Times[Plus[m, Times[2, p], 3], Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[e, -1]], Subst[Int[Times[Power[x, m], Power[Plus[a, Times[-1, Power[b, 2], Power[Times[4, c], -1]], Times[Times[c, Power[x, 2]], Power[Power[e, 2], -1]]], p]], x], x, Plus[d, Times[e, x]]], x], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, c, d, e, m], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PositiveIntegerQ[p], Not[And[ZeroQ[Plus[m, -1]], Greater[p, 1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[Plus[Times[c, d], Times[-1, e, Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]]]]], Power[q, -1]], Int[Times[1, Power[Plus[Times[b, Power[2, -1]], Times[-1, q, Power[2, -1]], Times[c, x]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[c, d], Times[-1, e, Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]]]]], Power[q, -1]], Int[Times[1, Power[Plus[Times[b, Power[2, -1]], Times[q, Power[2, -1]], Times[c, x]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NiceSqrtQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Plus[Dist[Plus[Times[e, Power[2, -1]], Times[c, d, Power[Times[2, q], -1]]], Int[Times[1, Power[Plus[Times[-1, q], Times[c, x]], -1]], x], x], Dist[Plus[Times[e, Power[2, -1]], Times[-1, c, d, Power[Times[2, q], -1]]], Int[Times[1, Power[Plus[q, Times[c, x]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], NiceSqrtQ[Times[-1, a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, c], -1]], Int[Times[1, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[e, Power[Times[2, c], -1]], Int[Times[Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], Not[NiceSqrtQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[1, Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x], Dist[e, Int[Times[x, Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[NiceSqrtQ[Times[-1, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, e], Subst[Int[Times[Power[x, 2], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]], Times[-1, Plus[Times[2, c, d], Times[-1, b, e]], Power[x, 2]], Times[c, Power[x, 4]]], -1]], x], x, Sqrt[Plus[d, Times[e, x]]]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, e], Subst[Int[Times[Power[x, 2], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]], Times[-1, 2, c, d, Power[x, 2]], Times[c, Power[x, 4]]], -1]], x], x, Sqrt[Plus[d, Times[e, x]]]], x], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[PolynomialDivide[Power[Plus[d, Times[e, x]], m], Plus[a, Times[b, x], Times[c, Power[x, 2]]], x], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], IntegerQ[m], Greater[m, 1], Or[NonzeroQ[d], Greater[m, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[PolynomialDivide[Power[Plus[d, Times[e, x]], m], Plus[a, Times[c, Power[x, 2]]], x], x], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegerQ[m], Greater[m, 1], Or[NonzeroQ[d], Greater[m, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Times[c, Plus[m, -1]], -1]], x], Dist[Times[1, Power[c, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Simp[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]], Times[e, Plus[Times[2, c, d], Times[-1, b, e]], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Times[c, Plus[m, -1]], -1]], x], Dist[Times[1, Power[c, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Simp[Plus[Times[c, Power[d, 2]], Times[-1, a, Power[e, 2]], Times[2, c, d, e, x]], x], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[e, 2], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[1, Power[Plus[d, Times[e, x]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Plus[Times[c, d], Times[-1, b, e], Times[-1, c, e, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[e, 2], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[1, Power[Plus[d, Times[e, x]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Plus[Times[c, d], Times[-1, c, e, x]], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, e], Subst[Int[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]], Times[-1, Plus[Times[2, c, d], Times[-1, b, e]], Power[x, 2]], Times[c, Power[x, 4]]], -1]], x], x, Sqrt[Plus[d, Times[e, x]]]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, e], Subst[Int[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]], Times[-1, 2, c, d, Power[x, 2]], Times[c, Power[x, 4]]], -1]], x], x, Sqrt[Plus[d, Times[e, x]]]], x], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Simp[Plus[Times[c, d], Times[-1, b, e], Times[-1, c, e, x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[c, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[d, Times[-1, e, x]], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, m], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[d, Times[e, x]], m], Times[1, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[d, Times[e, x]], m], Times[1, Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, c, d, e, m], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[-2, Plus[Times[b, d], Times[-1, 2, a, e], Times[Plus[Times[2, c, d], Times[-1, b, e]], x]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[-1, a, e], Times[c, d, x]], Power[Times[a, c, Sqrt[Plus[a, Times[c, Power[x, 2]]]]], -1]], x], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, d], Times[-1, 2, a, e], Times[Plus[Times[2, c, d], Times[-1, b, e]], x]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], Times[-1, Dist[Times[Plus[Times[2, p], 3], Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[p], Less[p, -1], Unequal[p, Times[-3, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, e], Times[-1, c, d, x]], Power[Times[2, a, c, Plus[p, 1]], -1], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], Dist[Times[d, Plus[Times[2, p], 3], Power[Times[2, a, Plus[p, 1]], -1]], Int[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], x], x]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[p], Less[p, -1], Unequal[p, Times[-3, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, Plus[p, 1]], -1]], x], Dist[Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, c], -1]], Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], x], x]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], Not[And[RationalQ[p], LessEqual[p, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, Plus[p, 1]], -1]], x], Dist[d, Int[Power[Plus[a, Times[c, Power[x, 2]]], p], x], x]], And[FreeQ[List[a, c, d, e, p], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[And[RationalQ[p], LessEqual[p, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d, Times[e, x]], FracPart[p]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Power[Plus[Times[a, d], Times[c, e, Power[x, 3]]], FracPart[p]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, Times[-1, p]]], Power[Plus[Times[a, d], Times[c, e, Power[x, 3]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, m, p], x], ZeroQ[Plus[Times[b, d], Times[a, e]]], ZeroQ[Plus[Times[c, d], Times[b, e]]], PositiveIntegerQ[Plus[m, Times[-1, p], 1]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Times[Sqrt[Times[b, x]], Sqrt[Plus[1, Times[c, Power[b, -1], x]]]], -1]], x], And[FreeQ[List[b, c, d, e], x], NonzeroQ[Plus[Times[c, d], Times[-1, b, e]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m], Equal[Power[m, 2], Times[1, Power[4, -1]]], NegativeQ[c], RationalQ[b]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[x], Sqrt[Plus[b, Times[c, x]]], Power[Sqrt[Plus[Times[b, x], Times[c, Power[x, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Times[Sqrt[x], Sqrt[Plus[b, Times[c, x]]]], -1]], x], x], And[FreeQ[List[b, c, d, e], x], NonzeroQ[Plus[Times[c, d], Times[-1, b, e]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m], Equal[Power[m, 2], Times[1, Power[4, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Subst[Int[Times[Power[x, Plus[Times[2, m], 1]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x, Sqrt[x]], x], And[FreeQ[List[a, b, c], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Power[m, 2], Times[-1, 1, Power[4, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[e, x], m], Power[Power[x, m], -1]], Int[Times[Power[x, m], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, b, c, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Power[m, 2], Times[-1, 1, Power[4, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2], Power[Plus[d, Times[e, x]], m], Sqrt[Times[-1, c, Plus[a, Times[b, x], Times[c, Power[x, 2]]], Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]], Power[Times[c, Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Times[2, c, Plus[d, Times[e, x]], Power[Plus[Times[2, c, d], Times[-1, b, e], Times[-1, e, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], -1]], m]], -1]], Subst[Int[Times[Power[Plus[1, Times[2, e, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2], Power[x, 2], Power[Plus[Times[2, c, d], Times[-1, b, e], Times[-1, e, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], -1]]], m], Power[Sqrt[Plus[1, Times[-1, Power[x, 2]]]], -1]], x], x, Sqrt[Times[Plus[b, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2], Times[2, c, x]], Power[Times[2, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]], -1]]]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[Power[m, 2], Times[-1, 1, Power[4, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, a, Rt[Times[-1, c, Power[a, -1]], 2], Power[Plus[d, Times[e, x]], m], Sqrt[Plus[1, Times[c, Power[x, 2], Power[a, -1]]]], Power[Times[c, Sqrt[Plus[a, Times[c, Power[x, 2]]]], Power[Times[c, Plus[d, Times[e, x]], Power[Plus[Times[c, d], Times[-1, a, e, Rt[Times[-1, c, Power[a, -1]], 2]]], -1]], m]], -1]], Subst[Int[Times[Power[Plus[1, Times[2, a, e, Rt[Times[-1, c, Power[a, -1]], 2], Power[x, 2], Power[Plus[Times[c, d], Times[-1, a, e, Rt[Times[-1, c, Power[a, -1]], 2]]], -1]]], m], Power[Sqrt[Plus[1, Times[-1, Power[x, 2]]]], -1]], x], x, Sqrt[Times[Plus[1, Times[-1, Rt[Times[-1, c, Power[a, -1]], 2], x]], Power[2, -1]]]], x], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], ZeroQ[Plus[Power[m, 2], Times[-1, 1, Power[4, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[d, b], Times[-1, 2, a, e], Times[Plus[Times[2, c, d], Times[-1, b, e]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[2, Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x]], Dist[Times[p, Plus[Power[b, 2], Times[-1, 4, a, c]], Power[Times[2, Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m, p], Equal[Plus[m, Times[2, p], 2], 0], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[-2, a, e], Times[Times[2, c, d], x]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[2, Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x]], Times[-1, Dist[Times[4, a, c, p, Power[Times[2, Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Equal[Plus[m, Times[2, p], 2], 0], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Plus[Times[d, b], Times[-1, 2, a, e], Times[Plus[Times[2, c, d], Times[-1, b, e]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Times[-1, Dist[Times[2, Plus[Times[2, p], 3], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m, p], Equal[Plus[m, Times[2, p], 2], 0], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Plus[Times[a, e], Times[-1, c, d, x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, c, Plus[p, 1]], -1]], x], Dist[Times[Plus[Times[2, p], 3], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Times[2, a, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Equal[Plus[m, Times[2, p], 2], 0], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[-2, Subst[Int[Times[1, Power[Plus[Times[4, c, Power[d, 2]], Times[-1, 4, b, d, e], Times[4, a, Power[e, 2]], Times[-1, Power[x, 2]]], -1]], x], x, Times[Plus[Times[2, a, e], Times[-1, b, d], Times[-1, Plus[Times[2, c, d], Times[-1, b, e]], x]], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Subst[Int[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]], Times[-1, Power[x, 2]]], -1]], x], x, Times[Plus[Times[a, e], Times[-1, c, d, x]], Power[Sqrt[Plus[a, Times[c, Power[x, 2]]]], -1]]]], FreeQ[List[a, c, d, e], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[b, Times[-1, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]], Times[2, c, x]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Plus[m, 1], Plus[Times[2, c, d], Times[-1, b, e], Times[e, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Power[Times[Plus[Times[2, c, d], Times[-1, b, e], Times[e, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[b, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2], Times[2, c, x]], Power[Times[Plus[Times[2, c, d], Times[-1, b, e], Times[-1, e, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[b, Times[-1, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]], Times[2, c, x]]], -1]], p]], -1], Hypergeometric2F1[Plus[m, 1], Times[-1, p], Plus[m, 2], Times[-4, c, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2], Plus[d, Times[e, x]], Power[Times[Plus[Times[2, c, d], Times[-1, b, e], Times[-1, e, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[b, Times[-1, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]], Times[2, c, x]]], -1]]]], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], Not[IntegerQ[p]], ZeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Rt[Times[-1, a, c], 2], Times[-1, c, x]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[Plus[m, 1], Plus[Times[c, d], Times[e, Rt[Times[-1, a, c], 2]]], Power[Times[Plus[Times[c, d], Times[e, Rt[Times[-1, a, c], 2]]], Plus[Rt[Times[-1, a, c], 2], Times[c, x]], Power[Times[Plus[Times[c, d], Times[-1, e, Rt[Times[-1, a, c], 2]]], Plus[Times[-1, Rt[Times[-1, a, c], 2]], Times[c, x]]], -1]], p]], -1], Hypergeometric2F1[Plus[m, 1], Times[-1, p], Plus[m, 2], Times[2, c, Rt[Times[-1, a, c], 2], Plus[d, Times[e, x]], Power[Times[Plus[Times[c, d], Times[-1, e, Rt[Times[-1, a, c], 2]]], Plus[Rt[Times[-1, a, c], 2], Times[-1, c, x]]], -1]]]], x], And[FreeQ[List[a, c, d, e, m, p], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], m], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Dist[Times[m, Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[m, Times[2, p], 3]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], m], Times[2, c, x], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[4, a, c, Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[m, Times[2, c, d], Power[Times[4, a, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, c, d, e, m, p], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], ZeroQ[Plus[m, Times[2, p], 3]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[Plus[Times[2, c, d], Times[-1, b, e]], Power[Times[2, Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[c, d, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, m, p], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], ZeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[p, Power[Times[e, Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[p], Greater[p, 0], Or[IntegerQ[p], And[RationalQ[m], Less[m, -1]]], NonzeroQ[Plus[m, 1]], Not[NegativeIntegerQ[Plus[m, Times[2, p], 1]]], IntQuadraticQ[a, b, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[2, c, p, Power[Times[e, Plus[m, 1]], -1]], Int[Times[x, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, c, d, e, m], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[p], Greater[p, 0], Or[IntegerQ[p], And[RationalQ[m], Less[m, -1]]], NonzeroQ[Plus[m, 1]], Not[NegativeIntegerQ[Plus[m, Times[2, p], 1]]], IntQuadraticQ[a, 0, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, Times[2, p], 1]], -1]], x], Times[-1, Dist[Times[p, Power[Times[e, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Simp[Plus[Times[b, d], Times[-1, 2, a, e], Times[Plus[Times[2, c, d], Times[-1, b, e]], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[m, Times[2, p], 1]], Or[Not[RationalQ[m]], Less[m, 1]], Not[NegativeIntegerQ[Plus[m, Times[2, p]]]], IntQuadraticQ[a, b, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, Times[2, p], 1]], -1]], x], Dist[Times[2, p, Power[Times[e, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Simp[Plus[Times[a, e], Times[-1, c, d, x]], x], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, c, d, e, m], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[m, Times[2, p], 1]], Or[Not[RationalQ[m]], Less[m, 1]], Not[NegativeIntegerQ[Plus[m, Times[2, p]]]], IntQuadraticQ[a, 0, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], m], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Plus[Times[b, e, m], Times[2, c, d, Plus[Times[2, p], 3]], Times[2, c, e, Plus[m, Times[2, p], 3], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m, p], Less[p, -1], Greater[m, 0], Or[Less[m, 1], And[NegativeIntegerQ[Plus[m, Times[2, p], 3]], Unequal[m, 2]]], IntQuadraticQ[a, b, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[x, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[2, a, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Plus[Times[d, Plus[Times[2, p], 3]], Times[e, Plus[m, Times[2, p], 3], x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 0], Or[Less[m, 1], And[NegativeIntegerQ[Plus[m, Times[2, p], 3]], Unequal[m, 2]]], IntQuadraticQ[a, 0, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Plus[Times[d, b], Times[-1, 2, a, e], Times[Plus[Times[2, c, d], Times[-1, b, e]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Dist[Times[1, Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Simp[Plus[Times[e, Plus[Times[2, a, e, Plus[m, -1]], Times[b, d, Plus[Times[2, p], Times[-1, m], 4]]]], Times[-1, 2, c, Power[d, 2], Plus[Times[2, p], 3]], Times[e, Plus[Times[b, e], Times[-1, 2, d, c]], Plus[m, Times[2, p], 2], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[m, p], Less[p, -1], Greater[m, 1], IntQuadraticQ[a, b, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Plus[Times[a, e], Times[-1, c, d, x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, c, Plus[p, 1]], -1]], x], Dist[Times[1, Power[Times[Plus[p, 1], Times[-2, a, c]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Simp[Plus[Times[a, Power[e, 2], Plus[m, -1]], Times[-1, c, Power[d, 2], Plus[Times[2, p], 3]], Times[-1, d, c, e, Plus[m, Times[2, p], 2], x]], x], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 1], IntQuadraticQ[a, 0, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[b, c, d], Times[-1, Power[b, 2], e], Times[2, a, c, e], Times[c, Plus[Times[2, c, d], Times[-1, b, e]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Simp[Plus[Times[b, c, d, e, Plus[Times[2, p], Times[-1, m], 2]], Times[Power[b, 2], Power[e, 2], Plus[m, p, 2]], Times[-1, 2, Power[c, 2], Power[d, 2], Plus[Times[2, p], 3]], Times[-1, 2, a, c, Power[e, 2], Plus[m, Times[2, p], 3]], Times[-1, c, e, Plus[Times[2, c, d], Times[-1, b, e]], Plus[m, Times[2, p], 4], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[p], Less[p, -1], IntQuadraticQ[a, b, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[a, e], Times[c, d, x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, Plus[p, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x]], Dist[Times[1, Power[Times[2, a, Plus[p, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Simp[Plus[Times[c, Power[d, 2], Plus[Times[2, p], 3]], Times[a, Power[e, 2], Plus[m, Times[2, p], 3]], Times[c, e, d, Plus[m, Times[2, p], 4], x]], x], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, c, d, e, m], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[p], Less[p, -1], IntQuadraticQ[a, 0, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], x], Dist[Times[1, Power[Times[c, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Simp[Plus[Times[c, Power[d, 2], Plus[m, Times[2, p], 1]], Times[-1, e, Plus[Times[a, e, Plus[m, -1]], Times[b, d, Plus[p, 1]]]], Times[e, Plus[Times[2, c, d], Times[-1, b, e]], Plus[m, p], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], If[RationalQ[m], Greater[m, 1], SumSimplerQ[m, -2]], NonzeroQ[Plus[m, Times[2, p], 1]], IntQuadraticQ[a, b, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 1]], -1]], x], Dist[Times[1, Power[Times[c, Plus[m, Times[2, p], 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Simp[Plus[Times[c, Power[d, 2], Plus[m, Times[2, p], 1]], Times[-1, a, Power[e, 2], Plus[m, -1]], Times[2, c, d, e, Plus[m, p], x]], x], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, m, p], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], If[RationalQ[m], Greater[m, 1], SumSimplerQ[m, -2]], NonzeroQ[Plus[m, Times[2, p], 1]], IntQuadraticQ[a, 0, c, d, e, m, p, x]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Simp[Plus[Times[c, d, Plus[m, 1]], Times[-1, b, e, Plus[m, p, 2]], Times[-1, c, e, Plus[m, Times[2, p], 3], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], Or[And[RationalQ[m], Less[m, -1], IntQuadraticQ[a, b, c, d, e, m, p, x]], And[SumSimplerQ[m, 1], IntegerQ[p], NonzeroQ[Plus[m, 1]]], And[NegativeIntegerQ[Simplify[Plus[m, Times[2, p], 3]]], NonzeroQ[Plus[m, 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[c, Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Simp[Plus[Times[d, Plus[m, 1]], Times[-1, e, Plus[m, Times[2, p], 3], x]], x], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, m, p], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Or[And[RationalQ[m], Less[m, -1], IntQuadraticQ[a, 0, c, d, e, m, p, x]], And[SumSimplerQ[m, 1], IntegerQ[p], NonzeroQ[Plus[m, 1]]], And[NegativeIntegerQ[Simplify[Plus[m, Times[2, p], 3]]], NonzeroQ[Plus[m, 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[3, c, Power[e, 2], Plus[Times[2, c, d], Times[-1, b, e]]], 3]]], Plus[Times[-1, Simp[Times[Sqrt[3], c, e, ArcTan[Plus[Times[1, Power[Sqrt[3], -1]], Times[2, Plus[Times[c, d], Times[-1, b, e], Times[-1, c, e, x]], Power[Times[Sqrt[3], q, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Times[1, Power[3, -1]]]], -1]]]], Power[Power[q, 2], -1]], x]], Plus[Times[-1, Simp[Times[3, c, e, Log[Plus[d, Times[e, x]]], Power[Times[2, Power[q, 2]], -1]], x]], Simp[Times[3, c, e, Log[Plus[Times[c, d], Times[-1, b, e], Times[-1, c, e, x], Times[-1, q, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Times[1, Power[3, -1]]]]]], Power[Times[2, Power[q, 2]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, b, c, d, e], Times[Power[b, 2], Power[e, 2]], Times[-1, 3, a, c, Power[e, 2]]]], PosQ[Times[c, Power[e, 2], Plus[Times[2, c, d], Times[-1, b, e]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[6, Power[c, 2], Power[e, 2], Power[Power[d, 2], -1]], 3]]], Plus[Times[-1, Simp[Times[Sqrt[3], c, e, ArcTan[Plus[Times[1, Power[Sqrt[3], -1]], Times[2, c, Plus[d, Times[-1, e, x]], Power[Times[Sqrt[3], d, q, Power[Plus[a, Times[c, Power[x, 2]]], Times[1, Power[3, -1]]]], -1]]]], Power[Times[Power[d, 2], Power[q, 2]], -1]], x]], Plus[Times[-1, Simp[Times[3, c, e, Log[Plus[d, Times[e, x]]], Power[Times[2, Power[d, 2], Power[q, 2]], -1]], x]], Simp[Times[3, c, e, Log[Plus[Times[c, d], Times[-1, c, e, x], Times[-1, d, q, Power[Plus[a, Times[c, Power[x, 2]]], Times[1, Power[3, -1]]]]]], Power[Times[2, Power[d, 2], Power[q, 2]], -1]], x]]]], And[FreeQ[List[a, c, d, e], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, 3, a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-3, c, Power[e, 2], Plus[Times[2, c, d], Times[-1, b, e]]], 3]]], Plus[Times[-1, Simp[Times[Sqrt[3], c, e, ArcTan[Plus[Times[1, Power[Sqrt[3], -1]], Times[-1, 2, Plus[Times[c, d], Times[-1, b, e], Times[-1, c, e, x]], Power[Times[Sqrt[3], q, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Times[1, Power[3, -1]]]], -1]]]], Power[Power[q, 2], -1]], x]], Plus[Times[-1, Simp[Times[3, c, e, Log[Plus[d, Times[e, x]]], Power[Times[2, Power[q, 2]], -1]], x]], Simp[Times[3, c, e, Log[Plus[Times[c, d], Times[-1, b, e], Times[-1, c, e, x], Times[q, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Times[1, Power[3, -1]]]]]], Power[Times[2, Power[q, 2]], -1]], x]]]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, b, c, d, e], Times[Power[b, 2], Power[e, 2]], Times[-1, 3, a, c, Power[e, 2]]]], NegQ[Times[c, Power[e, 2], Plus[Times[2, c, d], Times[-1, b, e]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[Power[Plus[b, q, Times[2, c, x]], Times[1, Power[3, -1]]], Power[Plus[b, Times[-1, q], Times[2, c, x]], Times[1, Power[3, -1]]], Power[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Times[1, Power[3, -1]]], -1]], Int[Times[1, Power[Times[Plus[d, Times[e, x]], Power[Plus[b, q, Times[2, c, x]], Times[1, Power[3, -1]]], Power[Plus[b, Times[-1, q], Times[2, c, x]], Times[1, Power[3, -1]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, b, c, d, e], Times[-1, 2, Power[b, 2], Power[e, 2]], Times[9, a, c, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[1, Power[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 2]]], Times[1, Power[4, -1]]]], -1]], x], x], Times[-1, Dist[e, Int[Times[x, Power[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 2]]], Times[1, Power[4, -1]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 4]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[1, Power[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 2]]], Times[3, Power[4, -1]]]], -1]], x], x], Times[-1, Dist[e, Int[Times[x, Power[Times[Plus[Power[d, 2], Times[-1, Power[e, 2], Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 2]]], Times[3, Power[4, -1]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Power[Times[-4, c, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]], p], -1]], Subst[Int[Times[Power[Simp[Plus[1, Times[-1, Power[x, 2], Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]], x], p], Power[Simp[Plus[Times[2, c, d], Times[-1, b, e], Times[e, x]], x], -1]], x], x, Plus[b, Times[2, c, x]]], x], And[FreeQ[List[a, b, c, d, e, p], x], PositiveQ[Plus[Times[4, a], Times[-1, Power[b, 2], Power[c, -1]]]], IntegerQ[Times[4, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Power[Times[-1, c, Plus[a, Times[b, x], Times[c, Power[x, 2]]], Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]], p], -1]], Int[Times[Power[Plus[Times[-1, a, c, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]], Times[-1, b, c, x, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]], Times[-1, Power[c, 2], Power[x, 2], Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]], p], Power[Plus[d, Times[e, x]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, p], x], Not[PositiveQ[Plus[Times[4, a], Times[-1, Power[b, 2], Power[c, -1]]]]], IntegerQ[Times[4, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[Rt[a, 2], Times[Rt[Times[-1, c], 2], x]], p], Power[Plus[Rt[a, 2], Times[-1, Rt[Times[-1, c], 2], x]], p]], x], And[FreeQ[List[a, c, d, e, m, p], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], PositiveQ[a], NegativeQ[c]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Times[-1, Dist[Times[Power[Times[1, Power[Plus[d, Times[e, x]], -1]], Times[2, p]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Power[Times[e, Plus[b, Times[-1, q], Times[2, c, x]], Power[Times[2, c, Plus[d, Times[e, x]]], -1]], p], Power[Times[e, Plus[b, q, Times[2, c, x]], Power[Times[2, c, Plus[d, Times[e, x]]], -1]], p]], -1]], Subst[Int[Times[Power[x, Plus[Times[-1, m], Times[-1, 2, Plus[p, 1]]]], Power[Simp[Plus[1, Times[-1, Plus[d, Times[-1, e, Plus[b, Times[-1, q]], Power[Times[2, c], -1]]], x]], x], p], Power[Simp[Plus[1, Times[-1, Plus[d, Times[-1, e, Plus[b, q], Power[Times[2, c], -1]]], x]], x], p]], x], x, Times[1, Power[Plus[d, Times[e, x]], -1]]], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], Not[IntegerQ[p]], NegativeIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Times[-1, Dist[Times[Power[Times[1, Power[Plus[d, Times[e, x]], -1]], Times[2, p]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[e, Power[Times[-1, e, Plus[q, Times[-1, c, x]], Power[Times[c, Plus[d, Times[e, x]]], -1]], p], Power[Times[e, Plus[q, Times[c, x]], Power[Times[c, Plus[d, Times[e, x]]], -1]], p]], -1]], Subst[Int[Times[Power[x, Plus[Times[-1, m], Times[-1, 2, Plus[p, 1]]]], Power[Simp[Plus[1, Times[-1, Plus[d, Times[e, q, Power[c, -1]]], x]], x], p], Power[Simp[Plus[1, Times[-1, Plus[d, Times[-1, e, q, Power[c, -1]]], x]], x], p]], x], x, Times[1, Power[Plus[d, Times[e, x]], -1]]], x]]], And[FreeQ[List[a, c, d, e, p], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], NegativeIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Power[Plus[1, Times[-1, Plus[d, Times[e, x]], Power[Plus[d, Times[-1, e, Plus[b, Times[-1, q]], Power[Times[2, c], -1]]], -1]]], p], Power[Plus[1, Times[-1, Plus[d, Times[e, x]], Power[Plus[d, Times[-1, e, Plus[b, q], Power[Times[2, c], -1]]], -1]]], p]], -1]], Subst[Int[Times[Power[x, m], Power[Simp[Plus[1, Times[-1, x, Power[Plus[d, Times[-1, e, Plus[b, Times[-1, q]], Power[Times[2, c], -1]]], -1]]], x], p], Power[Simp[Plus[1, Times[-1, x, Power[Plus[d, Times[-1, e, Plus[b, q], Power[Times[2, c], -1]]], -1]]], x], p]], x], x, Plus[d, Times[e, x]]], x]], And[FreeQ[List[a, b, c, d, e, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Dist[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[e, Power[Plus[1, Times[-1, Plus[d, Times[e, x]], Power[Plus[d, Times[e, q, Power[c, -1]]], -1]]], p], Power[Plus[1, Times[-1, Plus[d, Times[e, x]], Power[Plus[d, Times[-1, e, q, Power[c, -1]]], -1]]], p]], -1]], Subst[Int[Times[Power[x, m], Power[Simp[Plus[1, Times[-1, x, Power[Plus[d, Times[e, q, Power[c, -1]]], -1]]], x], p], Power[Simp[Plus[1, Times[-1, x, Power[Plus[d, Times[-1, e, q, Power[c, -1]]], -1]]], x], p]], x], x, Plus[d, Times[e, x]]], x]], And[FreeQ[List[a, c, d, e, m, p], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x, u], x], And[FreeQ[List[a, b, c, d, e, m, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x, u], x], And[FreeQ[List[a, c, d, e, m, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[n, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[d, Int[Times[Power[x, n], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], Dist[e, Int[Times[Power[x, Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, p], x], IntegerQ[n], Not[IntegerQ[Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Plus[f, Times[g, x]], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]], Int[Power[Plus[d, Times[e, x]], m], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, f], Times[-1, b, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[f, g, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[b, Plus[p, 1], Plus[Times[e, f], Times[-1, d, g]]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], ZeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[e, g, m, Power[Times[2, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], RationalQ[m, p], Less[p, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[f, g, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[b, Plus[p, 1], Plus[Times[e, f], Times[-1, d, g]]], -1]], x]], Dist[Times[e, f, g, Plus[m, Times[2, p], 3], Power[Times[b, Plus[p, 1], Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], RationalQ[p], Less[p, -1], Not[And[RationalQ[m], Greater[m, 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[f, Times[g, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, 1]], -1]], x], Times[-1, Dist[Times[g, Plus[Times[2, p], 1], Power[Times[e, Plus[m, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Times[2, p], 1]], Or[Not[RationalQ[p]], And[Greater[p, 0], Or[Not[IntegerQ[m]], GreaterEqual[m, Plus[Times[-2, p], -2]], Less[m, Times[-4, Plus[p, 1]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[2, f, g, Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[b, Plus[m, 1], Plus[Times[e, f], Times[-1, d, g]]], -1]], x], Times[-1, Dist[Times[g, Plus[m, Times[2, p], 3], Power[Times[Plus[m, 1], Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[f, Times[g, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 2]], -1]], x], Times[-1, Dist[Times[b, m, Plus[Times[e, f], Times[-1, d, g]], Power[Times[2, c, f, Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Plus[f, Times[g, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], PositiveIntegerQ[m], NonzeroQ[Plus[m, Times[2, p], 2]], Or[Not[RationalQ[p]], Less[m, Plus[Times[2, p], 2]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[f, Times[g, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, Times[2, p], 2]], -1]], x], Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Plus[Times[2, p], 1], Power[Times[e, Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], NonzeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[2, c, f], Times[-1, b, g]], Power[Plus[Times[2, c, d], Times[-1, b, e]], -1]], Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], x], x], Times[-1, Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[2, c, d], Times[-1, b, e]], -1]], Int[Times[Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], RationalQ[p], Less[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], Dist[Times[g, Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], Or[And[ZeroQ[Plus[m, Times[2, p], 2]], NonzeroQ[Plus[m, 1]]], And[ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[2, c, f], Times[-1, b, g]], Power[Plus[Times[2, c, d], Times[-1, b, e]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], Times[-1, Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[2, c, d], Times[-1, b, e]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], ZeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[e, Plus[m, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x]], Dist[Times[Plus[Times[2, c, e, f, Plus[m, Times[2, p], 2]], Times[-1, g, Plus[Times[2, c, d, Plus[Times[2, p], 1]], Times[b, e, Plus[m, 1]]]]], Power[Times[e, Plus[m, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, Times[2, p], 2]], NonzeroQ[Plus[m, Times[2, p], 3]], RationalQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[2, c, e, Plus[m, Times[2, p], 2]], -1]], x], Dist[Times[Plus[Times[2, c, e, f, Plus[m, Times[2, p], 2]], Times[-1, g, Plus[Times[b, e, Plus[m, 1]], Times[2, c, Plus[d, Times[2, d, p]]]]]], Power[Times[2, c, e, Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[2, c, f], Times[-1, b, g]]], Not[IntegerQ[p]], NonzeroQ[Plus[Times[2, c, d], Times[-1, b, e]]], NonzeroQ[Plus[m, Times[2, p], 2]], NonzeroQ[Plus[m, Times[2, p], 3]], Not[And[RationalQ[m], Less[m, -1]]], Not[And[ZeroQ[Plus[m, -1]], SimplerQ[Plus[f, Times[g, x]], Plus[d, Times[e, x]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[c, IntPart[p]], Power[Plus[Times[b, Power[2, -1]], Times[c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[Times[b, Power[2, -1]], Times[c, x]], Times[2, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[f, Times[g, x]], n], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[f, Times[g, x]], n], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], And[FreeQ[List[a, c, d, e, f, g, m, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Or[IntegerQ[p], And[PositiveQ[a], PositiveQ[d], ZeroQ[Plus[m, p]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, m], Power[e, m]], Int[Times[Power[Plus[Times[a, e], Times[c, d, x]], Times[-1, m]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[m, p]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NegativeIntegerQ[m], Not[IntegerQ[Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, m], Power[e, m]], Int[Times[Power[Plus[Times[a, e], Times[c, d, x]], Times[-1, m]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], Plus[m, p]]], x], x], And[FreeQ[List[a, c, d, e, f, g, n, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], NegativeIntegerQ[m], Not[IntegerQ[Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 2]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], ZeroQ[Plus[Times[m, Plus[Times[g, Plus[Times[c, d], Times[-1, b, e]]], Times[c, e, f]]], Times[e, Plus[p, 1], Plus[Times[2, c, f], Times[-1, b, g]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 2]], -1]], x], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], ZeroQ[Plus[Times[m, Plus[Times[d, g], Times[e, f]]], Times[2, e, f, Plus[p, 1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[g, Plus[Times[c, d], Times[-1, b, e]]], Times[c, e, f]], Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x], Times[-1, Dist[Times[e, Plus[Times[m, Plus[Times[g, Plus[Times[c, d], Times[-1, b, e]]], Times[c, e, f]]], Times[e, Plus[p, 1], Plus[Times[2, c, f], Times[-1, b, g]]]], Power[Times[c, Plus[p, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[d, g], Times[e, f]], Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, d, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[e, Plus[Times[m, Plus[Times[d, g], Times[e, f]]], Times[2, e, f, Plus[p, 1]]], Power[Times[2, c, d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[g, Plus[Times[c, d], Times[-1, b, e]]], Times[c, e, f]], Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], x], Times[-1, Dist[Times[e, Plus[Times[m, Plus[Times[g, Plus[Times[c, d], Times[-1, b, e]]], Times[c, e, f]]], Times[e, Plus[p, 1], Plus[Times[2, c, f], Times[-1, b, g]]]], Power[Times[c, Plus[p, 1], Plus[Times[2, c, d], Times[-1, b, e]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Simplify[Plus[m, -1]]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Simplify[Plus[p, 1]]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], SumSimplerQ[p, 1], SumSimplerQ[m, -1], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[d, g], Times[e, f]], Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, d, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[e, Plus[Times[m, Plus[Times[d, g], Times[e, f]]], Times[2, e, f, Plus[p, 1]]], Power[Times[2, c, d, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Simplify[Plus[m, -1]]], Power[Plus[a, Times[c, Power[x, 2]]], Simplify[Plus[p, 1]]]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], SumSimplerQ[p, 1], SumSimplerQ[m, -1], NonzeroQ[Plus[p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[d, g], Times[-1, e, f]], Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[Times[2, c, d], Times[-1, b, e]], Plus[m, p, 1]], -1]], x], Dist[Times[Plus[Times[m, Plus[Times[g, Plus[Times[c, d], Times[-1, b, e]]], Times[c, e, f]]], Times[e, Plus[p, 1], Plus[Times[2, c, f], Times[-1, b, g]]]], Power[Times[e, Plus[Times[2, c, d], Times[-1, b, e]], Plus[m, p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Or[And[RationalQ[m], Less[m, -1], Not[PositiveIntegerQ[Plus[m, p, 1]]]], And[RationalQ[m, p], Less[m, 0], Less[p, -1]], ZeroQ[Plus[m, Times[2, p], 2]]], NonzeroQ[Plus[m, p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[d, g], Times[-1, e, f]], Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, d, Plus[m, p, 1]], -1]], x], Dist[Times[Plus[Times[m, Plus[Times[g, c, d], Times[c, e, f]]], Times[2, e, c, f, Plus[p, 1]]], Power[Times[e, Times[2, c, d], Plus[m, p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Or[And[RationalQ[m], Less[m, -1], Not[PositiveIntegerQ[Plus[m, p, 1]]]], And[RationalQ[m, p], Less[m, 0], Less[p, -1]], ZeroQ[Plus[m, Times[2, p], 2]]], NonzeroQ[Plus[m, p, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 2]], -1]], x], Dist[Times[Plus[Times[m, Plus[Times[g, Plus[Times[c, d], Times[-1, b, e]]], Times[c, e, f]]], Times[e, Plus[p, 1], Plus[Times[2, c, f], Times[-1, b, g]]]], Power[Times[c, e, Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NonzeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 2]], -1]], x], Dist[Times[Plus[Times[m, Plus[Times[d, g], Times[e, f]]], Times[2, e, f, Plus[p, 1]]], Power[Times[e, Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], NonzeroQ[Plus[m, Times[2, p], 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[x, 2], Plus[Times[a, g], Times[-1, c, f, x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, a, c, Plus[p, 1]], -1]], Int[Times[x, Simp[Plus[Times[2, a, g], Times[-1, c, f, Plus[Times[2, p], 5], x]], x], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, c, f, g], x], ZeroQ[Plus[Times[a, Power[g, 2]], Times[Power[f, 2], c]]], RationalQ[p], Less[p, -2]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[c, -1]], Int[Times[Plus[f, Times[g, x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x], Times[-1, Dist[Times[Power[f, 2], Power[c, -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[f, Times[-1, g, x]], -1]], x], x]]], And[FreeQ[List[a, c, f, g, p], x], ZeroQ[Plus[Times[a, Power[g, 2]], Times[Power[f, 2], c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[m, p]], Power[Power[Plus[Times[a, Power[d, -1]], Times[c, x, Power[e, -1]]], m], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], IntegersQ[m, n], RationalQ[p], Or[Less[0, Times[-1, m], Plus[p, 1]], Less[p, Times[-1, m], 0]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[d, Times[2, m]], Power[Power[a, m], -1]], Int[Times[Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], Plus[m, p]], Power[Power[Plus[d, Times[-1, e, x]], m], -1]], x], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], IntegersQ[m, n], RationalQ[p], Or[Less[0, Times[-1, m], Plus[p, 1]], Less[p, Times[-1, m], 0]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Plus[Times[a, Plus[Times[2, c, d], Times[-1, b, e]]], Times[c, Plus[Times[b, d], Times[-1, 2, a, e]], x]], Power[Times[d, e, p, Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[d, e, p, Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[b, Plus[Times[a, e, g, n], Times[-1, c, d, f, Plus[Times[2, p], 1]]]], Times[-1, 2, a, c, Plus[Times[d, g, n], Times[-1, e, f, Plus[Times[2, p], 1]]]], Times[-1, c, g, Plus[Times[b, d], Times[-1, 2, a, e]], Plus[n, Times[2, p], 1], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], PositiveIntegerQ[n], NegativeIntegerQ[Plus[n, Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], p], Plus[d, Times[-1, e, x]], Power[Times[2, d, e, p], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, d, e, p], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Times[d, g, n], Times[-1, e, f, Plus[Times[2, p], 1]], Times[-1, e, g, Plus[n, Times[2, p], 1], x]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], PositiveIntegerQ[n], NegativeIntegerQ[Plus[n, Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Plus[Times[a, c, d, Plus[Times[2, c, f], Times[-1, b, g]]], Times[-1, a, e, Plus[Times[b, c, f], Times[-1, Power[b, 2], g], Times[2, a, c, g]]], Times[c, Plus[Times[c, d, Plus[Times[b, f], Times[-1, 2, a, g]]], Times[-1, a, e, Plus[Times[2, c, f], Times[-1, b, g]]]], x]], Power[Times[d, e, p, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[f, 2]], Times[-1, b, f, g], Times[a, Power[g, 2]]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[d, e, p, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[f, 2]], Times[-1, b, f, g], Times[a, Power[g, 2]]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[Power[b, 2], g, Plus[Times[c, d, f, p], Times[-1, a, e, g, Plus[n, p, 1]]]], Times[b, c, Plus[Times[a, g, Plus[Times[d, g, Plus[n, 1]], Times[e, f, Plus[n, Times[-1, 2, p]]]]], Times[-1, c, d, Power[f, 2], Plus[Times[2, p], 1]]]], Times[2, a, c, Plus[Times[a, e, Power[g, 2], Plus[n, Times[2, p], 1]], Times[c, f, Plus[Times[e, f], Times[-1, d, g, n], Times[2, e, f, p]]]]], Times[c, g, Plus[Times[2, a, c, Plus[Times[e, f], Times[d, g]]], Times[-1, b, Plus[Times[c, d, f], Times[a, e, g]]]], Plus[n, Times[2, p], 2], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], NegativeIntegerQ[n], NegativeIntegerQ[Plus[n, Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Plus[Times[c, d, f], Times[-1, a, e, g], Times[-1, c, Plus[Times[e, f], Times[d, g]], x]], Power[Times[2, d, e, p, Plus[Times[c, Power[f, 2]], Times[a, Power[g, 2]]]], -1]], x], Dist[Times[1, Power[Times[2, d, e, p, Plus[Times[c, Power[f, 2]], Times[a, Power[g, 2]]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Plus[Times[a, e, Power[g, 2], Plus[n, Times[2, p], 1]], Times[-1, c, f, Plus[Times[d, g, n], Times[-1, e, Plus[f, Times[2, f, p]]]]]], Times[c, g, Plus[Times[e, f], Times[d, g]], Plus[n, Times[2, p], 2], x]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], NegativeIntegerQ[n], NegativeIntegerQ[Plus[n, Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[-1, n], -1]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], ZeroQ[Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]]], NonzeroQ[Plus[m, Times[-1, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[-1, n], -1]], -1]], x]], And[FreeQ[List[a, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], ZeroQ[Plus[Times[e, f], Times[d, g]]], NonzeroQ[Plus[m, Times[-1, n], -1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[n, 1], Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], ZeroQ[Plus[m, Times[-1, n], -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[n, 1], Plus[Times[e, f], Times[d, g]]], -1]], x]], And[FreeQ[List[a, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], ZeroQ[Plus[m, Times[-1, n], -2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[g, Plus[n, 1]], -1]], x], Dist[Times[c, m, Power[Times[e, g, Plus[n, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n, p], Greater[p, 0], Less[n, -1], Not[And[IntegerQ[Plus[n, p]], LessEqual[Plus[n, p, 2], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[g, Plus[n, 1]], -1]], x], Dist[Times[c, m, Power[Times[e, g, Plus[n, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n, p], Greater[p, 0], Less[n, -1], Not[And[IntegerQ[Plus[n, p]], LessEqual[Plus[n, p, 2], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[g, Plus[m, Times[-1, n], -1]], -1]], x]], Times[-1, Dist[Times[m, Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]], Power[Times[Power[e, 2], g, Plus[m, Times[-1, n], -1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n, p], Greater[p, 0], NonzeroQ[Plus[m, Times[-1, n], -1]], Not[PositiveIntegerQ[n]], Not[And[IntegerQ[Plus[n, p]], Less[Plus[n, p, 2], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[g, Plus[m, Times[-1, n], -1]], -1]], x]], Times[-1, Dist[Times[c, m, Plus[Times[e, f], Times[d, g]], Power[Times[Power[e, 2], g, Plus[m, Times[-1, n], -1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n, p], Greater[p, 0], NonzeroQ[Plus[m, Times[-1, n], -1]], Not[PositiveIntegerQ[n]], Not[And[IntegerQ[Plus[n, p]], Less[Plus[n, p, 2], 0]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[e, g, n, Power[Times[c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n, p], Less[p, -1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[e, g, n, Power[Times[c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n, p], Less[p, -1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]]], -1]], x], Dist[Times[Power[e, 2], g, Plus[m, Times[-1, n], -2], Power[Times[Plus[p, 1], Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n, p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1], Plus[Times[e, f], Times[d, g]]], -1]], x], Dist[Times[Power[e, 2], g, Plus[m, Times[-1, n], -2], Power[Times[c, Plus[p, 1], Plus[Times[e, f], Times[d, g]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]], And[FreeQ[List[a, c, d, e, f, g, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n, p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[-1, n], -1]], -1]], x]], Times[-1, Dist[Times[n, Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]], Power[Times[c, e, Plus[m, Times[-1, n], -1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[m, Times[-1, n], -1]], Or[IntegerQ[Times[2, p]], IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[e, Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[-1, n], -1]], -1]], x]], Times[-1, Dist[Times[n, Plus[Times[e, f], Times[d, g]], Power[Times[e, Plus[m, Times[-1, n], -1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n], Greater[n, 0], NonzeroQ[Plus[m, Times[-1, n], -1]], Or[IntegerQ[Times[2, p]], IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[n, 1], Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]]], -1]], x]], Times[-1, Dist[Times[c, e, Plus[m, Times[-1, n], -2], Power[Times[Plus[n, 1], Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n], Less[n, -1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[n, 1], Plus[Times[c, e, f], Times[c, d, g]]], -1]], x]], Times[-1, Dist[Times[e, Plus[m, Times[-1, n], -2], Power[Times[Plus[n, 1], Plus[Times[e, f], Times[d, g]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p]], RationalQ[n], Less[n, -1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[e, 2]], Subst[Int[Times[1, Power[Plus[Times[c, Plus[Times[e, f], Times[d, g]]], Times[-1, b, e, g], Times[Power[e, 2], g, Power[x, 2]]], -1]], x], x, Times[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, x]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[1, 2]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[2, Power[e, 2]], Subst[Int[Times[1, Power[Plus[Times[c, Plus[Times[e, f], Times[d, g]]], Times[Power[e, 2], g, Power[x, 2]]], -1]], x], x, Times[Sqrt[Plus[a, Times[c, Power[x, 2]]]], Power[Sqrt[Plus[d, Times[e, x]]], -1]]], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, g, Plus[n, p, 2]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, -1]], ZeroQ[Plus[Times[b, e, g, Plus[n, 1]], Times[c, e, f, Plus[p, 1]], Times[-1, c, d, g, Plus[Times[2, n], p, 3]]]], NonzeroQ[Plus[n, p, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, g, Plus[n, p, 2]], -1]], x], And[FreeQ[List[a, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, -1]], ZeroQ[Plus[Times[e, f, Plus[p, 1]], Times[-1, d, g, Plus[Times[2, n], p, 3]]]], NonzeroQ[Plus[n, p, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[g, Plus[n, 1], Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]]], -1]], x], Times[-1, Dist[Times[e, Plus[Times[b, e, g, Plus[n, 1]], Times[c, e, f, Plus[p, 1]], Times[-1, c, d, g, Plus[Times[2, n], p, 3]]], Power[Times[g, Plus[n, 1], Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, -1]], RationalQ[n], Less[n, -1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, g, Plus[n, 1], Plus[Times[e, f], Times[d, g]]], -1]], x], Times[-1, Dist[Times[e, Plus[Times[e, f, Plus[p, 1]], Times[-1, d, g, Plus[Times[2, n], p, 3]]], Power[Times[g, Plus[n, 1], Plus[Times[e, f], Times[d, g]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, -1]], RationalQ[n], Less[n, -1], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, g, Plus[n, p, 2]], -1]], x], Times[-1, Dist[Times[Plus[Times[b, e, g, Plus[n, 1]], Times[c, e, f, Plus[p, 1]], Times[-1, c, d, g, Plus[Times[2, n], p, 3]]], Power[Times[c, g, Plus[n, p, 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, -1]], Not[And[RationalQ[n], Less[n, -1]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[e, 2], Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, g, Plus[n, p, 2]], -1]], x], Times[-1, Dist[Times[Plus[Times[e, f, Plus[p, 1]], Times[-1, d, g, Plus[Times[2, n], p, 3]]], Power[Times[g, Plus[n, p, 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, m, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], ZeroQ[Plus[m, p, -1]], Not[And[RationalQ[n], Less[n, -1]]], IntegerQ[Times[2, p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], Or[PositiveIntegerQ[m], IntegersQ[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 2]]]], -1]], Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, Times[1, Power[2, -1]]]]], x], x], And[FreeQ[List[a, c, d, e, f, g, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegerQ[Plus[p, Times[-1, 1, Power[2, -1]]]], IntegersQ[m, n], Not[And[Less[m, 0], Less[p, 0]]], Unequal[p, Times[1, Power[2, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, g, n, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], Or[PositiveIntegerQ[m], IntegersQ[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[d, 2], Power[Power[e, 2], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x]], -1]], x], x], Times[-1, Dist[Times[1, Power[Power[e, 2], -1]], Int[Times[Plus[d, Times[-1, e, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], 2], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Power[d, 2], Power[Power[e, 2], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x]], -1]], x], x], Times[-1, Dist[Times[1, Power[Power[e, 2], -1]], Int[Times[Plus[d, Times[-1, e, x]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, c, d, e, p], x], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], 2], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Plus[f, Times[g, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Power[e, 2], Plus[m, Times[2, p], 3]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[b, e, g, Plus[Times[d, g], Times[e, f, Plus[m, p, 1]]]], Times[-1, c, Plus[Times[Power[d, 2], Power[g, 2]], Times[d, e, f, g, m], Times[Power[e, 2], Power[f, 2], Plus[m, Times[2, p], 3]]]], Times[e, g, Plus[Times[b, e, g, Plus[m, p, 2]], Times[-1, c, Plus[Times[d, g, m], Times[e, f, Plus[m, Times[2, p], 4]]]]], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], NonzeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Plus[f, Times[g, x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Power[e, 2], Plus[m, Times[2, p], 3]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Times[-1, c, Plus[Times[Power[d, 2], Power[g, 2]], Times[d, e, f, g, m], Times[Power[e, 2], Power[f, 2], Plus[m, Times[2, p], 3]]]], Times[-1, c, e, g, Plus[Times[d, g, m], Times[e, f, Plus[m, Times[2, p], 4]]], x]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], NonzeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Times[e, x], m], Power[Plus[Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Power[x, Plus[m, p]], Power[Plus[b, Times[c, x]], p]], -1]], Int[Times[Power[x, Plus[m, p]], Power[Plus[f, Times[g, x]], n], Power[Plus[b, Times[c, x]], p]], x], x], And[FreeQ[List[b, c, e, f, g, m, n], x], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[f, Times[g, x]], n], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], And[FreeQ[List[a, c, d, e, f, g, m, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]], PositiveQ[a], PositiveQ[d]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, x]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, x], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[f, Times[g, x]], n], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Plus[d, Times[e, x]], FracPart[p]], Power[Plus[Times[a, Power[d, -1]], Times[Times[c, x], Power[e, -1]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, p]], Power[Plus[f, Times[g, x]], n], Power[Plus[Times[a, Power[d, -1]], Times[c, Power[e, -1], x]], p]], x], x], And[FreeQ[List[a, c, d, e, f, g, m, n], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], ZeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Plus[f, Times[g, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Plus[f, Times[g, x]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PositiveIntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[e, Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[1, Power[Plus[d, Times[e, x]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Simp[Plus[Times[c, d, f], Times[-1, b, e, f], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[e, Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[1, Power[Plus[d, Times[e, x]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Simp[Plus[Times[c, d, f], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], x], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, Plus[p, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], ZeroQ[Simplify[Plus[m, Times[2, p], 3]]], ZeroQ[Plus[Times[b, Plus[Times[e, f], Times[d, g]]], Times[-1, 2, Plus[Times[c, d, f], Times[a, e, g]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, Plus[p, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], ZeroQ[Simplify[Plus[m, Times[2, p], 3]]], ZeroQ[Plus[Times[c, d, f], Times[a, e, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Plus[Times[b, f], Times[-1, 2, a, g], Times[Plus[Times[2, c, f], Times[-1, b, g]], x]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Times[-1, Dist[Times[m, Plus[Times[b, Plus[Times[e, f], Times[d, g]]], Times[-1, 2, Plus[Times[c, d, f], Times[a, e, g]]]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], ZeroQ[Simplify[Plus[m, Times[2, p], 3]]], RationalQ[p], Less[p, -1], Not[And[Equal[m, 1], Or[ZeroQ[d], ZeroQ[Plus[Times[2, c, d], Times[-1, b, e]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Plus[Times[a, g], Times[-1, c, f, x]], Power[Times[2, a, c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[m, Plus[Times[c, d, f], Times[a, e, g]], Power[Times[2, a, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], ZeroQ[Simplify[Plus[m, Times[2, p], 3]]], RationalQ[p], Less[p, -1], Not[And[Equal[m, 1], ZeroQ[d]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, Plus[p, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x]], Times[-1, Dist[Times[Plus[Times[b, Plus[Times[e, f], Times[d, g]]], Times[-1, 2, Plus[Times[c, d, f], Times[a, e, g]]]], Power[Times[2, Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], ZeroQ[Simplify[Plus[m, Times[2, p], 3]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, Plus[p, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x]], Dist[Times[Plus[Times[c, d, f], Times[a, e, g]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], ZeroQ[Simplify[Plus[m, Times[2, p], 3]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Times[-1, Simp[Times[Plus[Times[b, e, g, Plus[p, 2]], Times[-1, c, Plus[Times[e, f], Times[d, g]], Plus[Times[2, p], 3]], Times[-1, 2, c, e, g, Plus[p, 1], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, Power[c, 2], Plus[p, 1], Plus[Times[2, p], 3]], -1]], x]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], ZeroQ[Plus[Times[Power[b, 2], e, g, Plus[p, 2]], Times[-1, 2, a, c, e, g], Times[c, Plus[Times[2, c, d, f], Times[-1, b, Plus[Times[e, f], Times[d, g]]]], Plus[Times[2, p], 3]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[Plus[Times[e, f], Times[d, g]], Plus[Times[2, p], 3]], Times[2, e, g, Plus[p, 1], x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, Plus[p, 1], Plus[Times[2, p], 3]], -1]], x], And[FreeQ[List[a, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], ZeroQ[Plus[Times[a, e, g], Times[-1, c, d, f, Plus[Times[2, p], 3]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[2, a, c, Plus[Times[e, f], Times[d, g]]], Times[-1, b, Plus[Times[c, d, f], Times[a, e, g]]], Times[-1, Plus[Times[Power[b, 2], e, g], Times[-1, b, c, Plus[Times[e, f], Times[d, g]]], Times[2, c, Plus[Times[c, d, f], Times[-1, a, e, g]]]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Times[-1, Dist[Times[Plus[Times[Power[b, 2], e, g, Plus[p, 2]], Times[-1, 2, a, c, e, g], Times[c, Plus[Times[2, c, d, f], Times[-1, b, Plus[Times[e, f], Times[d, g]]]], Plus[Times[2, p], 3]]], Power[Times[c, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[c, d, f, x], Times[-1, a, Plus[Times[d, g], Times[e, Plus[f, Times[g, x]]]]]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, c, Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[Plus[Times[a, e, g], Times[-1, c, d, f, Plus[Times[2, p], 3]]], Power[Times[2, a, c, Plus[p, 1]], -1]], Int[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[p], Less[p, -1]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[b, e, g, Plus[p, 2]], Times[-1, c, Plus[Times[e, f], Times[d, g]], Plus[Times[2, p], 3]], Times[-1, 2, c, e, g, Plus[p, 1], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, Power[c, 2], Plus[p, 1], Plus[Times[2, p], 3]], -1]], x]], Dist[Times[Plus[Times[Power[b, 2], e, g, Plus[p, 2]], Times[-1, 2, a, c, e, g], Times[c, Plus[Times[2, c, d, f], Times[-1, b, Plus[Times[e, f], Times[d, g]]]], Plus[Times[2, p], 3]]], Power[Times[2, Power[c, 2], Plus[Times[2, p], 3]], -1]], Int[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[And[RationalQ[p], LessEqual[p, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[Plus[Times[e, f], Times[d, g]], Plus[Times[2, p], 3]], Times[2, e, g, Plus[p, 1], x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, c, Plus[p, 1], Plus[Times[2, p], 3]], -1]], x], Times[-1, Dist[Times[Plus[Times[a, e, g], Times[-1, c, d, f, Plus[Times[2, p], 3]]], Power[Times[c, Plus[Times[2, p], 3]], -1]], Int[Power[Plus[a, Times[c, Power[x, 2]]], p], x], x]]], And[FreeQ[List[a, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[And[RationalQ[p], LessEqual[p, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Pattern[m, Blank[]]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[f, Int[Times[Power[Times[e, x], m], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], Dist[Times[g, Power[e, -1]], Int[Times[Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, e, f, g, p], x], Not[RationalQ[m]], Not[PositiveIntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d, Times[e, x]], FracPart[p]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Power[Plus[Times[a, d], Times[c, e, Power[x, 3]]], FracPart[p]], -1]], Int[Times[Plus[f, Times[g, x]], Power[Plus[Times[a, d], Times[c, e, Power[x, 3]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], ZeroQ[Plus[m, Times[-1, p]]], ZeroQ[Plus[Times[b, d], Times[a, e]]], ZeroQ[Plus[Times[c, d], Times[b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Power[e, 2], Plus[m, 1], Plus[m, 2], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1], Plus[Times[Plus[Times[d, g], Times[-1, e, f, Plus[m, 2]]], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Times[-1, d, p, Plus[Times[2, c, d], Times[-1, b, e]], Plus[Times[e, f], Times[-1, d, g]]], Times[-1, e, Plus[Times[g, Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Times[p, Plus[Times[2, c, d], Times[-1, b, e]], Plus[Times[e, f], Times[-1, d, g]]]], x]]], x]], Times[-1, Dist[Times[p, Power[Times[Power[e, 2], Plus[m, 1], Plus[m, 2], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Simp[Plus[Times[2, a, c, e, Plus[Times[e, f], Times[-1, d, g]], Plus[m, 2]], Times[Power[b, 2], e, Plus[Times[d, g, Plus[p, 1]], Times[-1, e, f, Plus[m, p, 2]]]], Times[b, Plus[Times[a, Power[e, 2], g, Plus[m, 1]], Times[-1, c, d, Plus[Times[d, g, Plus[Times[2, p], 1]], Times[-1, e, f, Plus[m, Times[2, p], 2]]]]]], Times[-1, c, Plus[Times[2, c, d, Plus[Times[d, g, Plus[Times[2, p], 1]], Times[-1, e, f, Plus[m, Times[2, p], 2]]]], Times[-1, e, Plus[Times[2, a, e, g, Plus[m, 1]], Times[-1, b, Plus[Times[d, g, Plus[m, Times[-1, 2, p]]], Times[e, f, Plus[m, Times[2, p], 2]]]]]]], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m, p], Greater[p, 0], Less[m, -2], Less[Plus[m, Times[2, p]], 0], Not[NegativeIntegerQ[Plus[m, Times[2, p], 3]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[Power[e, 2], Plus[m, 1], Plus[m, 2], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1], Plus[Times[Plus[Times[d, g], Times[-1, e, f, Plus[m, 2]]], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Times[-1, 2, c, Power[d, 2], p, Plus[Times[e, f], Times[-1, d, g]]], Times[-1, e, Plus[Times[g, Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Times[2, c, d, p, Plus[Times[e, f], Times[-1, d, g]]]], x]]], x]], Times[-1, Dist[Times[p, Power[Times[Power[e, 2], Plus[m, 1], Plus[m, 2], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 2]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Simp[Plus[Times[2, a, c, e, Plus[Times[e, f], Times[-1, d, g]], Plus[m, 2]], Times[-1, c, Plus[Times[2, c, d, Plus[Times[d, g, Plus[Times[2, p], 1]], Times[-1, e, f, Plus[m, Times[2, p], 2]]]], Times[-1, 2, a, Power[e, 2], g, Plus[m, 1]]], x]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Greater[p, 0], Less[m, -2], Less[Plus[m, Times[2, p]], 0], Not[NegativeIntegerQ[Plus[m, Times[2, p], 3]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[e, f, Plus[m, Times[2, p], 2]], Times[-1, d, g, Plus[Times[2, p], 1]], Times[e, g, Plus[m, 1], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[Power[e, 2], Plus[m, 1], Plus[m, Times[2, p], 2]], -1]], x], Dist[Times[p, Power[Times[Power[e, 2], Plus[m, 1], Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Simp[Plus[Times[g, Plus[Times[b, d], Times[2, a, e], Times[2, a, e, m], Times[2, b, d, p]]], Times[-1, f, b, e, Plus[m, Times[2, p], 2]], Times[Plus[Times[g, Plus[Times[2, c, d], Times[b, e], Times[b, e, m], Times[4, c, d, p]]], Times[-1, 2, c, e, f, Plus[m, Times[2, p], 2]]], x]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[p], Greater[p, 0], Or[And[RationalQ[m], Less[m, -1]], Equal[p, 1], And[IntegerQ[p], Not[RationalQ[m]]]], NonzeroQ[Plus[m, 1]], Not[NegativeIntegerQ[Plus[m, Times[2, p], 1]]], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[e, f, Plus[m, Times[2, p], 2]], Times[-1, d, g, Plus[Times[2, p], 1]], Times[e, g, Plus[m, 1], x]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[Power[e, 2], Plus[m, 1], Plus[m, Times[2, p], 2]], -1]], x], Dist[Times[p, Power[Times[Power[e, 2], Plus[m, 1], Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Simp[Plus[Times[g, Plus[Times[2, a, e], Times[2, a, e, m]]], Times[Plus[Times[g, Plus[Times[2, c, d], Times[4, c, d, p]]], Times[-1, 2, c, e, f, Plus[m, Times[2, p], 2]]], x]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[p], Greater[p, 0], Or[And[RationalQ[m], Less[m, -1]], Equal[p, 1], And[IntegerQ[p], Not[RationalQ[m]]]], NonzeroQ[Plus[m, 1]], Not[NegativeIntegerQ[Plus[m, Times[2, p], 1]]], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[c, e, f, Plus[m, Times[2, p], 2]], Times[-1, g, Plus[Times[c, d], Times[2, c, d, p], Times[-1, b, e, p]]], Times[g, c, e, Plus[m, Times[2, p], 1], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Times[c, Power[e, 2], Plus[m, Times[2, p], 1], Plus[m, Times[2, p], 2]], -1]], x], Times[-1, Dist[Times[p, Power[Times[c, Power[e, 2], Plus[m, Times[2, p], 1], Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Simp[Plus[Times[c, e, f, Plus[Times[b, d], Times[-1, 2, a, e]], Plus[m, Times[2, p], 2]], Times[g, Plus[Times[a, e, Plus[Times[b, e], Times[-1, 2, c, d, m], Times[b, e, m]]], Times[b, d, Plus[Times[b, e, p], Times[-1, c, d], Times[-1, 2, c, d, p]]]]], Times[Plus[Times[c, e, f, Plus[Times[2, c, d], Times[-1, b, e]], Plus[m, Times[2, p], 2]], Times[g, Plus[Times[Power[b, 2], Power[e, 2], Plus[p, m, 1]], Times[-1, 2, Power[c, 2], Power[d, 2], Plus[1, Times[2, p]]], Times[-1, c, e, Plus[Times[b, d, Plus[m, Times[-1, 2, p]]], Times[2, a, e, Plus[m, Times[2, p], 1]]]]]]], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[p], Greater[p, 0], Or[IntegerQ[p], Not[RationalQ[m]], Inequality[-1, LessEqual, m, Less, 0]], Not[NegativeIntegerQ[Plus[m, Times[2, p]]]], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[c, e, f, Plus[m, Times[2, p], 2]], Times[-1, g, c, d, Plus[Times[2, p], 1]], Times[g, c, e, Plus[m, Times[2, p], 1], x]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Times[c, Power[e, 2], Plus[m, Times[2, p], 1], Plus[m, Times[2, p], 2]], -1]], x], Dist[Times[2, p, Power[Times[c, Power[e, 2], Plus[m, Times[2, p], 1], Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Simp[Plus[Times[f, a, c, Power[e, 2], Plus[m, Times[2, p], 2]], Times[a, c, d, e, g, m], Times[-1, Plus[Times[Power[c, 2], f, d, e, Plus[m, Times[2, p], 2]], Times[-1, g, Plus[Times[Power[c, 2], Power[d, 2], Plus[Times[2, p], 1]], Times[a, c, Power[e, 2], Plus[m, Times[2, p], 1]]]]], x]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[p], Greater[p, 0], Or[IntegerQ[p], Not[RationalQ[m]], Inequality[-1, LessEqual, m, Less, 0]], Not[NegativeIntegerQ[Plus[m, Times[2, p]]]], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Plus[Times[2, a, c, Plus[Times[e, f], Times[d, g]]], Times[-1, b, Plus[Times[c, d, f], Times[a, e, g]]], Times[-1, Plus[Times[2, Power[c, 2], d, f], Times[Power[b, 2], e, g], Times[-1, c, Plus[Times[b, e, f], Times[b, d, g], Times[2, a, e, g]]]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[c, Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[2, Power[c, 2], Power[d, 2], f, Plus[Times[2, p], 3]], Times[b, e, g, Plus[Times[a, e, Plus[m, -1]], Times[b, d, Plus[p, 2]]]], Times[-1, c, Plus[Times[2, a, e, Plus[Times[e, f, Plus[m, -1]], Times[d, g, m]]], Times[b, d, Plus[Times[d, g, Plus[Times[2, p], 3]], Times[-1, e, f, Plus[m, Times[-1, 2, p], -4]]]]]], Times[e, Plus[Times[Power[b, 2], e, g, Plus[m, p, 1]], Times[2, Power[c, 2], d, f, Plus[m, Times[2, p], 2]], Times[-1, c, Plus[Times[2, a, e, g, m], Times[b, Plus[Times[e, f], Times[d, g]], Plus[m, Times[2, p], 2]]]]], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 1], Or[And[Equal[m, 2], Equal[p, -3], RationalQ[a, b, c, d, e, f, g]], Not[NegativeIntegerQ[Plus[m, Times[2, p], 3]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Plus[Times[2, a, Plus[Times[e, f], Times[d, g]]], Times[-1, Plus[Times[2, c, d, f], Times[-1, 2, a, e, g]], x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[4, a, c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[4, a, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -2]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[2, a, e, Plus[Times[e, f, Plus[m, -1]], Times[d, g, m]]], Times[-1, 2, c, Power[d, 2], f, Plus[Times[2, p], 3]], Times[e, Plus[Times[2, a, e, g, m], Times[-1, 2, c, d, f, Plus[m, Times[2, p], 2]]], x]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 1], Or[And[Equal[m, 2], Equal[p, -3], RationalQ[a, c, d, e, f, g]], Not[NegativeIntegerQ[Plus[m, Times[2, p], 3]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Plus[Times[f, b], Times[-1, 2, a, g], Times[Plus[Times[2, c, f], Times[-1, b, g]], x]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], x], Dist[Times[1, Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[g, Plus[Times[2, a, e, m], Times[b, d, Plus[Times[2, p], 3]]]], Times[-1, f, Plus[Times[b, e, m], Times[2, c, d, Plus[Times[2, p], 3]]]], Times[-1, e, Plus[Times[2, c, f], Times[-1, b, g]], Plus[m, Times[2, p], 3], x]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 0], Not[And[Equal[m, 1], SimplerQ[Plus[d, Times[e, x]], Plus[f, Times[g, x]]]]], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Plus[Times[a, g], Times[-1, c, f, x]], Power[Times[2, a, c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, a, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[a, e, g, m], Times[-1, c, d, f, Plus[Times[2, p], 3]], Times[-1, c, e, f, Plus[m, Times[2, p], 3], x]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, p], Less[p, -1], Greater[m, 0], Not[And[Equal[m, 1], SimplerQ[Plus[d, Times[e, x]], Plus[f, Times[g, x]]]]], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[f, Plus[Times[b, c, d], Times[-1, Power[b, 2], e], Times[2, a, c, e]]], Times[-1, a, g, Plus[Times[2, c, d], Times[-1, b, e]]], Times[c, Plus[Times[f, Plus[Times[2, c, d], Times[-1, b, e]]], Times[-1, g, Plus[Times[b, d], Times[-1, 2, a, e]]]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[p, 1], Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[f, Plus[Times[b, c, d, e, Plus[Times[2, p], Times[-1, m], 2]], Times[Power[b, 2], Power[e, 2], Plus[p, m, 2]], Times[-1, 2, Power[c, 2], Power[d, 2], Plus[Times[2, p], 3]], Times[-1, 2, a, c, Power[e, 2], Plus[m, Times[2, p], 3]]]], Times[-1, g, Plus[Times[a, e, Plus[Times[b, e], Times[-1, 2, c, d, m], Times[b, e, m]]], Times[-1, b, d, Plus[Times[3, c, d], Times[-1, b, e], Times[2, c, d, p], Times[-1, b, e, p]]]]], Times[c, e, Plus[Times[g, Plus[Times[b, d], Times[-1, 2, a, e]]], Times[-1, f, Plus[Times[2, c, d], Times[-1, b, e]]]], Plus[m, Times[2, p], 4], x]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[p], Less[p, -1], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Plus[Times[f, a, c, e], Times[-1, a, g, c, d], Times[c, Plus[Times[c, d, f], Times[a, e, g]], x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, c, Plus[p, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x]], Dist[Times[1, Power[Times[2, a, c, Plus[p, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[f, Plus[Times[Power[c, 2], Power[d, 2], Plus[Times[2, p], 3]], Times[a, c, Power[e, 2], Plus[m, Times[2, p], 3]]]], Times[-1, a, c, d, e, g, m], Times[c, e, Plus[Times[c, d, f], Times[a, e, g]], Plus[m, Times[2, p], 4], x]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[p], Less[p, -1], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Plus[f, Times[g, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Plus[f, Times[g, x]], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Times[c, m], -1]], x], Dist[Times[1, Power[c, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Simp[Plus[Times[c, d, f], Times[-1, a, e, g], Times[Plus[Times[g, c, d], Times[-1, b, e, g], Times[c, e, f]], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], FractionQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Times[c, m], -1]], x], Dist[Times[1, Power[c, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Simp[Plus[Times[c, d, f], Times[-1, a, e, g], Times[Plus[Times[g, c, d], Times[c, e, f]], x]], x], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], FractionQ[m], Greater[m, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Subst[Int[Times[Plus[Times[e, f], Times[-1, d, g], Times[g, Power[x, 2]]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]], Times[-1, Plus[Times[2, c, d], Times[-1, b, e]], Power[x, 2]], Times[c, Power[x, 4]]], -1]], x], x, Sqrt[Plus[d, Times[e, x]]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Subst[Int[Times[Plus[Times[e, f], Times[-1, d, g], Times[g, Power[x, 2]]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]], Times[-1, 2, c, d, Power[x, 2]], Times[c, Power[x, 4]]], -1]], x], x, Sqrt[Plus[d, Times[e, x]]]], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Simp[Plus[Times[c, d, f], Times[-1, f, b, e], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], FractionQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Simp[Plus[Times[c, d, f], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], x], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, g, m], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], FractionQ[m], Less[m, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[d, Times[e, x]], m], Times[Plus[f, Times[g, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Power[Plus[d, Times[e, x]], m], Times[Plus[f, Times[g, x]], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[RationalQ[m]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 2]], -1]], x], Dist[Times[1, Power[Times[c, Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[m, Plus[Times[c, d, f], Times[-1, a, e, g]]], Times[d, Plus[Times[2, c, f], Times[-1, b, g]], Plus[p, 1]], Times[Plus[Times[m, Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]]], Times[e, Plus[p, 1], Plus[Times[2, c, f], Times[-1, b, g]]]], x]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m], Greater[m, 0], NonzeroQ[Plus[m, Times[2, p], 2]], Not[And[Equal[m, 1], SimplerQ[Plus[f, Times[g, x]], Plus[d, Times[e, x]]]]], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[g, Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[m, Times[2, p], 2]], -1]], x], Dist[Times[1, Power[Times[c, Plus[m, Times[2, p], 2]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Times[c, d, f, Plus[m, Times[2, p], 2]], Times[-1, a, e, g, m], Times[c, Plus[Times[e, f, Plus[m, Times[2, p], 2]], Times[d, g, m]], x]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m], Greater[m, 0], NonzeroQ[Plus[m, Times[2, p], 2]], Not[And[Equal[m, 1], SimplerQ[Plus[f, Times[g, x]], Plus[d, Times[e, x]]]]], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[Plus[Times[c, d, f], Times[-1, f, b, e], Times[a, e, g]], Plus[m, 1]], Times[b, Plus[Times[d, g], Times[-1, e, f]], Plus[p, 1]], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], Plus[m, Times[2, p], 3], x]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m], Less[m, -1], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Times[Plus[Times[c, d, f], Times[a, e, g]], Plus[m, 1]], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], Plus[m, Times[2, p], 3], x]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m], Less[m, -1], Or[IntegerQ[m], IntegerQ[p], IntegersQ[Times[2, m], Times[2, p]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[Plus[Times[c, d, f], Times[-1, f, b, e], Times[a, e, g]], Plus[m, 1]], Times[b, Plus[Times[d, g], Times[-1, e, f]], Plus[p, 1]], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], Plus[m, Times[2, p], 3], x]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], NegativeIntegerQ[Simplify[Plus[m, Times[2, p], 3]]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[e, f], Times[-1, d, g]], Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], x], Dist[Times[1, Power[Times[Plus[m, 1], Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Times[Plus[Times[c, d, f], Times[a, e, g]], Plus[m, 1]], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], Plus[m, Times[2, p], 3], x]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], NegativeIntegerQ[Plus[m, Times[2, p], 3]], NonzeroQ[Plus[m, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[4, f, Plus[a, Times[-1, d]], Power[Plus[Times[b, d], Times[-1, a, e]], -1]], Subst[Int[Times[1, Power[Plus[Times[4, Plus[a, Times[-1, d]]], Times[-1, Power[x, 2]]], -1]], x], x, Times[Plus[Times[2, Plus[a, Times[-1, d]]], Times[Plus[b, Times[-1, e]], x]], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], ZeroQ[Plus[Times[4, c, Plus[a, Times[-1, d]]], Times[-1, Power[Plus[b, Times[-1, e]], 2]]]], ZeroQ[Plus[Times[e, f, Plus[b, Times[-1, e]]], Times[-1, 2, g, Plus[Times[b, d], Times[-1, a, e]]]]], NonzeroQ[Plus[Times[b, d], Times[-1, a, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Rational[-1, 2]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Subst[Int[Times[Plus[f, Times[g, Power[x, 2]]], Power[Sqrt[Plus[a, Times[b, Power[x, 2]], Times[c, Power[x, 4]]]], -1]], x], x, Sqrt[x]], x], And[FreeQ[List[a, b, c, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Rational[-1, 2]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[2, Subst[Int[Times[Plus[f, Times[g, Power[x, 2]]], Power[Sqrt[Plus[a, Times[c, Power[x, 4]]]], -1]], x], x, Sqrt[x]], x], FreeQ[List[a, c, f, g], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Rational[-1, 2]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[x], Power[Sqrt[Times[e, x]], -1]], Int[Times[Plus[f, Times[g, x]], Power[Times[Sqrt[x], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]], x], x], And[FreeQ[List[a, b, c, e, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Pattern[e, Blank[]], Pattern[x, Blank[]]], Rational[-1, 2]], Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Sqrt[x], Power[Sqrt[Times[e, x]], -1]], Int[Times[Plus[f, Times[g, x]], Power[Times[Sqrt[x], Sqrt[Plus[a, Times[c, Power[x, 2]]]]], -1]], x], x], FreeQ[List[a, c, e, f, g], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegersQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegersQ[m, n, p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[Times[e, Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[e, Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Simp[Plus[Times[c, d, f], Times[-1, b, e, f], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[f, Times[g, x]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], FractionQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Times[e, Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[e, Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Simp[Plus[Times[c, d, f], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], x], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[f, Times[g, x]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], FractionQ[p], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Denominator[m]]], Dist[Times[q, Power[e, -1]], Subst[Int[Times[Power[x, Plus[Times[q, Plus[m, 1]], -1]], Power[Plus[Times[Plus[Times[e, f], Times[-1, d, g]], Power[e, -1]], Times[g, Power[x, q], Power[e, -1]]], n], Power[Plus[Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[Power[e, 2], -1]], Times[-1, Plus[Times[2, c, d], Times[-1, b, e]], Power[x, q], Power[Power[e, 2], -1]], Times[c, Power[x, Times[2, q]], Power[Power[e, 2], -1]]], p]], x], x, Power[Plus[d, Times[e, x]], Times[1, Power[q, -1]]]], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegersQ[n, p], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Denominator[m]]], Dist[Times[q, Power[e, -1]], Subst[Int[Times[Power[x, Plus[Times[q, Plus[m, 1]], -1]], Power[Plus[Times[Plus[Times[e, f], Times[-1, d, g]], Power[e, -1]], Times[g, Power[x, q], Power[e, -1]]], n], Power[Plus[Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Power[e, 2], -1]], Times[-1, 2, c, d, Power[x, q], Power[Power[e, 2], -1]], Times[c, Power[x, Times[2, q]], Power[Power[e, 2], -1]]], p]], x], x, Power[Plus[d, Times[e, x]], Times[1, Power[q, -1]]]], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegersQ[n, p], FractionQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[m, Times[-1, n]]], ZeroQ[Plus[Times[e, f], Times[d, g]]], Or[IntegerQ[m], And[PositiveQ[d], PositiveQ[f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], m], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], And[FreeQ[List[a, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[m, Times[-1, n]]], ZeroQ[Plus[Times[e, f], Times[d, g]]], Or[IntegerQ[m], And[PositiveQ[d], PositiveQ[f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d, Times[e, x]], FracPart[m]], Power[Plus[f, Times[g, x]], FracPart[m]], Power[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], FracPart[m]], -1]], Int[Times[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[m, Times[-1, n]]], ZeroQ[Plus[Times[e, f], Times[d, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d, Times[e, x]], FracPart[m]], Power[Plus[f, Times[g, x]], FracPart[m]], Power[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], FracPart[m]], -1]], Int[Times[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], m], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, g, m, n, p], x], ZeroQ[Plus[m, Times[-1, n]]], ZeroQ[Plus[Times[e, f], Times[d, g]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Int[Times[Plus[a, Times[b, x]], Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n]], x], Dist[c, Int[Times[Power[x, 2], Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], RationalQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[a, Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n]], x], x], Dist[c, Int[Times[Power[x, 2], Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], RationalQ[m, n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[Power[c, 2], -1]], Int[Times[Simp[Plus[Times[2, c, e, f], Times[c, d, g], Times[-1, b, e, g], Times[c, e, g, x]], x], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -2]]], x], x], Dist[Times[1, Power[Power[c, 2], -1]], Int[Times[Simp[Plus[Times[Power[c, 2], d, Power[f, 2]], Times[-1, 2, a, c, e, f, g], Times[-1, a, c, d, Power[g, 2]], Times[a, b, e, Power[g, 2]], Times[Plus[Times[Power[c, 2], e, Power[f, 2]], Times[2, Power[c, 2], d, f, g], Times[-1, 2, b, c, e, f, g], Times[-1, b, c, d, Power[g, 2]], Times[Power[b, 2], e, Power[g, 2]], Times[-1, a, c, e, Power[g, 2]]], x]], x], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[m]], Not[IntegerQ[n]], RationalQ[m, n], Greater[m, 0], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[c, -1]], Int[Times[Simp[Plus[Times[2, e, f], Times[d, g], Times[e, g, x]], x], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -2]]], x], x], Dist[Times[1, Power[c, -1]], Int[Times[Simp[Plus[Times[c, d, Power[f, 2]], Times[-1, 2, a, e, f, g], Times[-1, a, d, Power[g, 2]], Times[Plus[Times[c, e, Power[f, 2]], Times[2, c, d, f, g], Times[-1, a, e, Power[g, 2]]], x]], x], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -2]], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[m]], Not[IntegerQ[n]], RationalQ[m, n], Greater[m, 0], Greater[n, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[e, g, Power[c, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -1]]], x], x], Dist[Times[1, Power[c, -1]], Int[Times[Simp[Plus[Times[c, d, f], Times[-1, a, e, g], Times[Plus[Times[c, e, f], Times[c, d, g], Times[-1, b, e, g]], x]], x], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[m]], Not[IntegerQ[n]], RationalQ[m, n], Greater[m, 0], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[e, g, Power[c, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -1]]], x], x], Dist[Times[1, Power[c, -1]], Int[Times[Simp[Plus[Times[c, d, f], Times[-1, a, e, g], Times[Plus[Times[c, e, f], Times[c, d, g]], x]], x], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[m]], Not[IntegerQ[n]], RationalQ[m, n], Greater[m, 0], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[g, Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[c, Power[f, 2]], Times[-1, b, f, g], Times[a, Power[g, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n]], x], x]], Dist[Times[1, Power[Plus[Times[c, Power[f, 2]], Times[-1, b, f, g], Times[a, Power[g, 2]]], -1]], Int[Times[Simp[Plus[Times[c, d, f], Times[-1, b, d, g], Times[a, e, g], Times[c, Plus[Times[e, f], Times[-1, d, g]], x]], x], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[m]], Not[IntegerQ[n]], RationalQ[m, n], Greater[m, 0], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[g, Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[c, Power[f, 2]], Times[a, Power[g, 2]]], -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], n]], x], x]], Dist[Times[1, Power[Plus[Times[c, Power[f, 2]], Times[a, Power[g, 2]]], -1]], Int[Times[Simp[Plus[Times[c, d, f], Times[a, e, g], Times[c, Plus[Times[e, f], Times[-1, d, g]], x]], x], Power[Plus[d, Times[e, x]], Plus[m, -1]], Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[m]], Not[IntegerQ[n]], RationalQ[m, n], Greater[m, 0], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[1, Power[Times[Sqrt[Plus[d, Times[e, x]]], Sqrt[Plus[f, Times[g, x]]]], -1]], Times[Power[Plus[d, Times[e, x]], Plus[m, Times[1, Power[2, -1]]]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], PositiveIntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[1, Power[Times[Sqrt[Plus[d, Times[e, x]]], Sqrt[Plus[f, Times[g, x]]]], -1]], Times[Power[Plus[d, Times[e, x]], Plus[m, Times[1, Power[2, -1]]]], Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PositiveIntegerQ[Plus[m, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n]], Times[1, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[m]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n]], Times[1, Power[Plus[a, Times[c, Power[x, 2]]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, g, m, n], x], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[m]], Not[IntegerQ[n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Or[IntegerQ[p], IntegersQ[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Or[IntegerQ[p], IntegersQ[m, n]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d, Times[e, x]], FracPart[p]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Power[Plus[Times[a, d], Times[c, e, Power[x, 3]]], FracPart[p]], -1]], Int[Times[Power[Times[g, x], n], Power[Plus[Times[a, d], Times[c, e, Power[x, 3]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, g, m, n, p], x], ZeroQ[Plus[m, Times[-1, p]]], ZeroQ[Plus[Times[b, d], Times[a, e]]], ZeroQ[Plus[Times[c, d], Times[b, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[Times[e, Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[e, Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], n], Plus[Times[c, d, f], Times[-1, b, e, f], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[n]], Not[IntegerQ[p]], RationalQ[n, p], Greater[p, 0], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[Times[e, Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[n, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[e, Plus[Times[e, f], Times[-1, d, g]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], n], Plus[Times[c, d, f], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]]], x], x]]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[n]], Not[IntegerQ[p]], RationalQ[n, p], Greater[p, 0], Less[n, -1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[e, Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[n, -1]], Plus[Times[c, d, f], Times[-1, b, e, f], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], Not[IntegerQ[n]], Not[IntegerQ[p]], RationalQ[n, p], Less[p, -1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[e, Plus[Times[e, f], Times[-1, d, g]], Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], -1]], Int[Times[Power[Plus[f, Times[g, x]], Plus[n, -1]], Plus[Times[c, d, f], Times[a, e, g], Times[-1, c, Plus[Times[e, f], Times[-1, d, g]], x]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], Not[IntegerQ[n]], Not[IntegerQ[p]], RationalQ[n, p], Less[p, -1], Greater[n, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Simp[Times[-2, Sqrt[Times[-1, g, Plus[b, Times[-1, q], Times[2, c, x]], Power[Plus[Times[2, c, f], Times[-1, b, g], Times[g, q]], -1]]], Sqrt[Times[-1, g, Plus[b, q, Times[2, c, x]], Power[Plus[Times[2, c, f], Times[-1, b, g], Times[-1, g, q]], -1]]], Power[Times[Plus[Times[e, f], Times[-1, d, g]], Sqrt[Times[2, c, Power[Plus[Times[2, c, f], Times[-1, b, g], Times[g, q]], -1]]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1], EllipticPi[Times[e, Plus[Times[2, c, f], Times[-1, b, g], Times[g, q]], Power[Times[2, c, Plus[Times[e, f], Times[-1, d, g]]], -1]], ArcSin[Times[Sqrt[Times[2, c, Power[Plus[Times[2, c, f], Times[-1, b, g], Times[g, q]], -1]]], Sqrt[Plus[f, Times[g, x]]]]], Times[Plus[Times[2, c, f], Times[-1, b, g], Times[g, q]], Power[Plus[Times[2, c, f], Times[-1, b, g], Times[-1, g, q]], -1]]]], x]], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Simp[Times[-2, Sqrt[Times[g, Plus[q, Times[-1, c, x]], Power[Plus[Times[c, f], Times[g, q]], -1]]], Sqrt[Times[-1, g, Plus[q, Times[c, x]], Power[Plus[Times[c, f], Times[-1, g, q]], -1]]], Power[Times[Plus[Times[e, f], Times[-1, d, g]], Sqrt[Times[c, Power[Plus[Times[c, f], Times[g, q]], -1]]], Sqrt[Plus[a, Times[c, Power[x, 2]]]]], -1], EllipticPi[Times[e, Plus[Times[c, f], Times[g, q]], Power[Times[c, Plus[Times[e, f], Times[-1, d, g]]], -1]], ArcSin[Times[Sqrt[Times[c, Power[Plus[Times[c, f], Times[g, q]], -1]]], Sqrt[Plus[f, Times[g, x]]]]], Times[Plus[Times[c, f], Times[g, q]], Power[Plus[Times[c, f], Times[-1, g, q]], -1]]]], x]], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[1, Power[Times[Sqrt[Plus[f, Times[g, x]]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]], Times[Power[Plus[f, Times[g, x]], Plus[n, Times[1, Power[2, -1]]]], Power[Plus[d, Times[e, x]], -1]], x], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], IntegerQ[Plus[n, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[1, Power[Times[Sqrt[Plus[f, Times[g, x]]], Sqrt[Plus[a, Times[c, Power[x, 2]]]]], -1]], Times[Power[Plus[f, Times[g, x]], Plus[n, Times[1, Power[2, -1]]]], Power[Plus[d, Times[e, x]], -1]], x], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], IntegerQ[Plus[n, Times[1, Power[2, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, Plus[d, Times[e, x]], Sqrt[Times[Power[Plus[Times[e, f], Times[-1, d, g]], 2], Plus[a, Times[b, x], Times[c, Power[x, 2]]], Power[Times[Plus[Times[c, Power[f, 2]], Times[-1, b, f, g], Times[a, Power[g, 2]]], Power[Plus[d, Times[e, x]], 2]], -1]]], Power[Times[Plus[Times[e, f], Times[-1, d, g]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]], Subst[Int[Times[1, Power[Sqrt[Plus[1, Times[-1, Plus[Times[2, c, d, f], Times[-1, b, e, f], Times[-1, b, d, g], Times[2, a, e, g]], Power[x, 2], Power[Plus[Times[c, Power[f, 2]], Times[-1, b, f, g], Times[a, Power[g, 2]]], -1]], Times[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]], Power[x, 4], Power[Plus[Times[c, Power[f, 2]], Times[-1, b, f, g], Times[a, Power[g, 2]]], -1]]]], -1]], x], x, Times[Sqrt[Plus[f, Times[g, x]]], Power[Sqrt[Plus[d, Times[e, x]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Rational[-1, 2]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, Plus[d, Times[e, x]], Sqrt[Times[Power[Plus[Times[e, f], Times[-1, d, g]], 2], Plus[a, Times[c, Power[x, 2]]], Power[Times[Plus[Times[c, Power[f, 2]], Times[a, Power[g, 2]]], Power[Plus[d, Times[e, x]], 2]], -1]]], Power[Times[Plus[Times[e, f], Times[-1, d, g]], Sqrt[Plus[a, Times[c, Power[x, 2]]]]], -1]], Subst[Int[Times[1, Power[Sqrt[Plus[1, Times[-1, Plus[Times[2, c, d, f], Times[2, a, e, g]], Power[x, 2], Power[Plus[Times[c, Power[f, 2]], Times[a, Power[g, 2]]], -1]], Times[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]], Power[x, 4], Power[Plus[Times[c, Power[f, 2]], Times[a, Power[g, 2]]], -1]]]], -1]], x], x, Times[Sqrt[Plus[f, Times[g, x]]], Power[Sqrt[Plus[d, Times[e, x]]], -1]]], x], And[FreeQ[List[a, c, d, e, f, g], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], 2], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[2, f, g, Power[e, -1]], Int[Times[Power[Times[e, x], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], Int[Times[Power[Times[e, x], m], Plus[Power[f, 2], Times[Power[g, 2], Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x]], FreeQ[List[a, c, e, f, g, m, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], 3], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[f, Int[Times[Power[Times[e, x], m], Plus[Power[f, 2], Times[3, Power[g, 2], Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], Dist[Times[g, Power[e, -1]], Int[Times[Power[Times[e, x], Plus[m, 1]], Plus[Times[3, Power[f, 2]], Times[Power[g, 2], Power[x, 2]]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], FreeQ[List[a, c, e, f, g, m, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[-1, b, d, e], Times[a, Power[e, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[g, Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], Plus[m, 1]], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], Dist[Times[Plus[Times[e, f], Times[-1, d, g]], Power[e, -1]], Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], Plus[n, -1]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x]], And[FreeQ[List[a, c, d, e, f, g, m, p], x], NonzeroQ[Plus[Times[e, f], Times[-1, d, g]]], NonzeroQ[Plus[Times[c, Power[d, 2]], Times[a, Power[e, 2]]]], PositiveIntegerQ[n]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], FreeQ[List[a, b, c, d, e, f, g, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], FreeQ[List[a, c, d, e, f, g, m, n, p], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[u, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x, u], x], And[FreeQ[List[a, b, c, d, e, f, g, m, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[u, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x, u], x], And[FreeQ[List[a, c, d, e, f, g, m, n, p], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[c, Power[f, -1]], p], Int[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]], x], x], And[FreeQ[List[a, b, c, d, e, f, p, q], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], Or[IntegerQ[p], PositiveQ[Times[c, Power[f, -1]]]], Or[Not[IntegerQ[q]], LessEqual[LeafCount[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], LeafCount[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[d, IntPart[p]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], FracPart[p]]], -1]], Int[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]], x], x], And[FreeQ[List[a, b, c, d, e, f, p, q], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], Not[IntegerQ[p]], Not[IntegerQ[q]], Not[PositiveQ[Times[c, Power[f, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[b, Times[2, c, x]], Times[2, p]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f, p, q], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[b, Times[2, c, x]], Times[2, p]], Power[Plus[d, Times[f, Power[x, 2]]], q]], x], x], And[FreeQ[List[a, b, c, d, f, p, q], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Not[IntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[b, f, Plus[Times[2, q], 3]], Times[-1, c, e, Plus[q, 2]], Times[2, c, f, Plus[q, 1], x]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, Power[f, 2], Plus[q, 1], Plus[Times[2, q], 3]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, q], x], ZeroQ[Plus[Times[f, Plus[Times[2, a, f], Times[-1, b, e]], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]]], NonzeroQ[Plus[q, 1]], NonzeroQ[Plus[Times[2, q], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[-1, c, e, Plus[q, 2]], Times[2, c, f, Plus[q, 1], x]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, Power[f, 2], Plus[q, 1], Plus[Times[2, q], 3]], -1]], x], And[FreeQ[List[a, c, d, e, f, q], x], ZeroQ[Plus[Times[2, a, Power[f, 2], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]]], NonzeroQ[Plus[q, 1]], NonzeroQ[Plus[Times[2, q], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[Plus[Times[b, d], Times[2, a, f, Plus[q, 1], x]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, d, f, Plus[q, 1]], -1]], x], And[FreeQ[List[a, b, c, d, f, q], x], NonzeroQ[Plus[q, 1]], ZeroQ[Plus[Times[3, a, f], Times[-1, c, d], Times[2, a, f, q]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[b, Int[Times[x, Power[Plus[d, Times[f, Power[x, 2]]], q]], x], x], Int[Times[Plus[a, Times[c, Power[x, 2]]], Power[Plus[d, Times[f, Power[x, 2]]], q]], x]], And[FreeQ[List[a, b, c, d, f, q], x], PositiveIntegerQ[Plus[q, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], PositiveIntegerQ[Plus[q, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Plus[a, Times[c, Power[x, 2]]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], x], And[FreeQ[List[a, c, d, e, f], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], PositiveIntegerQ[Plus[q, 2]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, e, f], Times[-1, 2, b, d, f], Times[c, d, e], Times[Plus[Times[f, Plus[Times[2, a, f], Times[-1, b, e]]], Times[c, Plus[Power[e, 2], Times[-1, 2, d, f]]]], x]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[f, Plus[q, 1], Plus[Power[e, 2], Times[-1, 4, d, f]]], -1]], x], Times[-1, Dist[Times[Plus[Times[f, Plus[Times[2, a, f], Times[-1, b, e]], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]], Power[Times[f, Plus[q, 1], Plus[Power[e, 2], Times[-1, 4, d, f]]], -1]], Int[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[q], Less[q, -1], NonzeroQ[Plus[Times[f, Plus[Times[2, a, f], Times[-1, b, e]], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, e, f], Times[c, d, e], Times[Plus[Times[2, a, Power[f, 2]], Times[c, Plus[Power[e, 2], Times[-1, 2, d, f]]]], x]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[f, Plus[q, 1], Plus[Power[e, 2], Times[-1, 4, d, f]]], -1]], x], Times[-1, Dist[Times[Plus[Times[2, a, Power[f, 2], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]], Power[Times[f, Plus[q, 1], Plus[Power[e, 2], Times[-1, 4, d, f]]], -1]], Int[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], x], x]]], And[FreeQ[List[a, c, d, e, f], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[q], Less[q, -1], NonzeroQ[Plus[Times[2, a, Power[f, 2], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, d], Times[-1, Plus[Times[a, f], Times[-1, c, d]], x]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, d, f, Plus[q, 1]], -1]], x], Dist[Times[Plus[Times[3, a, f], Times[-1, c, d], Times[2, a, f, q]], Power[Times[2, d, f, Plus[q, 1]], -1]], Int[Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], x], x]], And[FreeQ[List[a, b, c, d, f], x], RationalQ[q], Less[q, -1], NonzeroQ[Plus[Times[3, a, f], Times[-1, c, d], Times[2, a, f, q]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, f, Plus[Times[2, q], 3]], Times[-1, c, e, Plus[q, 2]], Times[2, c, f, Plus[q, 1], x]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, Power[f, 2], Plus[q, 1], Plus[Times[2, q], 3]], -1]], x], Dist[Times[Plus[Times[f, Plus[Times[2, a, f], Times[-1, b, e]], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]], Power[Times[2, Power[f, 2], Plus[Times[2, q], 3]], -1]], Int[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], x], x]], And[FreeQ[List[d, e, f, a, b, c, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], Not[PositiveIntegerQ[q]], Not[And[RationalQ[q], LessEqual[q, -1]]], NonzeroQ[Plus[Times[f, Plus[Times[2, a, f], Times[-1, b, e]], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[-1, c, e, Plus[q, 2]], Times[2, c, f, Plus[q, 1], x]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, Power[f, 2], Plus[q, 1], Plus[Times[2, q], 3]], -1]], x], Dist[Times[Plus[Times[2, a, Power[f, 2], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]], Power[Times[2, Power[f, 2], Plus[Times[2, q], 3]], -1]], Int[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], x], x]], And[FreeQ[List[d, e, f, a, c, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], Not[PositiveIntegerQ[q]], Not[And[RationalQ[q], LessEqual[q, -1]]], NonzeroQ[Plus[Times[2, a, Power[f, 2], Plus[Times[2, q], 3]], Times[c, Plus[Times[Power[e, 2], Plus[q, 2]], Times[-1, 2, d, f]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, f, Plus[Times[2, q], 3]], Times[2, c, f, Plus[q, 1], x]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, Power[f, 2], Plus[q, 1], Plus[Times[2, q], 3]], -1]], x], Dist[Times[Plus[Times[3, a, f], Times[-1, c, d], Times[2, a, f, q]], Power[Times[f, Plus[Times[2, q], 3]], -1]], Int[Power[Plus[d, Times[f, Power[x, 2]]], q], x], x]], And[FreeQ[List[d, f, a, b, c, q], x], Not[PositiveIntegerQ[q]], Not[And[RationalQ[q], LessEqual[q, -1]]], NonzeroQ[Plus[Times[3, a, f], Times[-1, c, d], Times[2, a, f, q]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[2, c, d, Plus[Times[2, p], 3]], Times[b, e, q], Times[Plus[Times[2, b, f, q], Times[2, c, e, Plus[Times[2, p], q, 3]]], x], Times[2, c, f, Plus[Times[2, p], Times[2, q], 3], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[b, Times[2, c, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[2, c, d, Plus[Times[2, p], 3]], Times[Times[2, b, f, q], x], Times[2, c, f, Plus[Times[2, p], Times[2, q], 3], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Times[2, c, x], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Power[Times[Times[-4, a, c], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Times[-4, a, c], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[2, c, d, Plus[Times[2, p], 3]], Times[Times[2, c, e, Plus[Times[2, p], q, 3]], x], Times[2, c, f, Plus[Times[2, p], Times[2, q], 3], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[2, a, Power[c, 2], e], Times[-1, Power[b, 2], c, e], Times[Power[b, 3], f], Times[b, c, Plus[Times[c, d], Times[-1, 3, a, f]]], Times[c, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[2, c, Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], Times[-1, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, e, Plus[Times[Power[b, 2], c, e], Times[-1, 2, a, Power[c, 2], e], Times[-1, Power[b, 3], f], Times[-1, b, c, Plus[Times[c, d], Times[-1, 3, a, f]]]], Plus[p, q, 2]], Times[Plus[Times[2, f, Plus[Times[2, a, Power[c, 2], e], Times[-1, Power[b, 2], c, e], Times[Power[b, 3], f], Times[b, c, Plus[Times[c, d], Times[-1, 3, a, f]]]], Plus[p, q, 2]], Times[-1, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]], Plus[Times[b, f, Plus[p, 1]], Times[-1, c, e, Plus[Times[2, p], q, 4]]]]], x], Times[c, f, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[Power[b, 3], f], Times[b, c, Plus[Times[c, d], Times[-1, 3, a, f]]], Times[c, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Simp[Plus[Times[2, c, Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], Times[-1, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[Plus[Times[2, f, Plus[Times[Power[b, 3], f], Times[b, c, Plus[Times[c, d], Times[-1, 3, a, f]]]], Plus[p, q, 2]], Times[-1, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]], Times[b, f, Plus[p, 1]]]], x], Times[c, f, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[2, a, Power[c, 2], e], Times[c, Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[2, a, f]]], x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Times[-4, a, c], Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Times[-4, a, c], Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[2, c, Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Times[-1, a, e], Times[c, e]]], Plus[p, 1]], Times[-1, Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[2, a, f]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, e, Times[-2, a, Power[c, 2], e], Plus[p, q, 2]], Times[Plus[Times[2, f, Times[2, a, Power[c, 2], e], Plus[p, q, 2]], Times[-1, Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[2, a, f]]], Times[-1, c, e, Plus[Times[2, p], q, 4]]]], x], Times[c, f, Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[2, a, f]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, f, Plus[Times[3, p], Times[2, q]]], Times[-1, c, e, Plus[Times[2, p], q]], Times[2, c, f, Plus[p, q], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, Power[f, 2], Plus[p, q], Plus[Times[2, p], Times[2, q], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, Power[f, 2], Plus[p, q], Plus[Times[2, p], Times[2, q], 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -2]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]], Plus[1, Times[-1, p]], Plus[Times[2, p], q]], Times[-1, Plus[p, q], Plus[Times[Power[b, 2], d, f, Plus[1, Times[-1, p]]], Times[-1, a, Plus[Times[f, Plus[Times[b, e], Times[-1, 2, a, f]], Plus[Times[2, p], Times[2, q], 1]], Times[c, Plus[Times[2, d, f], Times[-1, Power[e, 2], Plus[Times[2, p], q]]]]]]]], Times[Plus[Times[2, Plus[Times[c, d], Times[-1, a, f]], Plus[Times[c, e], Times[-1, b, f]], Plus[1, Times[-1, p]], Plus[Times[2, p], q]], Times[-1, Plus[p, q], Plus[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], e, f, Plus[1, Times[-1, p]]], Times[b, Plus[Times[c, Plus[Power[e, 2], Times[-1, 4, d, f]], Plus[Times[2, p], q]], Times[f, Plus[Times[2, c, d], Times[-1, b, e], Times[2, a, f]], Plus[Times[2, p], Times[2, q], 1]]]]]]], x], Times[Plus[Times[Power[Plus[Times[c, e], Times[-1, b, f]], 2], Plus[1, Times[-1, p]], p], Times[c, Plus[p, q], Plus[Times[f, Plus[Times[b, e], Times[-1, 2, a, f]], Plus[Times[4, p], Times[2, q], -1]], Times[-1, c, Plus[Times[2, d, f, Plus[1, Times[-1, 2, p]]], Times[Power[e, 2], Plus[Times[3, p], q, -1]]]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[p, q]], NonzeroQ[Plus[Times[2, p], Times[2, q], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, Plus[Times[3, p], Times[2, q]]], Times[2, c, Plus[p, q], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, f, Plus[p, q], Plus[Times[2, p], Times[2, q], 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, f, Plus[p, q], Plus[Times[2, p], Times[2, q], 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -2]], Power[Plus[d, Times[f, Power[x, 2]]], q], Simp[Plus[Times[Power[b, 2], d, Plus[p, -1], Plus[Times[2, p], q]], Times[-1, Plus[p, q], Plus[Times[Power[b, 2], d, Plus[1, Times[-1, p]]], Times[-1, 2, a, Plus[Times[c, d], Times[-1, a, f, Plus[Times[2, p], Times[2, q], 1]]]]]], Times[-1, Plus[Times[2, b, Plus[Times[c, d], Times[-1, a, f]], Plus[1, Times[-1, p]], Plus[Times[2, p], q]], Times[-1, 2, Plus[p, q], b, Plus[Times[2, c, d, Plus[Times[2, p], q]], Times[-1, Plus[Times[c, d], Times[a, f]], Plus[Times[2, p], Times[2, q], 1]]]]], x], Times[Plus[Times[Power[b, 2], f, p, Plus[1, Times[-1, p]]], Times[2, c, Plus[p, q], Plus[Times[c, d, Plus[Times[2, p], -1]], Times[-1, a, f, Plus[Times[4, p], Times[2, q], -1]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[p, q]], NonzeroQ[Plus[Times[2, p], Times[2, q], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[c, Plus[Times[e, Plus[Times[2, p], q]], Times[-1, 2, f, Plus[p, q], x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, Power[f, 2], Plus[p, q], Plus[Times[2, p], Times[2, q], 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[2, Power[f, 2], Plus[p, q], Plus[Times[2, p], Times[2, q], 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -2]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[-1, a, c, Power[e, 2], Plus[1, Times[-1, p]], Plus[Times[2, p], q]], Times[a, Plus[p, q], Plus[Times[-2, a, Power[f, 2], Plus[Times[2, p], Times[2, q], 1]], Times[c, Plus[Times[2, d, f], Times[-1, Power[e, 2], Plus[Times[2, p], q]]]]]], Times[Plus[Times[2, Plus[Times[c, d], Times[-1, a, f]], Times[c, e], Plus[1, Times[-1, p]], Plus[Times[2, p], q]], Times[4, a, c, e, f, Plus[1, Times[-1, p]], Plus[p, q]]], x], Times[Plus[Times[p, Power[c, 2], Power[e, 2], Plus[1, Times[-1, p]]], Times[-1, c, Plus[p, q], Plus[Times[2, a, Power[f, 2], Plus[Times[4, p], Times[2, q], -1]], Times[c, Plus[Times[2, d, f, Plus[1, Times[-1, 2, p]]], Times[Power[e, 2], Plus[Times[3, p], q, -1]]]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Greater[p, 1], NonzeroQ[Plus[p, q]], NonzeroQ[Plus[Times[2, p], Times[2, q], 1]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, b, c, d, e], Times[a, c, Power[e, 2]], Times[Power[b, 2], d, f], Times[-1, 2, a, c, d, f], Times[-1, a, b, e, f], Times[Power[a, 2], Power[f, 2]]]]], Condition[Plus[Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[Power[c, 2], d], Times[-1, b, c, e], Times[Power[b, 2], f], Times[-1, a, c, f], Times[-1, Plus[Times[Power[c, 2], e], Times[-1, b, c, f]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[c, Power[e, 2]], Times[-1, c, d, f], Times[-1, b, e, f], Times[a, Power[f, 2]], Times[Plus[Times[c, e, f], Times[-1, b, Power[f, 2]]], x]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], -1]], x], x]], NonzeroQ[q]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Plus[Times[Power[c, 2], Power[d, 2]], Times[Power[b, 2], d, f], Times[-1, 2, a, c, d, f], Times[Power[a, 2], Power[f, 2]]]]], Condition[Plus[Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[Power[c, 2], d], Times[Power[b, 2], f], Times[-1, a, c, f], Times[b, c, f, x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], Times[-1, Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[c, d, f], Times[-1, a, Power[f, 2]], Times[b, Power[f, 2], x]], Power[Plus[d, Times[f, Power[x, 2]]], -1]], x], x]]], NonzeroQ[q]]], And[FreeQ[List[a, b, c, d, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, e], Subst[Int[Times[1, Power[Plus[Times[e, Plus[Times[b, e], Times[-1, 4, a, f]]], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Power[x, 2]]], -1]], x], x, Times[Plus[e, Times[2, f, x]], Power[Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], ZeroQ[Plus[Times[c, e], Times[-1, b, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[q, -1]], Int[Times[1, Power[Times[Plus[b, Times[-1, q], Times[2, c, x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[q, -1]], Int[Times[1, Power[Times[Plus[b, q, Times[2, c, x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NonzeroQ[Plus[Times[c, e], Times[-1, b, f]]], PosQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[1, Power[2, -1]], Int[Times[1, Power[Times[Plus[a, Times[-1, Rt[Times[-1, a, c], 2], x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Dist[Times[1, Power[2, -1]], Int[Times[1, Power[Times[Plus[a, Times[Rt[Times[-1, a, c], 2], x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], PosQ[Times[-1, a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[2, c, Power[q, -1]], Int[Times[1, Power[Times[Plus[b, Times[-1, q], Times[2, c, x]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[2, c, Power[q, -1]], Int[Times[1, Power[Times[Plus[b, q, Times[2, c, x]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PosQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], 2]]], Plus[Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Plus[Times[c, d], Times[-1, a, f], q, Times[Plus[Times[c, e], Times[-1, b, f]], x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Plus[Times[c, d], Times[-1, a, f], Times[-1, q], Times[Plus[Times[c, e], Times[-1, b, f]], x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NonzeroQ[Plus[Times[c, e], Times[-1, b, f]]], NegQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[a, c, Power[e, 2]]], 2]]], Plus[Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Plus[Times[c, d], Times[-1, a, f], q, Times[c, e, x]], Power[Times[Plus[a, Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Plus[Times[c, d], Times[-1, a, f], Times[-1, q], Times[c, e, x]], Power[Times[Plus[a, Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, c, d, e, f], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NegQ[Times[-1, a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[Power[b, 2], d, f]], 2]]], Plus[Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Plus[Times[c, d], Times[-1, a, f], q, Times[Times[-1, b, f], x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Plus[Times[c, d], Times[-1, a, f], Times[-1, q], Times[Times[-1, b, f], x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[c, Power[f, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[f, -1]], Int[Times[Plus[Times[c, d], Times[-1, a, f], Times[Plus[Times[c, e], Times[-1, b, f]], x]], Power[Times[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[c, Power[f, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[f, -1]], Int[Times[Plus[Times[c, d], Times[-1, a, f], Times[-1, b, f, x]], Power[Times[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Plus[d, Times[f, Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, b, c, d, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[c, Power[f, -1]], Int[Times[1, Power[Sqrt[Plus[a, Times[c, Power[x, 2]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[f, -1]], Int[Times[Plus[Times[c, d], Times[-1, a, f], Times[c, e, x]], Power[Times[Sqrt[Plus[a, Times[c, Power[x, 2]]]], Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[Sqrt[Plus[b, r, Times[2, c, x]]], Sqrt[Plus[Times[2, a], Times[Plus[b, r], x]]], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[b, r, Times[2, c, x]]], Sqrt[Plus[Times[2, a], Times[Plus[b, r], x]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[r, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Dist[Times[Sqrt[Plus[b, r, Times[2, c, x]]], Sqrt[Plus[Times[2, a], Times[Plus[b, r], x]]], Power[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], -1]], Int[Times[1, Power[Times[Sqrt[Plus[b, r, Times[2, c, x]]], Sqrt[Plus[Times[2, a], Times[Plus[b, r], x]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], FreeQ[List[a, b, c, d, e, f, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], FreeQ[List[a, c, d, e, f, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], x, u], x], And[FreeQ[List[a, b, c, d, e, f, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], x, u], x], And[FreeQ[List[a, c, d, e, f, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[c, Power[f, -1]], p], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], Or[IntegerQ[p], PositiveQ[Times[c, Power[f, -1]]]], Or[Not[IntegerQ[q]], LessEqual[LeafCount[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], LeafCount[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[d, IntPart[p]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, p, q], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], Not[IntegerQ[p]], Not[IntegerQ[q]], Not[PositiveQ[Times[c, Power[f, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[b, Times[2, c, x]], Times[2, p]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p, q], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[b, Times[2, c, x]], Times[2, p]], Power[Plus[d, Times[f, Power[x, 2]]], q]], x], x], And[FreeQ[List[a, b, c, d, f, g, h, m, p, q], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[Times[d, g, Power[a, -1]], Times[f, h, x, Power[c, -1]]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[m, p]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, p], x], ZeroQ[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]], ZeroQ[Plus[Times[Power[c, 2], d, Power[g, 2]], Times[-1, a, c, e, g, h], Times[Power[a, 2], f, Power[h, 2]]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[Times[d, g, Power[a, -1]], Times[f, h, x, Power[c, -1]]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[m, p]]], x], And[FreeQ[List[a, c, d, e, f, g, h, p], x], ZeroQ[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]], ZeroQ[Plus[Times[Power[c, 2], d, Power[g, 2]], Times[-1, a, c, e, g, h], Times[Power[a, 2], f, Power[h, 2]]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[Times[d, g, Power[a, -1]], Times[f, h, x, Power[c, -1]]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[m, p]]], x], And[FreeQ[List[a, b, c, d, f, g, h, p], x], ZeroQ[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]], ZeroQ[Plus[Times[Power[c, 2], d, Power[g, 2]], Times[Power[a, 2], f, Power[h, 2]]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[Times[d, g, Power[a, -1]], Times[f, h, x, Power[c, -1]]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[m, p]]], x], And[FreeQ[List[a, c, d, f, g, h, p], x], ZeroQ[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]], ZeroQ[Plus[Times[Power[c, 2], d, Power[g, 2]], Times[Power[a, 2], f, Power[h, 2]]]], IntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[Times[a, Power[e, -1]], Times[c, Power[f, -1], x]], p], Power[Plus[Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]]], x], And[FreeQ[List[a, b, c, e, f, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[c, Power[e, 2]], Times[-1, b, e, f], Times[a, Power[f, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[x, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[Times[a, Power[e, -1]], Times[c, Power[f, -1], x]], p], Power[Plus[Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]]], x], And[FreeQ[List[a, c, e, f, q], x], ZeroQ[Plus[Times[c, Power[e, 2]], Times[a, Power[f, 2]]]], IntegerQ[p]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[f, Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p], x], ZeroQ[Plus[Times[b, f, h, Plus[m, p, 2]], Times[c, Plus[Times[2, f, g, Plus[p, 1]], Times[-1, e, h, Plus[m, Times[2, p], 3]]]]]], ZeroQ[Plus[Times[b, f, g, Plus[p, 1]], Times[h, Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, p], 3]]]]]], NonzeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[f, Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], x], And[FreeQ[List[a, c, d, e, f, g, h, m, p], x], ZeroQ[Times[c, Plus[Times[2, f, g, Plus[p, 1]], Times[-1, e, h, Plus[m, Times[2, p], 3]]]]], ZeroQ[Times[h, Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, p], 3]]]]], NonzeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Simp[Times[f, Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], x], And[FreeQ[List[a, b, c, d, f, g, h, m, p], x], ZeroQ[Plus[Times[b, f, h, Plus[m, p, 2]], Times[c, Times[2, f, g, Plus[p, 1]]]]], ZeroQ[Plus[Times[b, f, g, Plus[p, 1]], Times[h, Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, p], 3]]]]]], NonzeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Plus[d, Times[e, x], Times[f, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], Or[IntegersQ[m, p], PositiveIntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p], Plus[d, Times[e, x], Times[f, Power[x, 2]]]], x], x], And[FreeQ[List[a, c, d, e, f, g, h, m], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], Or[IntegersQ[m, p], PositiveIntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Plus[d, Times[f, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, f, g, h, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], Or[IntegersQ[m, p], PositiveIntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p], Plus[d, Times[f, Power[x, 2]]]], x], x], And[FreeQ[List[a, c, d, f, g, h, m], x], Or[IntegersQ[m, p], PositiveIntegerQ[p]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[f, Power[g, 2]], Times[-1, e, g, h], Times[d, Power[h, 2]]], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[h, Plus[m, 1], Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]], -1]], x], Dist[Times[1, Power[Times[h, Plus[m, 1], Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[h, Plus[Times[c, d, g], Times[-1, a, f, g], Times[a, e, h]], Plus[m, 1]], Times[-1, b, Plus[Times[f, Power[g, 2], Plus[p, 1]], Times[-1, h, Plus[Times[e, g, Plus[p, 1]], Times[-1, d, h, Plus[m, p, 2]]]]]], Times[-1, Plus[Times[f, h, Plus[Times[b, g], Times[-1, a, h]], Plus[m, 1]], Times[c, Plus[Times[2, f, Power[g, 2], Plus[p, 1]], Times[-1, h, Plus[Times[e, g], Times[-1, d, h]], Plus[m, Times[2, p], 3]]]]], x]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, h, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[f, Power[g, 2]], Times[-1, e, g, h], Times[d, Power[h, 2]]], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[h, Plus[m, 1], Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]], -1]], x], Dist[Times[1, Power[Times[h, Plus[m, 1], Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Times[h, Plus[Times[c, d, g], Times[-1, a, f, g], Times[a, e, h]], Plus[m, 1]], Times[Plus[Times[a, f, Power[h, 2], Plus[m, 1]], Times[-1, c, Plus[Times[2, f, Power[g, 2], Plus[p, 1]], Times[-1, h, Plus[Times[e, g], Times[-1, d, h]], Plus[m, Times[2, p], 3]]]]], x]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, h, p], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[f, Power[g, 2]], Times[d, Power[h, 2]]], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[h, Plus[m, 1], Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]], -1]], x], Dist[Times[1, Power[Times[h, Plus[m, 1], Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[h, Plus[Times[c, d, g], Times[-1, a, f, g]], Plus[m, 1]], Times[-1, b, Plus[Times[f, Power[g, 2], Plus[p, 1]], Times[d, Power[h, 2], Plus[m, p, 2]]]], Times[-1, Plus[Times[f, h, Plus[Times[b, g], Times[-1, a, h]], Plus[m, 1]], Times[c, Plus[Times[2, f, Power[g, 2], Plus[p, 1]], Times[d, Power[h, 2], Plus[m, Times[2, p], 3]]]]], x]], x]], x], x]], And[FreeQ[List[a, b, c, d, f, g, h, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[f, Power[g, 2]], Times[d, Power[h, 2]]], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[h, Plus[m, 1], Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]], -1]], x], Dist[Times[1, Power[Times[h, Plus[m, 1], Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Times[h, Plus[Times[c, d, g], Times[-1, a, f, g]], Plus[m, 1]], Times[Plus[Times[a, f, Power[h, 2], Plus[m, 1]], Times[-1, c, Plus[Times[2, f, Power[g, 2], Plus[p, 1]], Times[d, Power[h, 2], Plus[m, Times[2, p], 3]]]]], x]], x]], x], x]], And[FreeQ[List[a, c, d, f, g, h, p], x], RationalQ[m], Less[m, -1], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[f, Power[g, 2]], Times[-1, e, g, h], Times[d, Power[h, 2]]], Power[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]], -1]], Int[Times[1, Power[Times[Plus[g, Times[h, x]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]], -1]], Int[Times[Plus[Times[c, d, g], Times[-1, a, f, g], Times[-1, b, d, h], Times[a, e, h], Times[Plus[Times[c, e, g], Times[-1, b, f, g], Times[-1, c, d, h], Times[a, f, h]], x]], Power[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[f, Power[g, 2]], Times[-1, e, g, h], Times[d, Power[h, 2]]], Power[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], -1]], Int[Times[1, Power[Times[Plus[g, Times[h, x]], Sqrt[Plus[a, Times[c, Power[x, 2]]]]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], -1]], Int[Times[Plus[Times[c, d, g], Times[-1, a, f, g], Times[a, e, h], Times[Plus[Times[c, e, g], Times[-1, c, d, h], Times[a, f, h]], x]], Power[Power[Plus[a, Times[c, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[f, Power[g, 2]], Times[d, Power[h, 2]]], Power[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]], -1]], Int[Times[1, Power[Times[Plus[g, Times[h, x]], Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]], -1]], Int[Times[Plus[Times[c, d, g], Times[-1, a, f, g], Times[-1, b, d, h], Times[-1, Plus[Times[b, f, g], Times[c, d, h], Times[-1, a, f, h]], x]], Power[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[-1, b, g, h], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], -1], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-3, 2]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[Plus[Times[f, Power[g, 2]], Times[d, Power[h, 2]]], Power[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], -1]], Int[Times[1, Power[Times[Plus[g, Times[h, x]], Sqrt[Plus[a, Times[c, Power[x, 2]]]]], -1]], x], x], Dist[Times[1, Power[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], -1]], Int[Times[Plus[Times[c, d, g], Times[-1, a, f, g], Times[-1, Plus[Times[c, d, h], Times[-1, a, f, h]], x]], Power[Power[Plus[a, Times[c, Power[x, 2]]], Times[3, Power[2, -1]]], -1]], x], x]], And[FreeQ[List[a, c, d, f, g, h], x], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, c, d], Times[-1, 2, a, c, e], Times[a, b, f], Times[Plus[Times[c, Plus[Times[2, c, d], Times[-1, b, e]]], Times[f, Plus[Power[b, 2], Times[-1, 2, a, c]]]], x]], Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[h, m, Plus[Times[b, c, d], Times[-1, 2, a, c, e], Times[a, b, f]]], Times[g, Plus[Times[c, Plus[Times[2, c, d], Times[-1, b, e]], Plus[Times[2, p], 3]], Times[-1, f, Plus[Times[2, a, c], Times[-1, Power[b, 2], Plus[p, 2]]]]]], Times[h, Plus[Times[c, Plus[Times[2, c, d], Times[-1, b, e]], Plus[m, Times[2, p], 3]], Times[-1, f, Plus[Times[2, a, c, Plus[m, 1]], Times[-1, Power[b, 2], Plus[m, p, 2]]]]], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[m, p], Less[p, -1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, e], Times[-1, Plus[Times[c, d], Times[-1, a, f]], x]], Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, a, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[a, Plus[Times[f, g], Times[e, h, m]]], Times[-1, c, d, g, Plus[Times[2, p], 3]], Times[h, Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, p], 3]]], x]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[m, p], Less[p, -1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[b, c, d], Times[a, b, f], Times[Plus[Times[2, Power[c, 2], d], Times[f, Plus[Power[b, 2], Times[-1, 2, a, c]]]], x]], Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, -1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[h, m, Plus[Times[b, c, d], Times[a, b, f]]], Times[g, Plus[Times[c, Times[2, c, d], Plus[Times[2, p], 3]], Times[-1, f, Plus[Times[2, a, c], Times[-1, Power[b, 2], Plus[p, 2]]]]]], Times[h, Plus[Times[2, Power[c, 2], d, Plus[m, Times[2, p], 3]], Times[-1, f, Plus[Times[2, a, c, Plus[m, 1]], Times[-1, Power[b, 2], Plus[m, p, 2]]]]], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[m, p], Less[p, -1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[c, d], Times[-1, a, f]], x, Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, c, Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[2, a, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, -1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[a, f, g], Times[-1, c, d, g, Plus[Times[2, p], 3]], Times[h, Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, p], 3]]], x]], x]], x], x]]], And[FreeQ[List[a, c, d, f, g, h], x], RationalQ[m, p], Less[p, -1], Greater[m, 1]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[Plus[Times[c, d], Times[-1, a, f]], Plus[Times[b, g], Times[-1, 2, a, h]]], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[2, c, g], Times[-1, b, h]]], Times[-1, Plus[Times[2, Power[c, 2], d, g], Times[b, f, Plus[Times[b, g], Times[-1, a, h]]], Times[-1, c, Plus[Times[b, e, g], Times[2, a, f, g], Times[b, d, h], Times[-1, 2, a, e, h]]]], x]], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[g, 2]], Times[-1, h, Plus[Times[b, g], Times[-1, a, h]]]], Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[g, 2]], Times[-1, h, Plus[Times[b, g], Times[-1, a, h]]]], Plus[p, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[Plus[Times[2, c, d], Times[-1, b, e], Times[2, a, f]], Plus[Times[c, Power[g, 2]], Times[-1, h, Plus[Times[b, g], Times[-1, a, h]]]], Plus[p, 1]], Times[g, Plus[Times[Power[b, 2], f, g], Times[-1, b, Plus[Times[c, e, g], Times[c, d, h], Times[a, f, h]]], Times[2, Plus[Times[Power[c, 2], d, g], Times[-1, a, Plus[Times[c, f, g], Times[-1, c, e, h]]]]]], Plus[p, 2]], Times[-1, h, Plus[Times[Plus[Times[c, d], Times[-1, a, f]], Plus[Times[b, g], Times[-1, 2, a, h]]], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[2, c, g], Times[-1, b, h]]]], Plus[p, m, 2]], Times[h, Plus[Times[Power[b, 2], f, g], Times[-1, b, Plus[Times[c, e, g], Times[c, d, h], Times[a, f, h]]], Times[2, Plus[Times[Power[c, 2], d, g], Times[-1, a, Plus[Times[c, f, g], Times[-1, c, e, h]]]]]], Plus[Times[2, p], m, 4], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[-1, h, Plus[Times[b, g], Times[-1, a, h]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, c, e, g], Times[-1, a, h, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, c, Plus[Times[c, d, g], Times[-1, Plus[Times[a, f, g], Times[-1, a, e, h]]]], x]], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, c, Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], Plus[p, 1]], -1]], x], Dist[Times[1, Power[Times[2, a, c, Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], Plus[p, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[Plus[Times[c, d], Times[a, f]], Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], Plus[p, 1]], Times[g, Plus[Times[Power[c, 2], d, g], Times[-1, a, Plus[Times[c, f, g], Times[-1, c, e, h]]]], Plus[p, 2]], Times[-1, h, Plus[Times[a, c, e, g], Times[-1, a, h, Plus[Times[c, d], Times[-1, a, f]]]], Plus[p, m, 2]], Times[h, Plus[Times[Power[c, 2], d, g], Times[-1, a, Plus[Times[c, f, g], Times[-1, c, e, h]]]], Plus[Times[2, p], m, 4], x]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, h, m], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[Plus[Times[c, d], Times[-1, a, f]], Plus[Times[b, g], Times[-1, 2, a, h]]], Times[-1, b, d, Plus[Times[2, c, g], Times[-1, b, h]]], Times[-1, Plus[Times[2, Power[c, 2], d, g], Times[b, f, Plus[Times[b, g], Times[-1, a, h]]], Times[-1, c, Plus[Times[2, a, f, g], Times[b, d, h]]]], x]], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[g, 2]], Times[-1, h, Plus[Times[b, g], Times[-1, a, h]]]], Plus[p, 1]], -1]], x]], Times[-1, Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[c, Power[g, 2]], Times[-1, h, Plus[Times[b, g], Times[-1, a, h]]]], Plus[p, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[2, Plus[Times[c, d], Times[a, f]], Plus[Times[c, Power[g, 2]], Times[-1, h, Plus[Times[b, g], Times[-1, a, h]]]], Plus[p, 1]], Times[g, Plus[Times[Power[b, 2], f, g], Times[-1, b, Plus[Times[c, d, h], Times[a, f, h]]], Times[2, Plus[Times[Power[c, 2], d, g], Times[-1, a, c, f, g]]]], Plus[p, 2]], Times[-1, h, Plus[Times[Plus[Times[c, d], Times[-1, a, f]], Plus[Times[b, g], Times[-1, 2, a, h]]], Times[-1, b, d, Plus[Times[2, c, g], Times[-1, b, h]]]], Plus[p, m, 2]], Times[h, Plus[Times[Power[b, 2], f, g], Times[-1, b, Plus[Times[c, d, h], Times[a, f, h]]], Times[2, Plus[Times[Power[c, 2], d, g], Times[-1, a, c, f, g]]]], Plus[Times[2, p], m, 4], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, g, h, m], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[-1, h, Plus[Times[b, g], Times[-1, a, h]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[a, h, Plus[Times[c, d], Times[-1, a, f]]], Times[c, Plus[Times[c, d, g], Times[-1, a, f, g]], x]], Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[2, a, c, Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], Plus[p, 1]], -1]], x]], Dist[Times[1, Power[Times[2, a, c, Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], Plus[p, 1]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Simp[Plus[Times[Plus[Times[c, d], Times[a, f]], Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]], Plus[p, 1]], Times[g, Plus[Times[Power[c, 2], d, g], Times[-1, a, c, f, g]], Plus[p, 2]], Times[-1, h, Times[-1, a, h, Plus[Times[c, d], Times[-1, a, f]]], Plus[p, m, 2]], Times[h, Plus[Times[Power[c, 2], d, g], Times[-1, a, Times[c, f, g]]], Plus[Times[2, p], m, 4], x]], x]], x], x]], And[FreeQ[List[a, c, d, f, g, h, m], x], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[c, Power[g, 2]], Times[a, Power[h, 2]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[f, Power[Power[h, 2], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], Times[-1, Dist[Times[1, Power[Power[h, 2], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Plus[Times[f, Power[g, 2]], Times[-1, d, Power[h, 2]], Times[h, Plus[Times[2, f, g], Times[-1, e, h]], x]]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], ZeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[f, Power[Power[h, 2], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 2]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], Times[-1, Dist[Times[1, Power[Power[h, 2], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p], Plus[Times[f, Power[g, 2]], Times[-1, d, Power[h, 2]], Times[h, Plus[Times[2, f, g], Times[-1, e, h]], x]]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, h, m, p], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], ZeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[f, Power[Power[h, 2], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 2]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], Times[-1, Dist[Times[1, Power[Power[h, 2], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Plus[Times[f, Power[g, 2]], Times[-1, d, Power[h, 2]], Times[2, f, g, h, x]]], x], x]]], And[FreeQ[List[a, b, c, d, f, g, h, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[f, Power[Power[h, 2], -1]], Int[Times[Power[Plus[g, Times[h, x]], Plus[m, 2]], Power[Plus[a, Times[c, Power[x, 2]]], p]], x], x], Times[-1, Dist[Times[1, Power[Power[h, 2], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p], Plus[Times[f, Power[g, 2]], Times[-1, d, Power[h, 2]], Times[2, f, g, h, x]]], x], x]]], And[FreeQ[List[a, c, d, f, g, h, m, p], x], ZeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[b, f, g, Plus[p, 1]], Times[h, Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, p], 3]]]], Times[Plus[Times[b, f, h, Plus[m, p, 2]], Times[c, Plus[Times[2, f, g, Plus[p, 1]], Times[-1, e, h, Plus[m, Times[2, p], 3]]]]], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NonzeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Times[h, Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, p], 3]]]], Times[Times[c, Plus[Times[2, f, g, Plus[p, 1]], Times[-1, e, h, Plus[m, Times[2, p], 3]]]], x]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, h, m, p], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NonzeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Simp[Plus[Times[b, f, g, Plus[p, 1]], Times[h, Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, p], 3]]]], Times[f, Plus[Times[b, h, Plus[m, p, 2]], Times[2, c, g, Plus[p, 1]]], x]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, g, h, m, p], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[f, Power[Plus[g, Times[h, x]], Plus[m, 1]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, h, Plus[m, Times[2, p], 3]], -1]], Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p], Simp[Plus[Times[h, Plus[Times[a, f, Plus[m, 1]], Times[-1, c, d, Plus[m, Times[2, p], 3]]]], Times[2, c, f, g, Plus[p, 1], x]], x]], x], x]]], And[FreeQ[List[a, c, d, f, g, h, m, p], x], NonzeroQ[Plus[m, Times[2, p], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[g, Times[h, x]]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], IntegersQ[p, q], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[g, Times[h, x]]], x], x], And[FreeQ[List[a, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], IntegersQ[p, q], Or[Greater[p, 0], Greater[q, 0]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[g, b], Times[-1, 2, a, h], Times[-1, Plus[Times[b, h], Times[-1, 2, g, c]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[e, q, Plus[Times[g, b], Times[-1, 2, a, h]]], Times[-1, d, Plus[Times[b, h], Times[-1, 2, g, c]], Plus[Times[2, p], 3]], Times[Plus[Times[2, f, q, Plus[Times[g, b], Times[-1, 2, a, h]]], Times[-1, e, Plus[Times[b, h], Times[-1, 2, g, c]], Plus[Times[2, p], q, 3]]], x], Times[-1, f, Plus[Times[b, h], Times[-1, 2, g, c]], Plus[Times[2, p], Times[2, q], 3], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, h], Times[-1, g, c, x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Power[Times[2, a, c, Plus[p, 1]], -1]], x], Dist[Times[2, Power[Times[4, a, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[g, c, d, Plus[Times[2, p], 3]], Times[-1, a, Times[h, e, q]], Times[Plus[Times[g, c, e, Plus[Times[2, p], q, 3]], Times[-1, a, Times[2, h, f, q]]], x], Times[g, c, f, Plus[Times[2, p], Times[2, q], 3], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[g, b], Times[-1, 2, a, h], Times[-1, Plus[Times[b, h], Times[-1, 2, g, c]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[-1, d, Plus[Times[b, h], Times[-1, 2, g, c]], Plus[Times[2, p], 3]], Times[Times[2, f, q, Plus[Times[g, b], Times[-1, 2, a, h]]], x], Times[-1, f, Plus[Times[b, h], Times[-1, 2, g, c]], Plus[Times[2, p], Times[2, q], 3], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], -1], Plus[Times[g, c, Plus[Times[2, a, c, e], Times[-1, b, Plus[Times[c, d], Times[a, f]]]]], Times[Plus[Times[g, b], Times[-1, a, h]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]], Times[c, Plus[Times[g, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]], Times[-1, h, Plus[Times[b, c, d], Times[-1, 2, a, c, e], Times[a, b, f]]]], x]]], x], Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[Plus[Times[b, h], Times[-1, 2, g, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], Times[Plus[Times[Power[b, 2], Times[g, f]], Times[-1, b, Plus[Times[h, c, d], Times[g, c, e], Times[a, h, f]]], Times[2, Plus[Times[g, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Times[-1, h, c, e]]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, e, Plus[Times[Times[g, c], Plus[Times[2, a, c, e], Times[-1, b, Plus[Times[c, d], Times[a, f]]]]], Times[Plus[Times[g, b], Times[-1, a, h]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[2, f, Plus[Times[Times[g, c], Plus[Times[2, a, c, e], Times[-1, b, Plus[Times[c, d], Times[a, f]]]]], Times[Plus[Times[g, b], Times[-1, a, h]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[Power[b, 2], g, f], Times[-1, b, Plus[Times[h, c, d], Times[g, c, e], Times[a, h, f]]], Times[2, Plus[Times[g, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Times[-1, h, c, e]]]]], Plus[Times[b, f, Plus[p, 1]], Times[-1, c, e, Plus[Times[2, p], q, 4]]]]], x], Times[-1, c, f, Plus[Times[Power[b, 2], Times[g, f]], Times[-1, b, Plus[Times[h, c, d], Times[g, c, e], Times[a, h, f]]], Times[2, Plus[Times[g, c, Plus[Times[c, d], Times[-1, a, f]]], Times[a, h, c, e]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, h, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Times[-4, a, c], Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1], Plus[Times[g, c, Times[2, a, c, e]], Times[Times[-1, a, h], Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[2, a, f]]]], Times[c, Plus[Times[g, Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[2, a, f]]]], Times[-1, h, Times[-2, a, c, e]]], x]]], x], Dist[Times[1, Power[Times[Times[-4, a, c], Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[Times[-2, g, c], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Times[-1, a, e], Times[c, e]]], Plus[p, 1]], Times[Times[2, Plus[Times[g, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Times[-1, h, c, e]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, e, Plus[Times[Times[g, c], Times[2, a, c, e]], Times[Times[-1, a, h], Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[Plus[2], a, f]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[2, f, Plus[Times[Times[g, c], Times[2, a, c, e]], Times[Times[-1, a, h], Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[Plus[2], a, f]]]]], Plus[p, q, 2]], Times[-1, Times[2, Plus[Times[g, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Times[-1, h, c, e]]]], Times[-1, c, e, Plus[Times[2, p], q, 4]]]], x], Times[-1, c, f, Times[2, Plus[Times[g, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Times[-1, h, c, e]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, h, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1], Plus[Times[Times[g, c], Times[-1, b, Plus[Times[c, d], Times[a, f]]]], Times[Plus[Times[g, b], Times[-1, a, h]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]]], Times[c, Plus[Times[g, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]]], Times[-1, h, Plus[Times[b, c, d], Times[a, b, f]]]], x]]], x], Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Simp[Plus[Times[Plus[Times[b, h], Times[-1, 2, g, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Times[b, d], Times[-1, b, f]]], Plus[p, 1]], Times[Plus[Times[Power[b, 2], Times[g, f]], Times[-1, b, Plus[Times[h, c, d], Times[a, h, f]]], Times[2, Times[g, c, Plus[Times[c, d], Times[-1, a, f]]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, Plus[Times[2, f, Plus[Times[Times[g, c], Times[-1, b, Plus[Times[c, d], Times[a, f]]]], Times[Plus[Times[g, b], Times[-1, a, h]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[Power[b, 2], Times[g, f]], Times[-1, b, Plus[Times[h, c, d], Times[a, h, f]]], Times[2, Times[g, c, Plus[Times[c, d], Times[-1, a, f]]]]], Times[b, f, Plus[p, 1]]]], x], Times[-1, c, f, Plus[Times[Power[b, 2], Times[g, f]], Times[-1, b, Plus[Times[h, c, d], Times[a, h, f]]], Times[2, Times[g, c, Plus[Times[c, d], Times[-1, a, f]]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, f, g, h, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[h, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, f, Plus[p, q, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, f, Plus[p, q, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[h, p, Plus[Times[b, d], Times[-1, a, e]]], Times[a, Plus[Times[h, e], Times[-1, 2, g, f]], Plus[p, q, 1]], Times[Plus[Times[2, h, p, Plus[Times[c, d], Times[-1, a, f]]], Times[b, Plus[Times[h, e], Times[-1, 2, g, f]], Plus[p, q, 1]]], x], Times[Plus[Times[h, p, Plus[Times[c, e], Times[-1, b, f]]], Times[c, Plus[Times[h, e], Times[-1, 2, g, f]], Plus[p, q, 1]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, g, h, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[p, q, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[h, Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, f, Plus[p, q, 1]], -1]], x], Dist[Times[1, Power[Times[2, f, Plus[p, q, 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[a, h, e, p], Times[-1, a, Plus[Times[h, e], Times[-1, 2, g, f]], Plus[p, q, 1]], Times[-1, 2, h, p, Plus[Times[c, d], Times[-1, a, f]], x], Times[-1, Plus[Times[h, c, e, p], Times[c, Plus[Times[h, e], Times[-1, 2, g, f]], Plus[p, q, 1]]], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, g, h, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[p, q, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[h, Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, f, Plus[p, q, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, f, Plus[p, q, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Simp[Plus[Times[h, p, Times[b, d]], Times[a, Times[-2, g, f], Plus[p, q, 1]], Times[Plus[Times[2, h, p, Plus[Times[c, d], Times[-1, a, f]]], Times[b, Times[-2, g, f], Plus[p, q, 1]]], x], Times[Plus[Times[h, p, Times[-1, b, f]], Times[c, Times[-2, g, f], Plus[p, q, 1]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, g, h, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[p, q, 1]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Simplify[Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, b, c, d, e], Times[a, c, Power[e, 2]], Times[Power[b, 2], d, f], Times[-1, 2, a, c, d, f], Times[-1, a, b, e, f], Times[Power[a, 2], Power[f, 2]]]]]], Condition[Plus[Dist[Times[1, Power[q, -1]], Int[Times[Simp[Plus[Times[g, Power[c, 2], d], Times[-1, g, b, c, e], Times[a, h, c, e], Times[g, Power[b, 2], f], Times[-1, a, b, h, f], Times[-1, a, g, c, f], Times[c, Plus[Times[h, c, d], Times[-1, g, c, e], Times[g, b, f], Times[-1, a, h, f]], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[1, Power[q, -1]], Int[Times[Simp[Plus[Times[-1, h, c, d, e], Times[g, c, Power[e, 2]], Times[b, h, d, f], Times[-1, g, c, d, f], Times[-1, g, b, e, f], Times[a, g, Power[f, 2]], Times[-1, f, Plus[Times[h, c, d], Times[-1, g, c, e], Times[g, b, f], Times[-1, a, h, f]], x]], x], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], -1]], x], x]], NonzeroQ[q]]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Simplify[Plus[Times[Power[c, 2], Power[d, 2]], Times[Power[b, 2], d, f], Times[-1, 2, a, c, d, f], Times[Power[a, 2], Power[f, 2]]]]]], Condition[Plus[Dist[Times[1, Power[q, -1]], Int[Times[Simp[Plus[Times[g, Power[c, 2], d], Times[g, Power[b, 2], f], Times[-1, a, b, h, f], Times[-1, a, g, c, f], Times[c, Plus[Times[h, c, d], Times[g, b, f], Times[-1, a, h, f]], x]], x], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[1, Power[q, -1]], Int[Times[Simp[Plus[Times[b, h, d, f], Times[-1, g, c, d, f], Times[a, g, Power[f, 2]], Times[-1, f, Plus[Times[h, c, d], Times[g, b, f], Times[-1, a, h, f]], x]], x], Power[Plus[d, Times[f, Power[x, 2]]], -1]], x], x]], NonzeroQ[q]]], And[FreeQ[List[a, b, c, d, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[g, Int[Times[1, Power[Times[Plus[a, Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x], Dist[h, Int[Times[x, Power[Times[Plus[a, Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, c, d, f, g, h], x], PositiveQ[Times[a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Plus[Times[-1, Dist[Times[Plus[Times[c, g], Times[h, q]], Power[Times[2, q], -1]], Int[Times[1, Power[Times[Plus[q, Times[-1, c, x]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]], Times[-1, Dist[Times[Plus[Times[c, g], Times[-1, h, q]], Power[Times[2, q], -1]], Int[Times[1, Power[Times[Plus[q, Times[c, x]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, c, d, f, g, h], x], Not[PositiveQ[Times[a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, g], Subst[Int[Times[1, Power[Plus[Times[b, d], Times[-1, a, e], Times[-1, b, Power[x, 2]]], -1]], x], x, Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], ZeroQ[Plus[Times[c, e], Times[-1, b, f]]], ZeroQ[Plus[Times[h, e], Times[-1, 2, g, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[Plus[Times[h, e], Times[-1, 2, g, f]], Power[Times[2, f], -1]], Int[Times[1, Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], Dist[Times[h, Power[Times[2, f], -1]], Int[Times[Plus[e, Times[2, f, x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], ZeroQ[Plus[Times[c, e], Times[-1, b, f]]], NonzeroQ[Plus[Times[h, e], Times[-1, 2, g, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Pattern[x, Blank[]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, e], Subst[Int[Times[Plus[1, Times[-1, d, Power[x, 2]]], Power[Plus[Times[c, e], Times[-1, b, f], Times[-1, e, Plus[Times[2, c, d], Times[-1, b, e], Times[2, a, f]], Power[x, 2]], Times[Power[d, 2], Plus[Times[c, e], Times[-1, b, f]], Power[x, 4]]], -1]], x], x, Times[Plus[1, Times[Plus[e, Sqrt[Plus[Power[e, 2], Times[-1, 4, d, f]]]], x, Power[Times[2, d], -1]]], Power[Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[g, Subst[Int[Times[1, Power[Plus[a, Times[Plus[Times[c, d], Times[-1, a, f]], Power[x, 2]]], -1]], x], x, Times[x, Power[Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], ZeroQ[Plus[Times[2, h, d], Times[-1, g, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Dist[Times[Plus[Times[2, h, d], Times[-1, g, e]], Power[e, -1]], Int[Times[1, Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], Dist[Times[h, Power[e, -1]], Int[Times[Plus[Times[2, d], Times[e, x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], NonzeroQ[Plus[Times[2, h, d], Times[-1, g, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, g, Plus[Times[g, b], Times[-1, 2, a, h]]], Subst[Int[Times[1, Power[Simp[Plus[Times[g, Plus[Times[g, b], Times[-1, 2, a, h]], Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Power[x, 2]]], x], -1]], x], x, Times[Simp[Plus[Times[g, b], Times[-1, 2, a, h], Times[-1, Plus[Times[b, h], Times[-1, 2, g, c]], x]], x], Power[Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]]], x], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NonzeroQ[Plus[Times[b, d], Times[-1, a, e]]], ZeroQ[Plus[Times[Power[h, 2], Plus[Times[b, d], Times[-1, a, e]]], Times[-1, 2, g, h, Plus[Times[c, d], Times[-1, a, f]]], Times[Power[g, 2], Plus[Times[c, e], Times[-1, b, f]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, a, g, h], Subst[Int[Times[1, Power[Simp[Plus[Times[2, Power[a, 2], g, h, c], Times[a, e, Power[x, 2]]], x], -1]], x], x, Times[Simp[Plus[Times[a, h], Times[-1, g, c, x]], x], Power[Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]]], x], And[FreeQ[List[a, c, d, e, f, g, h], x], ZeroQ[Plus[Times[a, Power[h, 2], e], Times[2, g, h, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, Power[g, 2], c, e]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[-2, g, Plus[Times[g, b], Times[-1, 2, a, h]]], Subst[Int[Times[1, Power[Simp[Plus[Times[g, Plus[Times[g, b], Times[-1, 2, a, h]], Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[-1, b, d, Power[x, 2]]], x], -1]], x], x, Times[Simp[Plus[Times[g, b], Times[-1, 2, a, h], Times[-1, Plus[Times[b, h], Times[-1, 2, g, c]], x]], x], Power[Sqrt[Plus[d, Times[f, Power[x, 2]]]], -1]]], x], And[FreeQ[List[a, b, c, d, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], ZeroQ[Plus[Times[b, Power[h, 2], d], Times[-1, 2, g, h, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, Power[g, 2], b, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[Plus[Times[2, c, g], Times[-1, h, Plus[b, Times[-1, q]]]], Power[q, -1]], Int[Times[1, Power[Times[Plus[b, Times[-1, q], Times[2, c, x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[2, c, g], Times[-1, h, Plus[b, q]]], Power[q, -1]], Int[Times[1, Power[Times[Plus[b, q, Times[2, c, x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], PosQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Times[-1, a, c], 2]]], Plus[Dist[Plus[Times[h, Power[2, -1]], Times[c, g, Power[Times[2, q], -1]]], Int[Times[1, Power[Times[Plus[Times[-1, q], Times[c, x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Dist[Plus[Times[h, Power[2, -1]], Times[-1, c, g, Power[Times[2, q], -1]]], Int[Times[1, Power[Times[Plus[q, Times[c, x]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]]], And[FreeQ[List[a, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], PosQ[Times[-1, a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]]], Plus[Dist[Times[Plus[Times[2, c, g], Times[-1, h, Plus[b, Times[-1, q]]]], Power[q, -1]], Int[Times[1, Power[Times[Plus[b, Times[-1, q], Times[2, c, x]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[Plus[Times[2, c, g], Times[-1, h, Plus[b, q]]], Power[q, -1]], Int[Times[1, Power[Times[Plus[b, q, Times[2, c, x]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], PosQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], 2]]], Plus[Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Simp[Plus[Times[h, Plus[Times[b, d], Times[-1, a, e]]], Times[-1, g, Plus[Times[c, d], Times[-1, a, f], Times[-1, q]]], Times[-1, Plus[Times[g, Plus[Times[c, e], Times[-1, b, f]]], Times[-1, h, Plus[Times[c, d], Times[-1, a, f], q]]], x]], x], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Simp[Plus[Times[h, Plus[Times[b, d], Times[-1, a, e]]], Times[-1, g, Plus[Times[c, d], Times[-1, a, f], q]], Times[-1, Plus[Times[g, Plus[Times[c, e], Times[-1, b, f]]], Times[-1, h, Plus[Times[c, d], Times[-1, a, f], Times[-1, q]]]], x]], x], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NonzeroQ[Plus[Times[b, d], Times[-1, a, e]]], NegQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[a, c, Power[e, 2]]], 2]]], Plus[Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Simp[Plus[Times[-1, a, h, e], Times[-1, g, Plus[Times[c, d], Times[-1, a, f], Times[-1, q]]], Times[Plus[Times[h, Plus[Times[c, d], Times[-1, a, f], q]], Times[-1, g, c, e]], x]], x], Power[Times[Plus[a, Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Simp[Plus[Times[-1, a, h, e], Times[-1, g, Plus[Times[c, d], Times[-1, a, f], q]], Times[Plus[Times[h, Plus[Times[c, d], Times[-1, a, f], Times[-1, q]]], Times[-1, g, c, e]], x]], x], Power[Times[Plus[a, Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], NegQ[Times[-1, a, c]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Rt[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[Power[b, 2], d, f]], 2]]], Plus[Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Simp[Plus[Times[h, b, d], Times[-1, g, Plus[Times[c, d], Times[-1, a, f], Times[-1, q]]], Times[Plus[Times[h, Plus[Times[c, d], Times[-1, a, f], q]], Times[g, b, f]], x]], x], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x], Times[-1, Dist[Times[1, Power[Times[2, q], -1]], Int[Times[Simp[Plus[Times[h, b, d], Times[-1, g, Plus[Times[c, d], Times[-1, a, f], q]], Times[Plus[Times[h, Plus[Times[c, d], Times[-1, a, f], Times[-1, q]]], Times[g, b, f]], x]], x], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]]]], And[FreeQ[List[a, b, c, d, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NegQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[s, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]], Set[t, Rt[Plus[Power[e, 2], Times[-1, 4, d, f]], 2]]], Dist[Times[Sqrt[Plus[b, s, Times[2, c, x]]], Sqrt[Plus[Times[2, a], Times[Plus[b, s], x]]], Sqrt[Plus[e, t, Times[2, f, x]]], Sqrt[Plus[Times[2, d], Times[Plus[e, t], x]]], Power[Times[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], Int[Times[Plus[g, Times[h, x]], Power[Times[Sqrt[Plus[b, s, Times[2, c, x]]], Sqrt[Plus[Times[2, a], Times[Plus[b, s], x]]], Sqrt[Plus[e, t, Times[2, f, x]]], Sqrt[Plus[Times[2, d], Times[Plus[e, t], x]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[s, Rt[Plus[Power[b, 2], Times[-1, 4, a, c]], 2]], Set[t, Rt[Times[-4, d, f], 2]]], Dist[Times[Sqrt[Plus[b, s, Times[2, c, x]]], Sqrt[Plus[Times[2, a], Times[Plus[b, s], x]]], Sqrt[Plus[t, Times[2, f, x]]], Sqrt[Plus[Times[2, d], Times[t, x]]], Power[Times[Sqrt[Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], Int[Times[Plus[g, Times[h, x]], Power[Times[Sqrt[Plus[b, s, Times[2, c, x]]], Sqrt[Plus[Times[2, a], Times[Plus[b, s], x]]], Sqrt[Plus[t, Times[2, f, x]]], Sqrt[Plus[Times[2, d], Times[t, x]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, f, g, h], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Power[Times[-9, c, Power[h, 2], Power[Power[Plus[Times[2, c, g], Times[-1, b, h]], 2], -1]], Times[1, Power[3, -1]]]]], Plus[Simp[Times[Sqrt[3], h, q, ArcTan[Plus[Times[1, Power[Sqrt[3], -1]], Times[-1, Power[2, Times[2, Power[3, -1]]], Power[Plus[1, Times[-1, Times[3, h, Plus[b, Times[2, c, x]]], Power[Plus[Times[2, c, g], Times[-1, b, h]], -1]]], Times[2, Power[3, -1]]], Power[Times[Sqrt[3], Power[Plus[1, Times[Times[3, h, Plus[b, Times[2, c, x]]], Power[Plus[Times[2, c, g], Times[-1, b, h]], -1]]], Times[1, Power[3, -1]]]], -1]]]], Power[f, -1]], x], Plus[Times[-1, Simp[Times[3, h, q, Log[Plus[Power[Plus[1, Times[-1, 3, h, Plus[b, Times[2, c, x]], Power[Plus[Times[2, c, g], Times[-1, b, h]], -1]]], Times[2, Power[3, -1]]], Times[Power[2, Times[1, Power[3, -1]]], Power[Plus[1, Times[3, h, Plus[b, Times[2, c, x]], Power[Plus[Times[2, c, g], Times[-1, b, h]], -1]]], Times[1, Power[3, -1]]]]]], Power[Times[2, f], -1]], x]], Simp[Times[h, q, Log[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], Power[Times[2, f], -1]], x]]]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], ZeroQ[Plus[Times[c, e], Times[-1, b, f]]], ZeroQ[Plus[Times[Power[c, 2], d], Times[-1, f, Plus[Power[b, 2], Times[-1, 3, a, c]]]]], ZeroQ[Plus[Times[Power[c, 2], Power[g, 2]], Times[-1, b, c, g, h], Times[-1, 2, Power[b, 2], Power[h, 2]], Times[9, a, c, Power[h, 2]]]], PositiveQ[Times[-9, c, Power[h, 2], Power[Power[Plus[Times[2, c, g], Times[-1, b, h]], 2], -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Sqrt[3], h, ArcTan[Plus[Times[1, Power[Sqrt[3], -1]], Times[-1, Power[2, Times[2, Power[3, -1]]], Power[Plus[1, Times[-1, 3, h, x, Power[g, -1]]], Times[2, Power[3, -1]]], Power[Times[Sqrt[3], Power[Plus[1, Times[3, h, x, Power[g, -1]]], Times[1, Power[3, -1]]]], -1]]]], Power[Times[Power[2, Times[2, Power[3, -1]]], Power[a, Times[1, Power[3, -1]]], f], -1]], x], Plus[Times[-1, Simp[Times[3, h, Log[Plus[Power[Plus[1, Times[-1, 3, h, x, Power[g, -1]]], Times[2, Power[3, -1]]], Times[Power[2, Times[1, Power[3, -1]]], Power[Plus[1, Times[3, h, x, Power[g, -1]]], Times[1, Power[3, -1]]]]]], Power[Times[Power[2, Times[5, Power[3, -1]]], Power[a, Times[1, Power[3, -1]]], f], -1]], x]], Simp[Times[h, Log[Plus[d, Times[f, Power[x, 2]]]], Power[Times[Power[2, Times[5, Power[3, -1]]], Power[a, Times[1, Power[3, -1]]], f], -1]], x]]], And[FreeQ[List[a, c, d, f, g, h], x], ZeroQ[Plus[Times[c, d], Times[3, a, f]]], ZeroQ[Plus[Times[c, Power[g, 2]], Times[9, a, Power[h, 2]]]], PositiveQ[a]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Times[-1, c, Power[Plus[Power[b, 2], Times[-1, 4, a, c]], -1]]]], Dist[Times[Power[Times[q, Plus[a, Times[b, x], Times[c, Power[x, 2]]]], Times[1, Power[3, -1]]], Power[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Times[1, Power[3, -1]]], -1]], Int[Times[Plus[g, Times[h, x]], Power[Times[Power[Plus[Times[q, a], Times[b, q, x], Times[c, q, Power[x, 2]]], Times[1, Power[3, -1]]], Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, g, h], x], ZeroQ[Plus[Times[c, e], Times[-1, b, f]]], ZeroQ[Plus[Times[Power[c, 2], d], Times[-1, f, Plus[Power[b, 2], Times[-1, 3, a, c]]]]], ZeroQ[Plus[Times[Power[c, 2], Power[g, 2]], Times[-1, b, c, g, h], Times[-1, 2, Power[b, 2], Power[h, 2]], Times[9, a, c, Power[h, 2]]]], Not[PositiveQ[Plus[Times[4, a], Times[-1, Power[b, 2], Power[c, -1]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Pattern[g, Blank[]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 3]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[1, Times[c, Power[x, 2], Power[a, -1]]], Times[1, Power[3, -1]]], Power[Power[Plus[a, Times[c, Power[x, 2]]], Times[1, Power[3, -1]]], -1]], Int[Times[Plus[g, Times[h, x]], Power[Times[Power[Plus[1, Times[c, Power[x, 2], Power[a, -1]]], Times[1, Power[3, -1]]], Plus[d, Times[f, Power[x, 2]]]], -1]], x], x], And[FreeQ[List[a, c, d, f, g, h], x], ZeroQ[Plus[Times[c, d], Times[3, a, f]]], ZeroQ[Plus[Times[c, Power[g, 2]], Times[9, a, Power[h, 2]]]], Not[PositiveQ[a]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[g, Times[h, x]]], x], FreeQ[List[a, b, c, d, e, f, g, h, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[x, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[g, Times[h, x]]], x], FreeQ[List[a, c, d, e, f, g, h, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[u, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], x, u], x], And[FreeQ[List[a, b, c, d, e, f, g, h, m, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[g, Blank[]]], Times[Optional[Pattern[h, Blank[]]], Pattern[u, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[g, Times[h, x]], m], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q]], x], x, u], x], And[FreeQ[List[a, c, d, e, f, g, h, m, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Pattern[u, Blank[]], Optional[Pattern[p, Blank[]]]], Power[Pattern[v, Blank[]], Optional[Pattern[q, Blank[]]]], Power[Pattern[z, Blank[]], Optional[Pattern[m, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[ExpandToSum[z, x], m], Power[ExpandToSum[u, x], p], Power[ExpandToSum[v, x], q]], x], And[FreeQ[List[m, p, q], x], LinearQ[z, x], QuadraticQ[List[u, v], x], Not[And[LinearMatchQ[z, x], QuadraticMatchQ[List[u, v], x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[h, Blank[]]], Times[Optional[Pattern[i, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[h, Times[i, x]], q], Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], And[FreeQ[List[a, b, c, d, e, f, g, h, i, m, n, p, q], x], ZeroQ[Plus[Times[e, f], Times[d, g]]], ZeroQ[Plus[m, Times[-1, n]]], Or[IntegerQ[m], And[PositiveQ[d], PositiveQ[f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[m, Blank[]]]], Power[Plus[Optional[Pattern[f, Blank[]]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[n, Blank[]]]], Power[Plus[Optional[Pattern[h, Blank[]]], Times[Optional[Pattern[i, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[d, Times[e, x]], m], Power[Plus[f, Times[g, x]], n], Power[Plus[h, Times[i, x]], q], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, i, m, n, p, q], x], PositiveIntegerQ[p], NegativeIntegerQ[m]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]]], Pattern[m, Blank[]]], Power[Plus[Pattern[f, Blank[]], Times[Optional[Pattern[g, Blank[]]], Pattern[x, Blank[]]]], Pattern[n, Blank[]]], Power[Plus[Optional[Pattern[h, Blank[]]], Times[Optional[Pattern[i, Blank[]]], Pattern[x, Blank[]]]], Optional[Pattern[q, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[d, Times[e, x]], FracPart[m]], Power[Plus[f, Times[g, x]], FracPart[m]], Power[Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], FracPart[m]], -1]], Int[Times[Power[Plus[h, Times[i, x]], q], Power[Plus[Times[d, f], Times[e, g, Power[x, 2]]], m], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p]], x], x], And[FreeQ[List[a, b, c, d, e, f, g, h, i, m, n, p, q], x], ZeroQ[Plus[Times[e, f], Times[d, g]]], ZeroQ[Plus[m, Times[-1, n]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[c, Power[f, -1]], p], Int[Times[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, p, q], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], Or[IntegerQ[p], PositiveQ[Times[c, Power[f, -1]]]], Or[Not[IntegerQ[q]], LessEqual[LeafCount[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], LeafCount[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Power[Times[c, Power[f, -1]], p], Int[Times[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]], Plus[A, Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, C, p, q], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], Or[IntegerQ[p], PositiveQ[Times[c, Power[f, -1]]]], Or[Not[IntegerQ[q]], LessEqual[LeafCount[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], LeafCount[Plus[a, Times[b, x], Times[c, Power[x, 2]]]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[d, IntPart[p]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, p, q], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], Not[IntegerQ[p]], Not[IntegerQ[q]], Not[PositiveQ[Times[c, Power[f, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[a, IntPart[p]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[d, IntPart[p]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], FracPart[p]]], -1]], Int[Times[Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[p, q]], Plus[A, Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, C, p, q], x], ZeroQ[Plus[Times[c, d], Times[-1, a, f]]], ZeroQ[Plus[Times[b, d], Times[-1, a, e]]], Not[IntegerQ[p]], Not[IntegerQ[q]], Not[PositiveQ[Times[c, Power[f, -1]]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[b, Times[2, c, x]], Times[2, p]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, p, q], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[b, Times[2, c, x]], Times[2, p]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, C, p, q], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[b, Times[2, c, x]], Times[2, p]], Power[Plus[d, Times[f, Power[x, 2]]], q], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, f, A, B, C, p, q], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], FracPart[p]], Power[Times[Power[Times[4, c], IntPart[p]], Power[Plus[b, Times[2, c, x]], Times[2, FracPart[p]]]], -1]], Int[Times[Power[Plus[b, Times[2, c, x]], Times[2, p]], Power[Plus[d, Times[f, Power[x, 2]]], q], Plus[A, Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, f, A, C, p, q], x], ZeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], IntegersQ[p, q], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, b, c, d, e, f, A, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], IntegersQ[p, q], Greater[p, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, c, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], IntegersQ[p, q], Or[Greater[p, 0], Greater[q, 0]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[ExpandIntegrand[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[C, Power[x, 2]]]], x], x], And[FreeQ[List[a, c, d, e, f, A, C], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], IntegersQ[p, q], Or[Greater[p, 0], Greater[q, 0]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, b, c], Times[-1, 2, a, B, c], Times[a, b, C], Times[-1, Plus[Times[c, Plus[Times[b, B], Times[-1, 2, A, c]]], Times[-1, C, Plus[Power[b, 2], Times[-1, 2, a, c]]]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[e, q, Plus[Times[A, b, c], Times[-1, 2, a, B, c], Times[a, b, C]]], Times[-1, d, Plus[Times[c, Plus[Times[b, B], Times[-1, 2, A, c]], Plus[Times[2, p], 3]], Times[C, Plus[Times[2, a, c], Times[-1, Power[b, 2], Plus[p, 2]]]]]], Times[Plus[Times[2, f, q, Plus[Times[A, b, c], Times[-1, 2, a, B, c], Times[a, b, C]]], Times[-1, e, Plus[Times[c, Plus[Times[b, B], Times[-1, 2, A, c]], Plus[Times[2, p], q, 3]], Times[C, Plus[Times[2, a, c, Plus[q, 1]], Times[-1, Power[b, 2], Plus[p, q, 2]]]]]]], x], Times[-1, f, Plus[Times[c, Plus[Times[b, B], Times[-1, 2, A, c]], Plus[Times[2, p], Times[2, q], 3]], Times[C, Plus[Times[2, a, c, Plus[Times[2, q], 1]], Times[-1, Power[b, 2], Plus[p, Times[2, q], 2]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, b, c], Times[a, b, C], Times[Plus[Times[2, A, Power[c, 2]], Times[C, Plus[Power[b, 2], Times[-1, 2, a, c]]]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[A, c, Plus[Times[2, c, d, Plus[Times[2, p], 3]], Times[b, e, q]]], Times[-1, C, Plus[Times[2, a, c, d], Times[-1, Power[b, 2], d, Plus[p, 2]], Times[-1, a, b, e, q]]], Times[Plus[Times[C, Plus[Times[2, a, b, f, q], Times[-1, 2, a, c, e, Plus[q, 1]], Times[Power[b, 2], e, Plus[p, q, 2]]]], Times[2, A, c, Plus[Times[b, f, q], Times[c, e, Plus[Times[2, p], q, 3]]]]], x], Times[-1, f, Plus[Times[-2, A, Power[c, 2], Plus[Times[2, p], Times[2, q], 3]], Times[C, Plus[Times[2, a, c, Plus[Times[2, q], 1]], Times[-1, Power[b, 2], Plus[p, Times[2, q], 2]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, A, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[a, B], Times[-1, Plus[Times[A, c], Times[-1, a, C]], x]], Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Power[Times[2, a, c, Plus[p, 1]], -1]], x], Times[-1, Dist[Times[2, Power[Times[Times[-4, a, c], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[A, c, d, Plus[Times[2, p], 3]], Times[-1, a, Plus[Times[C, d], Times[B, e, q]]], Times[Plus[Times[A, c, e, Plus[Times[2, p], q, 3]], Times[-1, a, Plus[Times[2, B, f, q], Times[C, e, Plus[q, 1]]]]], x], Times[-1, f, Plus[Times[a, C, Plus[Times[2, q], 1]], Times[-1, A, c, Plus[Times[2, p], Times[2, q], 3]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Times[-1, Simp[Times[Plus[Times[A, c], Times[-1, a, C]], x, Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Power[Times[2, a, c, Plus[p, 1]], -1]], x]], Dist[Times[2, Power[Times[4, a, c, Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[A, c, d, Plus[Times[2, p], 3]], Times[-1, a, C, d], Times[Plus[Times[A, c, e, Plus[Times[2, p], q, 3]], Times[-1, a, C, e, Plus[q, 1]]], x], Times[-1, f, Plus[Times[a, C, Plus[Times[2, q], 1]], Times[-1, A, c, Plus[Times[2, p], Times[2, q], 3]]], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, A, C], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, b, c], Times[-1, 2, a, B, c], Times[a, b, C], Times[-1, Plus[Times[c, Plus[Times[b, B], Times[-1, 2, A, c]]], Times[-1, C, Plus[Power[b, 2], Times[-1, 2, a, c]]]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[-1, d, Plus[Times[c, Plus[Times[b, B], Times[-1, 2, A, c]], Plus[Times[2, p], 3]], Times[C, Plus[Times[2, a, c], Times[-1, Power[b, 2], Plus[p, 2]]]]]], Times[Times[2, f, q, Plus[Times[A, b, c], Times[-1, 2, a, B, c], Times[a, b, C]]], x], Times[-1, f, Plus[Times[c, Plus[Times[b, B], Times[-1, 2, A, c]], Plus[Times[2, p], Times[2, q], 3]], Times[C, Plus[Times[2, a, c, Plus[Times[2, q], 1]], Times[-1, Power[b, 2], Plus[p, Times[2, q], 2]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, A, B, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[A, b, c], Times[a, b, C], Times[Plus[Times[2, A, Power[c, 2]], Times[C, Plus[Power[b, 2], Times[-1, 2, a, c]]]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], x], Times[-1, Dist[Times[1, Power[Times[c, Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, -1]], Simp[Plus[Times[A, c, Times[2, c, d, Plus[Times[2, p], 3]]], Times[-1, C, Plus[Times[2, a, c, d], Times[-1, Power[b, 2], d, Plus[p, 2]]]], Times[Plus[Times[C, Times[2, a, b, f, q]], Times[2, A, c, Times[b, f, q]]], x], Times[-1, f, Plus[Times[-2, A, Power[c, 2], Plus[Times[2, p], Times[2, q], 3]], Times[C, Plus[Times[2, a, c, Plus[Times[2, q], 1]], Times[-1, Power[b, 2], Plus[p, Times[2, q], 2]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, A, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p, q], Less[p, -1], Greater[q, 0]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], -1], Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Plus[Times[2, a, c, e], Times[-1, b, Plus[Times[c, d], Times[a, f]]]]], Times[Plus[Times[A, b], Times[-1, a, B]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]], Times[c, Plus[Times[A, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]], Times[-1, B, Plus[Times[b, c, d], Times[-1, 2, a, c, e], Times[a, b, f]]], Times[C, Plus[Times[Power[b, 2], d], Times[-1, a, b, e], Times[-1, 2, a, Plus[Times[c, d], Times[-1, a, f]]]]]], x]]], x], Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[Plus[Times[b, B], Times[-1, 2, A, c], Times[-1, 2, a, C]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], Times[Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[-1, b, Plus[Times[B, c, d], Times[A, c, e], Times[a, C, e], Times[a, B, f]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, B, c, e], Times[-1, a, C, f]]]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, e, Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Plus[Times[2, a, c, e], Times[-1, b, Plus[Times[c, d], Times[a, f]]]]], Times[Plus[Times[A, b], Times[-1, a, B]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[2, f, Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Plus[Times[2, a, c, e], Times[-1, b, Plus[Times[c, d], Times[a, f]]]]], Times[Plus[Times[A, b], Times[-1, a, B]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[-1, b, Plus[Times[B, c, d], Times[A, c, e], Times[a, C, e], Times[a, B, f]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, B, c, e], Times[-1, a, C, f]]]]]], Plus[Times[b, f, Plus[p, 1]], Times[-1, c, e, Plus[Times[2, p], q, 4]]]]], x], Times[-1, c, f, Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[-1, b, Plus[Times[B, c, d], Times[A, c, e], Times[a, C, e], Times[a, B, f]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, B, c, e], Times[-1, a, C, f]]]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, A, B, C, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], -1], Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Plus[Times[2, a, c, e], Times[-1, b, Plus[Times[c, d], Times[a, f]]]]], Times[Times[A, b], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]], Times[c, Plus[Times[A, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]], Times[C, Plus[Times[Power[b, 2], d], Times[-1, a, b, e], Times[-1, 2, a, Plus[Times[c, d], Times[-1, a, f]]]]]], x]]], x], Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[Plus[Times[-2, A, c], Times[-1, 2, a, C]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]], Plus[p, 1]], Times[Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[-1, b, Plus[Times[Plus[A], c, e], Times[a, C, e]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, e, Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Plus[Times[2, a, c, e], Times[-1, b, Plus[Times[c, d], Times[a, f]]]]], Times[Times[A, b], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[2, f, Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Plus[Times[2, a, c, e], Times[-1, b, Plus[Times[c, d], Times[a, f]]]]], Times[Times[A, b], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Plus[Times[b, e], Times[2, a, f]]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[-1, b, Plus[Times[A, c, e], Times[a, C, e]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]]], Plus[Times[b, f, Plus[p, 1]], Times[-1, c, e, Plus[Times[2, p], q, 4]]]]], x], Times[-1, c, f, Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[-1, b, Plus[Times[A, c, e], Times[a, C, e]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, e, f, A, C, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[c, e], Times[-1, b, f]]]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Times[-4, a, c], Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1], Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Times[2, a, c, e]], Times[Times[-1, a, B], Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[2, a, f]]]], Times[c, Plus[Times[A, Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[2, a, f]]]], Times[-1, B, Times[-2, a, c, e]], Times[C, Times[-2, a, Plus[Times[c, d], Times[-1, a, f]]]]], x]]], x], Dist[Times[1, Power[Times[Times[-4, a, c], Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[Plus[Times[-2, A, c], Times[-1, 2, a, C]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Times[-1, a, e], Times[c, e]]], Plus[p, 1]], Times[Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, B, c, e], Times[-1, a, C, f]]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, e, Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Times[2, a, c, e]], Times[Times[-1, a, B], Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[Plus[2], a, f]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[2, f, Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Times[2, a, c, e]], Times[Times[-1, a, B], Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[Plus[2], a, f]]]]], Plus[p, q, 2]], Times[-1, Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, B, c, e], Times[-1, a, C, f]]]]], Times[-1, c, e, Plus[Times[2, p], q, 4]]]], x], Times[-1, c, f, Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, B, c, e], Times[-1, a, C, f]]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, A, B, C, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Times[-4, a, c], Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1], Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Times[2, a, c, e]], Times[c, Plus[Times[A, Plus[Times[2, Power[c, 2], d], Times[-1, c, Times[2, a, f]]]], Times[C, Times[-2, a, Plus[Times[c, d], Times[-1, a, f]]]]], x]]], x], Dist[Times[1, Power[Times[Times[-4, a, c], Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[Plus[Times[-2, A, c], Times[-1, 2, a, C]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Times[-1, a, e], Times[c, e]]], Plus[p, 1]], Times[Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, e, Times[Plus[Times[A, c], Times[-1, a, C]], Times[2, a, c, e]], Plus[p, q, 2]], Times[-1, Plus[Times[2, f, Times[Plus[Times[A, c], Times[-1, a, C]], Times[2, a, c, e]], Plus[p, q, 2]], Times[-1, Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]], Times[-1, c, e, Plus[Times[2, p], q, 4]]]], x], Times[-1, c, f, Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, c, d, e, f, A, C, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[a, c, Power[e, 2]], Power[Plus[Times[c, d], Times[-1, a, f]], 2]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1], Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Times[-1, b, Plus[Times[c, d], Times[a, f]]]], Times[Plus[Times[A, b], Times[-1, a, B]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]]], Times[c, Plus[Times[A, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]]], Times[-1, B, Plus[Times[b, c, d], Times[a, b, f]]], Times[C, Plus[Times[Power[b, 2], d], Times[-1, 2, a, Plus[Times[c, d], Times[-1, a, f]]]]]], x]]], x], Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Simp[Plus[Times[Plus[Times[b, B], Times[-1, 2, A, c], Times[-1, 2, a, C]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Times[b, d], Times[-1, b, f]]], Plus[p, 1]], Times[Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[-1, b, Plus[Times[B, c, d], Times[a, B, f]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, Plus[Times[2, f, Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Times[-1, b, Plus[Times[c, d], Times[a, f]]]], Times[Plus[Times[A, b], Times[-1, a, B]], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[-1, b, Plus[Times[B, c, d], Times[a, B, f]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]]], Times[b, f, Plus[p, 1]]]], x], Times[-1, c, f, Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[-1, b, Plus[Times[B, c, d], Times[a, B, f]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, f, A, B, C, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1], Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Times[-1, b, Plus[Times[c, d], Times[a, f]]]], Times[Times[A, b], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]]], Times[c, Plus[Times[A, Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]]], Times[C, Plus[Times[Power[b, 2], d], Times[-1, 2, a, Plus[Times[c, d], Times[-1, a, f]]]]]], x]]], x], Dist[Times[1, Power[Times[Plus[Power[b, 2], Times[-1, 4, a, c]], Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]], Plus[p, 1]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, 1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Simp[Plus[Times[Plus[Times[-2, A, c], Times[-1, 2, a, C]], Plus[Power[Plus[Times[c, d], Times[-1, a, f]], 2], Times[-1, Times[b, d], Times[-1, b, f]]], Plus[p, 1]], Times[Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]]], Plus[Times[a, f, Plus[p, 1]], Times[-1, c, d, Plus[p, 2]]]], Times[-1, Plus[Times[2, f, Plus[Times[Plus[Times[A, c], Times[-1, a, C]], Times[-1, b, Plus[Times[c, d], Times[a, f]]]], Times[Times[A, b], Plus[Times[2, Power[c, 2], d], Times[Power[b, 2], f], Times[-1, c, Times[2, a, f]]]]], Plus[p, q, 2]], Times[-1, Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]]], Times[b, f, Plus[p, 1]]]], x], Times[-1, c, f, Plus[Times[Power[b, 2], Plus[Times[C, d], Times[A, f]]], Times[2, Plus[Times[A, c, Plus[Times[c, d], Times[-1, a, f]]], Times[-1, a, Plus[Times[c, C, d], Times[-1, a, C, f]]]]]], Plus[Times[2, p], Times[2, q], 5], Power[x, 2]]], x]], x], x]], And[FreeQ[List[a, b, c, d, f, A, C, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Less[p, -1], NonzeroQ[Plus[Times[Power[b, 2], d, f], Power[Plus[Times[c, d], Times[-1, a, f]], 2]]], Not[And[Not[IntegerQ[p]], IntegerQ[q], Less[q, -1]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[B, c, f, Plus[Times[2, p], Times[2, q], 3]], Times[C, Plus[Times[b, f, p], Times[-1, c, e, Plus[Times[2, p], q, 2]]]], Times[2, c, C, f, Plus[p, q, 1], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[p, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[C, Plus[Times[c, e], Times[-1, b, f]], Plus[q, 1]], Times[-1, c, Plus[Times[C, e], Times[-1, B, f]], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[Power[b, 2], C, d, f, p], Times[a, c, Plus[Times[C, Plus[Times[2, d, f], Times[-1, Power[e, 2], Plus[Times[2, p], q, 2]]]], Times[f, Plus[Times[B, e], Times[-1, 2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]], Times[Plus[Times[2, p, Plus[Times[c, d], Times[-1, a, f]], Plus[Times[C, Plus[Times[c, e], Times[-1, b, f]], Plus[q, 1]], Times[-1, c, Plus[Times[C, e], Times[-1, B, f]], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[C, e, f, p, Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[-1, b, c, Plus[Times[C, Plus[Power[e, 2], Times[-1, 4, d, f]], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[-1, B, e], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]]], x], Times[Plus[Times[p, Plus[Times[c, e], Times[-1, b, f]], Plus[Times[C, Plus[Times[c, e], Times[-1, b, f]], Plus[q, 1]], Times[-1, c, Plus[Times[C, e], Times[-1, B, f]], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[C, Power[f, 2], p, Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[-1, Power[c, 2], Plus[Times[C, Plus[Power[e, 2], Times[-1, 4, d, f]], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[-1, B, e], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, A, B, C, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[p, q, 1]], NonzeroQ[Plus[Times[2, p], Times[2, q], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[C, Plus[Times[b, f, p], Times[-1, c, e, Plus[Times[2, p], q, 2]]]], Times[2, c, C, f, Plus[p, q, 1], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[p, Plus[Times[b, d], Times[-1, a, e]], Plus[Times[C, Plus[Times[c, e], Times[-1, b, f]], Plus[q, 1]], Times[-1, c, Times[C, e], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[Power[b, 2], C, d, f, p], Times[a, c, Plus[Times[C, Plus[Times[2, d, f], Times[-1, Power[e, 2], Plus[Times[2, p], q, 2]]]], Times[f, Times[-2, A, f], Plus[Times[2, p], Times[2, q], 3]]]]]], Times[Plus[Times[2, p, Plus[Times[c, d], Times[-1, a, f]], Plus[Times[C, Plus[Times[c, e], Times[-1, b, f]], Plus[q, 1]], Times[-1, c, Times[C, e], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[C, e, f, p, Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[-1, b, c, Plus[Times[C, Plus[Power[e, 2], Times[-1, 4, d, f]], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]]], x], Times[Plus[Times[p, Plus[Times[c, e], Times[-1, b, f]], Plus[Times[C, Plus[Times[c, e], Times[-1, b, f]], Plus[q, 1]], Times[-1, c, Times[C, e], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[C, Power[f, 2], p, Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[-1, Power[c, 2], Plus[Times[C, Plus[Power[e, 2], Times[-1, 4, d, f]], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, e, f, A, C, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[p, q, 1]], NonzeroQ[Plus[Times[2, p], Times[2, q], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[B, c, f, Plus[Times[2, p], Times[2, q], 3]], Times[C, Times[-1, c, e, Plus[Times[2, p], q, 2]]], Times[2, c, C, f, Plus[p, q, 1], x]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[p, Times[-1, a, e], Plus[Times[C, Times[c, e], Plus[q, 1]], Times[-1, c, Plus[Times[C, e], Times[-1, B, f]], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Times[a, c, Plus[Times[C, Plus[Times[2, d, f], Times[-1, Power[e, 2], Plus[Times[2, p], q, 2]]]], Times[f, Plus[Times[B, e], Times[-1, 2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]], Times[Plus[Times[2, p, Plus[Times[c, d], Times[-1, a, f]], Plus[Times[C, Times[c, e], Plus[q, 1]], Times[-1, c, Plus[Times[C, e], Times[-1, B, f]], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Times[C, e, f, p, Times[-4, a, c]]]], x], Times[Plus[Times[p, Times[c, e], Plus[Times[C, Times[c, e], Plus[q, 1]], Times[-1, c, Plus[Times[C, e], Times[-1, B, f]], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[C, Power[f, 2], p, Times[-4, a, c]], Times[-1, Power[c, 2], Plus[Times[C, Plus[Power[e, 2], Times[-1, 4, d, f]], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[-1, B, e], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, A, B, C, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[p, q, 1]], NonzeroQ[Plus[Times[2, p], Times[2, q], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[C, Times[-1, c, e, Plus[Times[2, p], q, 2]]], Times[2, c, C, f, Plus[p, q, 1], x]], Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Simp[Plus[Times[p, Times[-1, a, e], Plus[Times[C, Times[c, e], Plus[q, 1]], Times[-1, c, Times[C, e], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Times[a, c, Plus[Times[C, Plus[Times[2, d, f], Times[-1, Power[e, 2], Plus[Times[2, p], q, 2]]]], Times[f, Times[-2, A, f], Plus[Times[2, p], Times[2, q], 3]]]]], Times[Plus[Times[2, p, Plus[Times[c, d], Times[-1, a, f]], Plus[Times[C, Times[c, e], Plus[q, 1]], Times[-1, c, Times[C, e], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Times[C, e, f, p, Times[-4, a, c]]]], x], Times[Plus[Times[p, Times[c, e], Plus[Times[C, Times[c, e], Plus[q, 1]], Times[-1, c, Times[C, e], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[C, Power[f, 2], p, Times[-4, a, c]], Times[-1, Power[c, 2], Plus[Times[C, Plus[Power[e, 2], Times[-1, 4, d, f]], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, c, d, e, f, A, C, q], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[p, q, 1]], NonzeroQ[Plus[Times[2, p], Times[2, q], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[B, c, f, Plus[Times[2, p], Times[2, q], 3]], Times[C, Times[b, f, p]], Times[2, c, C, f, Plus[p, q, 1], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Simp[Plus[Times[p, Times[b, d], Plus[Times[C, Times[-1, b, f], Plus[q, 1]], Times[-1, c, Times[-1, B, f], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[Power[b, 2], C, d, f, p], Times[a, c, Plus[Times[C, Times[2, d, f]], Times[f, Times[-2, A, f], Plus[Times[2, p], Times[2, q], 3]]]]]], Times[Plus[Times[2, p, Plus[Times[c, d], Times[-1, a, f]], Plus[Times[C, Times[-1, b, f], Plus[q, 1]], Times[-1, c, Times[-1, B, f], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Times[-1, b, c, Plus[Times[C, Times[-4, d, f], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]], x], Times[Plus[Times[p, Times[-1, b, f], Plus[Times[C, Times[-1, b, f], Plus[q, 1]], Times[-1, c, Times[-1, B, f], Plus[Times[2, p], Times[2, q], 3]]]], Times[Plus[p, q, 1], Plus[Times[C, Power[f, 2], p, Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[-1, Power[c, 2], Plus[Times[C, Times[-4, d, f], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, A, B, C, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[p, q, 1]], NonzeroQ[Plus[Times[2, p], Times[2, q], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Simp[Times[Plus[Times[C, Times[b, f, p]], Times[2, c, C, f, Plus[p, q, 1], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[f, Power[x, 2]]], Plus[q, 1]], Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], x], Times[-1, Dist[Times[1, Power[Times[2, c, Power[f, 2], Plus[p, q, 1], Plus[Times[2, p], Times[2, q], 3]], -1]], Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Plus[p, -1]], Power[Plus[d, Times[f, Power[x, 2]]], q], Simp[Plus[Times[p, Times[b, d], Times[C, Times[-1, b, f], Plus[q, 1]]], Times[Plus[p, q, 1], Plus[Times[Power[b, 2], C, d, f, p], Times[a, c, Plus[Times[C, Times[2, d, f]], Times[f, Times[-2, A, f], Plus[Times[2, p], Times[2, q], 3]]]]]], Times[Plus[Times[2, p, Plus[Times[c, d], Times[-1, a, f]], Times[C, Times[-1, b, f], Plus[q, 1]]], Times[Plus[p, q, 1], Times[-1, b, c, Plus[Times[C, Times[-4, d, f], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]], x], Times[Plus[Times[p, Times[-1, b, f], Times[C, Times[-1, b, f], Plus[q, 1]]], Times[Plus[p, q, 1], Plus[Times[C, Power[f, 2], p, Plus[Power[b, 2], Times[-1, 4, a, c]]], Times[-1, Power[c, 2], Plus[Times[C, Times[-4, d, f], Plus[Times[2, p], q, 2]], Times[f, Plus[Times[2, C, d], Times[2, A, f]], Plus[Times[2, p], Times[2, q], 3]]]]]]], Power[x, 2]]], x]], x], x]]], And[FreeQ[List[a, b, c, d, f, A, C, q], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], RationalQ[p], Greater[p, 0], NonzeroQ[Plus[p, q, 1]], NonzeroQ[Plus[Times[2, p], Times[2, q], 3]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, b, c, d, e], Times[a, c, Power[e, 2]], Times[Power[b, 2], d, f], Times[-1, 2, a, c, d, f], Times[-1, a, b, e, f], Times[Power[a, 2], Power[f, 2]]]]], Condition[Plus[Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[A, Power[c, 2], d], Times[-1, a, c, C, d], Times[-1, A, b, c, e], Times[a, B, c, e], Times[A, Power[b, 2], f], Times[-1, a, b, B, f], Times[-1, a, A, c, f], Times[Power[a, 2], C, f], Times[c, Plus[Times[B, c, d], Times[-1, b, C, d], Times[-1, A, c, e], Times[a, C, e], Times[A, b, f], Times[-1, a, B, f]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[c, C, Power[d, 2]], Times[-1, B, c, d, e], Times[A, c, Power[e, 2]], Times[b, B, d, f], Times[-1, A, c, d, f], Times[-1, a, C, d, f], Times[-1, A, b, e, f], Times[a, A, Power[f, 2]], Times[-1, f, Plus[Times[B, c, d], Times[-1, b, C, d], Times[-1, A, c, e], Times[a, C, e], Times[A, b, f], Times[-1, a, B, f]], x]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], -1]], x], x]], NonzeroQ[q]]], And[FreeQ[List[a, b, c, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Plus[Times[Power[c, 2], Power[d, 2]], Times[-1, b, c, d, e], Times[a, c, Power[e, 2]], Times[Power[b, 2], d, f], Times[-1, 2, a, c, d, f], Times[-1, a, b, e, f], Times[Power[a, 2], Power[f, 2]]]]], Condition[Plus[Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[A, Power[c, 2], d], Times[-1, a, c, C, d], Times[-1, A, b, c, e], Times[A, Power[b, 2], f], Times[-1, a, A, c, f], Times[Power[a, 2], C, f], Times[c, Plus[Times[-1, b, C, d], Times[-1, A, c, e], Times[a, C, e], Times[A, b, f]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[c, C, Power[d, 2]], Times[A, c, Power[e, 2]], Times[-1, A, c, d, f], Times[-1, a, C, d, f], Times[-1, A, b, e, f], Times[a, A, Power[f, 2]], Times[-1, f, Plus[Times[-1, b, C, d], Times[-1, A, c, e], Times[a, C, e], Times[A, b, f]], x]], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], -1]], x], x]], NonzeroQ[q]]], And[FreeQ[List[a, b, c, d, e, f, A, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Plus[Times[Power[c, 2], Power[d, 2]], Times[Power[b, 2], d, f], Times[-1, 2, a, c, d, f], Times[Power[a, 2], Power[f, 2]]]]], Condition[Plus[Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[A, Power[c, 2], d], Times[-1, a, c, C, d], Times[A, Power[b, 2], f], Times[-1, a, b, B, f], Times[-1, a, A, c, f], Times[Power[a, 2], C, f], Times[c, Plus[Times[B, c, d], Times[-1, b, C, d], Times[A, b, f], Times[-1, a, B, f]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[c, C, Power[d, 2]], Times[b, B, d, f], Times[-1, A, c, d, f], Times[-1, a, C, d, f], Times[a, A, Power[f, 2]], Times[-1, f, Plus[Times[B, c, d], Times[-1, b, C, d], Times[A, b, f], Times[-1, a, B, f]], x]], Power[Plus[d, Times[f, Power[x, 2]]], -1]], x], x]], NonzeroQ[q]]], And[FreeQ[List[a, b, c, d, f, A, B, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Pattern[d, Blank[]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1]], Pattern[x, Blank[Symbol]]]], Condition[With[List[Set[q, Plus[Times[Power[c, 2], Power[d, 2]], Times[Power[b, 2], d, f], Times[-1, 2, a, c, d, f], Times[Power[a, 2], Power[f, 2]]]]], Condition[Plus[Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[A, Power[c, 2], d], Times[-1, a, c, C, d], Times[A, Power[b, 2], f], Times[-1, a, A, c, f], Times[Power[a, 2], C, f], Times[c, Plus[Times[-1, b, C, d], Times[A, b, f]], x]], Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], -1]], x], x], Dist[Times[1, Power[q, -1]], Int[Times[Plus[Times[c, C, Power[d, 2]], Times[-1, A, c, d, f], Times[-1, a, C, d, f], Times[a, A, Power[f, 2]], Times[-1, f, Plus[Times[-1, b, C, d], Times[A, b, f]], x]], Power[Plus[d, Times[f, Power[x, 2]]], -1]], x], x]], NonzeroQ[q]]], And[FreeQ[List[a, b, c, d, f, A, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]], x], x], Dist[Times[1, Power[c, -1]], Int[Times[Plus[Times[A, c], Times[-1, a, C], Times[Plus[Times[B, c], Times[-1, b, C]], x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]], x], x], Dist[Times[1, Power[c, -1]], Int[Times[Plus[Times[A, c], Times[-1, a, C], Times[-1, b, C, x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, e, f, A, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]], x], x], Dist[Times[1, Power[c, -1]], Int[Times[Plus[Times[A, c], Times[-1, a, C], Times[B, c, x]], Power[Times[Plus[a, Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, A, B, C], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]], -1]], x], x], Dist[Times[Plus[Times[A, c], Times[-1, a, C]], Power[c, -1]], Int[Times[1, Power[Times[Plus[a, Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[e, x], Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, c, d, e, f, A, C], x], NonzeroQ[Plus[Power[e, 2], Times[-1, 4, d, f]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[d, Times[f, Power[x, 2]]]], -1]], x], x], Dist[Times[1, Power[c, -1]], Int[Times[Plus[Times[A, c], Times[-1, a, C], Times[Plus[Times[B, c], Times[-1, b, C]], x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, f, A, B, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Pattern[a, Blank[]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], -1], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Rational[-1, 2]]], Pattern[x, Blank[Symbol]]]], Condition[Plus[Dist[Times[C, Power[c, -1]], Int[Times[1, Power[Sqrt[Plus[d, Times[f, Power[x, 2]]]], -1]], x], x], Dist[Times[1, Power[c, -1]], Int[Times[Plus[Times[A, c], Times[-1, a, C], Times[-1, b, C, x]], Power[Times[Plus[a, Times[b, x], Times[c, Power[x, 2]]], Sqrt[Plus[d, Times[f, Power[x, 2]]]]], -1]], x], x]], And[FreeQ[List[a, b, c, d, f, A, C], x], NonzeroQ[Plus[Power[b, 2], Times[-1, 4, a, c]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], FreeQ[List[a, b, c, d, e, f, A, B, C, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[C, Power[x, 2]]]], x], FreeQ[List[a, b, c, d, e, f, A, C, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], FreeQ[List[a, c, d, e, f, A, B, C, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[p, Blank[]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[x, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[x, Blank[]], 2]]], Pattern[q, Blank[]]]], Pattern[x, Blank[Symbol]]]], Condition[Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[C, Power[x, 2]]]], x], FreeQ[List[a, c, d, e, f, A, C, p, q], x]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], x, u], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[u, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[B, x]]], x], x, u], x], And[FreeQ[List[a, b, c, d, e, f, A, B, C, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[b, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[b, x], Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[C, Power[x, 2]]]], x], x, u], x], And[FreeQ[List[a, b, c, d, e, f, A, C, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[B, x], Times[C, Power[x, 2]]]], x], x, u], x], And[FreeQ[List[a, c, d, e, f, A, B, C, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[B, Blank[]]], Pattern[u, Blank[]]]], Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[B, x]]], x], x, u], x], And[FreeQ[List[a, c, d, e, f, A, B, C, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]], RuleDelayed[HoldPattern[Int[Times[Power[Plus[Optional[Pattern[a, Blank[]]], Times[Optional[Pattern[c, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[p, Blank[]]]], Plus[Optional[Pattern[A, Blank[]]], Times[Optional[Pattern[C, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Power[Plus[Optional[Pattern[d, Blank[]]], Times[Optional[Pattern[e, Blank[]]], Pattern[u, Blank[]]], Times[Optional[Pattern[f, Blank[]]], Power[Pattern[u, Blank[]], 2]]], Optional[Pattern[q, Blank[]]]]], Pattern[x, Blank[Symbol]]]], Condition[Dist[Times[1, Power[Coefficient[u, x, 1], -1]], Subst[Int[Times[Power[Plus[a, Times[c, Power[x, 2]]], p], Power[Plus[d, Times[e, x], Times[f, Power[x, 2]]], q], Plus[A, Times[C, Power[x, 2]]]], x], x, u], x], And[FreeQ[List[a, c, d, e, f, A, C, p, q], x], LinearQ[u, x], NonzeroQ[Plus[u, Times[-1, x]]]]]]]